import type { ThirdwebClient } from "../../../client/client.js";
import { type AuthStoredTokenWithCookieReturnType, type OauthOption, type SendEmailOtpReturnType } from "../core/authentication/type.js";
export declare function sendVerificationEmail(options: {
    email: string;
    client: ThirdwebClient;
}): Promise<SendEmailOtpReturnType>;
export declare function sendVerificationSms(options: {
    phoneNumber: string;
    client: ThirdwebClient;
}): Promise<SendEmailOtpReturnType>;
export declare function validateEmailOTP(options: {
    email: string;
    otp: string;
    client: ThirdwebClient;
    recoveryCode?: string;
}): Promise<AuthStoredTokenWithCookieReturnType>;
export declare function socialLogin(oauthOptions: OauthOption, client: ThirdwebClient): Promise<AuthStoredTokenWithCookieReturnType>;
export declare function customJwt(authOptions: {
    jwt: string;
    password: string;
}, client: ThirdwebClient): Promise<AuthStoredTokenWithCookieReturnType>;
export declare function authEndpoint(authOptions: {
    payload: string;
    encryptionKey: string;
}, client: ThirdwebClient): Promise<AuthStoredTokenWithCookieReturnType>;
export declare function deleteActiveAccount(options: {
    client: ThirdwebClient;
}): Promise<boolean>;
//# sourceMappingURL=auth.d.ts.map