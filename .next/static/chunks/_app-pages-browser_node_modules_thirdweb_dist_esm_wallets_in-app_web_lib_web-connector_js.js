"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_wallets_in-app_web_lib_web-connector_js"],{

/***/ "(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticatorMetadata: function() { return /* binding */ authenticatorMetadata; }\n/* harmony export */ });\n/**\n * The source comes from\n * \"official\" https://mds.fidoalliance.org/\n * and the\n * \"community-driven\" https://github.com/passkeydeveloper/passkey-authenticator-aaguids\n * combined together.\n */ const authenticatorMetadata = {\n    \"00000000-0000-0000-0000-000000000000\": \"Unknown authenticator\",\n    \"0076631b-d4a0-427f-5773-0ec71c9e0279\": \"HYPR FIDO2 Authenticator\",\n    \"07a9f89c-6407-4594-9d56-621d5f1e358b\": \"NXP Semiconductros FIDO2 Conformance Testing CTAP2 Authenticator\",\n    \"08987058-cadc-4b81-b6e1-30de50dcbe96\": \"Windows Hello\",\n    \"09591fc6-9811-48f7-8f57-b9f23df6413f\": \"Pone Biometrics OFFPAD Authenticator\",\n    \"0acf3011-bc60-f375-fb53-6f05f43154e0\": \"Nymi FIDO2 Authenticator\",\n    \"0bb43545-fd2c-4185-87dd-feb0b2916ace\": \"Security Key NFC by Yubico - Enterprise Edition\",\n    \"0d9b2e56-566b-c393-2940-f821b7f15d6d\": \"Excelsecu eSecu FIDO2 Pro Security Key\",\n    \"0ea242b4-43c4-4a1b-8b17-dd6d0b6baec6\": \"Keeper\",\n    \"1105e4ed-af1d-02ff-ffff-ffffffffffff\": \"Egomet FIDO2 Authenticator for Android\",\n    \"12ded745-4bed-47d4-abaa-e713f51d6393\": \"Feitian AllinOne FIDO2 Authenticator\",\n    \"149a2021-8ef6-4133-96b8-81f8d5b7f1f5\": \"Security Key by Yubico with NFC\",\n    \"17290f1e-c212-34d0-1423-365d729f09d9\": \"Thales PIN iOS SDK\",\n    \"175cd298-83d2-4a26-b637-313c07a6434e\": \"Chunghwa Telecom FIDO2 Smart Card Authenticator\",\n    \"1c086528-58d5-f211-823c-356786e36140\": \"Atos CardOS FIDO2\",\n    \"20f0be98-9af9-986a-4b42-8eca4acb28e4\": \"Excelsecu eSecu FIDO2 Fingerprint Security Key\",\n    \"2194b428-9397-4046-8f39-007a1605a482\": \"IDPrime 931 Fido\",\n    \"23786452-f02d-4344-87ed-aaf703726881\": \"SafeNet eToken Fusion CC\",\n    \"2c0df832-92de-4be1-8412-88a8f074df4a\": \"Feitian FIDO Smart Card\",\n    \"2d3bec26-15ee-4f5d-88b2-53622490270b\": \"HID Crescendo Key V2\",\n    \"2fc0579f-8113-47ea-b116-bb5a8db9202a\": \"YubiKey 5 Series with NFC\",\n    \"2ffd6452-01da-471f-821b-ea4bf6c8676a\": \"IDPrime 941 Fido\",\n    \"30b5035e-d297-4fc1-b00b-addc96ba6a97\": \"OneSpan FIDO Touch\",\n    \"30b5035e-d297-4ff1-b00b-addc96ba6a98\": \"OneSpan DIGIPASS FX1 BIO\",\n    \"341e4da9-3c2e-8103-5a9f-aad887135200\": \"Ledger Nano S FIDO2 Authenticator\",\n    \"34f5766d-1536-4a24-9033-0e294e510fb0\": \"YubiKey 5 Series CTAP2.1 Preview Expired \",\n    \"361a3082-0278-4583-a16f-72a527f973e4\": \"eWBM eFA500 FIDO2 Authenticator\",\n    \"3789da91-f943-46bc-95c3-50ea2012f03a\": \"NEOWAVE Winkeo FIDO2\",\n    \"39a5647e-1853-446c-a1f6-a79bae9f5bc7\": \"IDmelon\",\n    \"3b1adb99-0dfe-46fd-90b8-7f7614a4de2a\": \"GoTrust Idem Key FIDO2 Authenticator\",\n    \"3e078ffd-4c54-4586-8baa-a77da113aec5\": \"Hideez Key 3 FIDO2\",\n    \"3e22415d-7fdf-4ea4-8a0c-dd60c4249b9d\": \"Feitian iePass FIDO Authenticator\",\n    \"3f59672f-20aa-4afe-b6f4-7e5e916b6d98\": \"Arculus FIDO 2.1 Key Card [P71]\",\n    \"42b4fb4a-2866-43b2-9bf7-6c6669c2e5d3\": \"Google Titan Security Key v2\",\n    \"454e5346-4944-4ffd-6c93-8e9267193e9a\": \"Ensurity ThinC\",\n    \"4b3f8944-d4f2-4d21-bb19-764a986ec160\": \"KeyXentic FIDO2 Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"4c0cf95d-2f40-43b5-ba42-4c83a11c04ba\": \"Feitian BioPass FIDO2 Pro Authenticator\",\n    \"4c50ff10-1057-4fc6-b8ed-43a529530c3c\": \"ImproveID Authenticator\",\n    \"4d41190c-7beb-4a84-8018-adf265a6352d\": \"Thales IDPrime FIDO Bio\",\n    \"4e768f2c-5fab-48b3-b300-220eb487752b\": \"Hideez Key 4 FIDO2 SDK\",\n    \"504d7149-4e4c-3841-4555-55445a677357\": \"WiSECURE AuthTron USB FIDO2 Authenticator\",\n    \"50a45b0c-80e7-f944-bf29-f552bfa2e048\": \"ACS FIDO Authenticator\",\n    \"516d3969-5a57-5651-5958-4e7a49434167\": \"SmartDisplayer BobeePass FIDO2 Authenticator\",\n    \"531126d6-e717-415c-9320-3d9aa6981239\": \"Dashlane\",\n    \"53414d53-554e-4700-0000-000000000000\": \"Samsung Pass\",\n    \"5343502d-5343-5343-6172-644649444f32\": \"ESS Smart Card Inc. Authenticator\",\n    \"54d9fee8-e621-4291-8b18-7157b99c5bec\": \"HID Crescendo Enabled\",\n    \"5626bed4-e756-430b-a7ff-ca78c8b12738\": \"VALMIDO PRO FIDO\",\n    \"58b44d0b-0a7c-f33a-fd48-f7153c871352\": \"Ledger Nano S Plus FIDO2 Authenticator\",\n    \"5ca1ab1e-1337-fa57-f1d0-a117e71ca702\": \"Allthenticator App: roaming BLE FIDO2 Allthenticator for Windows, Mac, Linux, and Allthenticate door readers\",\n    \"5d629218-d3a5-11ed-afa1-0242ac120002\": \"Swissbit iShield Key Pro\",\n    \"5fdb81b8-53f0-4967-a881-f5ec26fe4d18\": \"VinCSS FIDO2 Authenticator\",\n    \"6002f033-3c07-ce3e-d0f7-0ffe5ed42543\": \"Excelsecu eSecu FIDO2 Fingerprint Key\",\n    \"6028b017-b1d4-4c02-b4b3-afcdafc96bb2\": \"Windows Hello\",\n    \"61250591-b2bc-4456-b719-0b17be90bb30\": \"eWBM eFPA FIDO2 Authenticator\",\n    \"664d9f67-84a2-412a-9ff7-b4f7d8ee6d05\": \"OpenSK authenticator\",\n    \"66a0ccb3-bd6a-191f-ee06-e375c50b9846\": \"Thales Bio iOS SDK\",\n    \"692db549-7ae5-44d5-a1e5-dd20a493b723\": \"HID Crescendo Key\",\n    \"69700f79-d1fb-472e-bd9b-a3a3b9a9eda0\": \"Pone Biometrics OFFPAD Authenticator\",\n    \"6d44ba9b-f6ec-2e49-b930-0c8fe920cb73\": \"Security Key by Yubico with NFC\",\n    \"73402251-f2a8-4f03-873e-3cb6db604b03\": \"uTrust FIDO2 Security Key\",\n    \"73bb0cd4-e502-49b8-9c6f-b59445bf720b\": \"YubiKey 5 FIPS Series\",\n    \"74820b05-a6c9-40f9-8fb0-9f86aca93998\": \"SafeNet eToken Fusion\",\n    \"77010bd7-212a-4fc9-b236-d2ca5e9d4084\": \"Feitian BioPass FIDO2 Authenticator\",\n    \"771b48fd-d3d4-4f74-9232-fc157ab0507a\": \"Edge on Mac\",\n    \"7e3f3d30-3557-4442-bdae-139312178b39\": \"RSA DS100\",\n    \"820d89ed-d65a-409e-85cb-f73f0578f82a\": \"IDmelon iOS Authenticator\",\n    \"833b721a-ff5f-4d00-bb2e-bdda3ec01e29\": \"Feitian ePass FIDO2 Authenticator\",\n    \"83c47309-aabb-4108-8470-8be838b573cb\": \"YubiKey Bio Series (Enterprise Profile)\",\n    \"85203421-48f9-4355-9bc8-8a53846e5083\": \"YubiKey 5 FIPS Series with Lightning\",\n    \"87dbc5a1-4c94-4dc8-8a47-97d800fd1f3c\": \"eWBM eFA320 FIDO2 Authenticator\",\n    \"8836336a-f590-0921-301d-46427531eee6\": \"Thales Bio Android SDK\",\n    \"8876631b-d4a0-427f-5773-0ec71c9e0279\": \"Solo Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"88bbd2f0-342a-42e7-9729-dd158be5407a\": \"Precision InnaIT Key FIDO 2 Level 2 certified\",\n    \"8976631b-d4a0-427f-5773-0ec71c9e0279\": \"Solo Tap Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"89b19028-256b-4025-8872-255358d950e4\": \"Sentry Enterprises CTAP2 Authenticator\",\n    \"8c97a730-3f7b-41a6-87d6-1e9b62bda6f0\": \"FT-JCOS FIDO Fingerprint Card\",\n    \"8d1b1fcb-3c76-49a9-9129-5515b346aa02\": \"IDEMIA ID-ONE Card\",\n    \"91ad6b93-264b-4987-8737-3a690cad6917\": \"Token Ring FIDO2 Authenticator\",\n    \"931327dd-c89b-406c-a81e-ed7058ef36c6\": \"Swissbit iShield Key FIDO2\",\n    \"95442b2e-f15e-4def-b270-efb106facb4e\": \"eWBM eFA310 FIDO2 Authenticator\",\n    \"95e4d58c-056e-4a65-866d-f5a69659e880\": \"TruU Windows Authenticator\",\n    \"973446ca-e21c-9a9b-99f5-9b985a67af0f\": \"ACS FIDO Authenticator Card\",\n    \"9876631b-d4a0-427f-5773-0ec71c9e0279\": \"Somu Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"998f358b-2dd2-4cbe-a43a-e8107438dfb3\": \"OnlyKey Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"99bf4610-ec26-4252-b31f-7380ccd59db5\": \"ZTPass Card\",\n    \"9c835346-796b-4c27-8898-d6032f515cc5\": \"Cryptnox FIDO2\",\n    \"9d3df6ba-282f-11ed-a261-0242ac120002\": \"Arculus FIDO2/U2F Key Card\",\n    \"9ddd1817-af5a-4672-a2b9-3e3dd95000a9\": \"Windows Hello\",\n    \"9f0d8150-baa5-4c00-9299-ad62c8bb4e87\": \"GoTrust Idem Card FIDO2 Authenticator\",\n    \"9f77e279-a6e2-4d58-b700-31e5943c6a98\": \"Hyper FIDO Pro\",\n    \"a1f52be5-dfab-4364-b51c-2bd496b14a56\": \"OCTATCO EzFinger2 FIDO2 AUTHENTICATOR\",\n    \"a3975549-b191-fd67-b8fb-017e2917fdb3\": \"Excelsecu eSecu FIDO2 NFC Security Key\",\n    \"a4e9fc6d-4cbe-4758-b8ba-37598bb5bbaa\": \"Security Key NFC by Yubico\",\n    \"ab32f0c6-2239-afbb-c470-d2ef4e254db6\": \"TEST (DUMMY RECORD)\",\n    \"ab32f0c6-2239-afbb-c470-d2ef4e254db7\": \"TOKEN2 FIDO2 Security Key\",\n    \"adce0002-35bc-c60a-648b-0b25f1f05503\": \"Chrome on Mac\",\n    \"aeb6569c-f8fb-4950-ac60-24ca2bbe2e52\": \"HID Crescendo C2300\",\n    \"b267239b-954f-4041-a01b-ee4f33c145b6\": \"authenton1 - CTAP2.1\",\n    \"b50d5e0a-7f81-4959-9b12-f45407407503\": \"IDPrime 3940 FIDO\",\n    \"b5397666-4885-aa6b-cebf-e52262a439a2\": \"Chromium Browser\",\n    \"b6ede29c-3772-412c-8a78-539c1f4c62d2\": \"Feitian BioPass FIDO2 Plus Authenticator\",\n    \"b84e4048-15dc-4dd0-8640-f4f60813c8af\": \"NordPass\",\n    \"b92c3f9a-c014-4056-887f-140a2501163b\": \"Security Key by Yubico\",\n    \"b93fd961-f2e6-462f-b122-82002247de78\": \"Android Authenticator with SafetyNet Attestation\",\n    \"ba76a271-6eb6-4171-874d-b6428dbe3437\": \"ATKey.ProS\",\n    \"ba86dc56-635f-4141-aef6-00227b1b9af6\": \"TruU Windows Authenticator\",\n    \"bada5566-a7aa-401f-bd96-45619a55120d\": \"1Password\",\n    \"bbf4b6a7-679d-f6fc-c4f2-8ac0ddf9015a\": \"Excelsecu eSecu FIDO2 PRO Security Key\",\n    \"bc2fe499-0d8e-4ffe-96f3-94a82840cf8c\": \"OCTATCO EzQuant FIDO2 AUTHENTICATOR\",\n    \"be727034-574a-f799-5c76-0929e0430973\": \"Crayonic KeyVault K1 (USB-NFC-BLE FIDO2 Authenticator)\",\n    \"c1f9a0bc-1dd2-404a-b27f-8e29047a43fd\": \"YubiKey 5 FIPS Series with NFC\",\n    \"c5703116-972b-4851-a3e7-ae1259843399\": \"NEOWAVE Badgeo FIDO2\",\n    \"c5ef55ff-ad9a-4b9f-b580-adebafe026d0\": \"YubiKey 5 Series with Lightning\",\n    \"c80dbd9a-533f-4a17-b941-1a2f1c7cedff\": \"HID Crescendo C3000\",\n    \"ca4cff1b-5a81-4404-8194-59aabcf1660b\": \"IDPrime 3930 FIDO\",\n    \"ca87cb70-4c1b-4579-a8e8-4efdd7c007e0\": \"FIDO Alliance TruU Sample FIDO2 Authenticator\",\n    \"cb69481e-8ff7-4039-93ec-0a2729a154a8\": \"YubiKey 5 Series\",\n    \"cd69adb5-3c7a-deb9-3177-6800ea6cb72a\": \"Thales PIN Android SDK\",\n    \"cdbdaea2-c415-5073-50f7-c04e968640b6\": \"Excelsecu eSecu FIDO2 Security Key\",\n    \"cfcb13a2-244f-4b36-9077-82b79d6a7de7\": \"USB/NFC Passcode Authenticator\",\n    \"d384db22-4d50-ebde-2eac-5765cf1e2a44\": \"Excelsecu eSecu FIDO2 Fingerprint Security Key\",\n    \"d41f5a69-b817-4144-a13c-9ebd6d9254d6\": \"ATKey.Card CTAP2.0\",\n    \"d548826e-79b4-db40-a3d8-11116f7e8349\": \"Bitwarden\",\n    \"d61d3b87-3e7c-4aea-9c50-441c371903ad\": \"KeyVault Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"d7a423ad-3e19-4492-9200-78137dccc136\": \"VivoKey Apex FIDO2\",\n    \"d821a7d4-e97c-4cb6-bd82-4237731fd4be\": \"Hyper FIDO Bio Security Key\",\n    \"d8522d9f-575b-4866-88a9-ba99fa02f35b\": \"YubiKey Bio Series\",\n    \"d91c5288-0ef0-49b7-b8ae-21ca0aa6b3f3\": \"KEY-ID FIDO2 Authenticator\",\n    \"d94a29d9-52dd-4247-9c2d-8b818b610389\": \"VeriMark Guard Fingerprint Key\",\n    \"da1fa263-8b25-42b6-a820-c0036f21ba7f\": \"ATKey.Card NFC\",\n    \"dd4ec289-e01d-41c9-bb89-70fa845d4bf2\": \"iCloud Keychain (Managed)\",\n    \"e1a96183-5016-4f24-b55b-e3ae23614cc6\": \"ATKey.Pro CTAP2.0\",\n    \"e416201b-afeb-41ca-a03d-2281c28322aa\": \"ATKey.Pro CTAP2.1\",\n    \"e86addcd-7711-47e5-b42a-c18257b0bf61\": \"IDCore 3121 Fido\",\n    \"ea9b8d66-4d01-1d21-3ce4-b6b48cb575d4\": \"Google Password Manager\",\n    \"eabb46cc-e241-80bf-ae9e-96fa6d2975cf\": \"TOKEN2 PIN Plus Security Key Series \",\n    \"eb3b131e-59dc-536a-d176-cb7306da10f5\": \"ellipticSecure MIRkey USB Authenticator\",\n    \"ec31b4cc-2acc-4b8e-9c01-bade00ccbe26\": \"KeyXentic FIDO2 Secp256R1 FIDO2 CTAP2 Authenticator\",\n    \"ee041bce-25e5-4cdb-8f86-897fd6418464\": \"Feitian ePass FIDO2-NFC Authenticator\",\n    \"ee882879-721c-4913-9775-3dfcce97072a\": \"YubiKey 5 Series\",\n    \"efb96b10-a9ee-4b6c-a4a9-d32125ccd4a4\": \"Safenet eToken FIDO\",\n    \"f3809540-7f14-49c1-a8b3-8f813b225541\": \"Enpass\",\n    \"f4c63eff-d26c-4248-801c-3736c7eaa93a\": \"FIDO KeyPass S3\",\n    \"f7c558a0-f465-11e8-b568-0800200c9a66\": \"KONAI Secp256R1 FIDO2 Conformance Testing CTAP2 Authenticator\",\n    \"f8a011f3-8c0a-4d15-8006-17111f9edc7d\": \"Security Key by Yubico\",\n    \"fa2b99dc-9e39-4257-8f92-4a30d23c4118\": \"YubiKey 5 Series with NFC\",\n    \"fbefdf68-fe86-0106-213e-4d5fa24cbe2e\": \"Excelsecu eSecu FIDO2 NFC Security Key\",\n    \"fbfc3007-154e-4ecc-8c0b-6e020557d7bd\": \"iCloud Keychain\",\n    \"fcb1bcb4-f370-078c-6993-bc24d0ae3fbe\": \"Ledger Nano X FIDO2 Authenticator\",\n    \"fec067a1-f1d0-4c5e-b4c0-cc3237475461\": \"KX701 SmartToken FIDO\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticators.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/authenticators.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractAaguid: function() { return /* binding */ extractAaguid; },\n/* harmony export */   parseAuthBuffer: function() { return /* binding */ parseAuthBuffer; },\n/* harmony export */   resolveAuthenticatorName: function() { return /* binding */ resolveAuthenticatorName; },\n/* harmony export */   updateDevicesMetadata: function() { return /* binding */ updateDevicesMetadata; }\n/* harmony export */ });\n/* harmony import */ var _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authenticatorMetadata.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n\n\nfunction parseAuthBuffer(authData) {\n    //console.debug(authData)\n    let flags = new DataView(authData.slice(32, 33)).getUint8(0);\n    //console.debug(flags)\n    // https://w3c.github.io/webauthn/#sctn-authenticator-data\n    let parsed = {\n        rpIdHash: _utils_js__WEBPACK_IMPORTED_MODULE_1__.toBase64url(authData.slice(0, 32)),\n        flags: {\n            userPresent: !!(flags & 1),\n            //reserved1: !!(flags & 2),\n            userVerified: !!(flags & 4),\n            backupEligibility: !!(flags & 8),\n            backupState: !!(flags & 16),\n            //reserved2: !!(flags & 32),\n            attestedData: !!(flags & 64),\n            extensionsIncluded: !!(flags & 128)\n        },\n        counter: new DataView(authData.slice(33, 37)).getUint32(0, false)\n    };\n    // this is more descriptive than \"backupState\"\n    parsed.synced = parsed.flags.backupState;\n    if (authData.byteLength > 37) {\n        // registration contains additional data\n        const aaguid = extractAaguid(authData); // bytes 37->53\n        var _authenticatorMetadata_aaguid;\n        // https://w3c.github.io/webauthn/#attested-credential-data\n        parsed = {\n            ...parsed,\n            aaguid,\n            name: (_authenticatorMetadata_aaguid = _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_0__.authenticatorMetadata[aaguid]) !== null && _authenticatorMetadata_aaguid !== void 0 ? _authenticatorMetadata_aaguid : \"Unknown\",\n            icon_light: \"https://webauthn.passwordless.id/authenticators/\" + aaguid + \"-light.png\",\n            icon_dark: \"https://webauthn.passwordless.id/authenticators/\" + aaguid + \"-dark.png\"\n        };\n    }\n    return parsed;\n}\nfunction extractAaguid(authData) {\n    return formatAaguid(authData.slice(37, 53)); // 16 bytes\n}\nfunction formatAaguid(buffer) {\n    let aaguid = _utils_js__WEBPACK_IMPORTED_MODULE_1__.bufferToHex(buffer);\n    aaguid = aaguid.substring(0, 8) + \"-\" + aaguid.substring(8, 12) + \"-\" + aaguid.substring(12, 16) + \"-\" + aaguid.substring(16, 20) + \"-\" + aaguid.substring(20, 32);\n    return aaguid; // example: \"d41f5a69-b817-4144-a13c-9ebd6d9254d6\"\n}\n/**\n * Kept for compatibility purposes.\n * @deprecated\n */ function resolveAuthenticatorName(aaguid) {\n    const aaguidMetadata = updatedAuthenticatorMetadata !== null && updatedAuthenticatorMetadata !== void 0 ? updatedAuthenticatorMetadata : _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_0__.authenticatorMetadata; //await getAaguidMetadata()\n    return aaguidMetadata[aaguid];\n}\nlet updatedAuthenticatorMetadata = null;\n/**\n * Updates the built-in metadata according to raw data available at https://mds.fidoalliance.org/\n * This service delivers a list of AAGUIDs encoded as a JWT.\n * Kept for compatibility purposes.\n * @deprecated\n */ async function updateDevicesMetadata() {\n    // this function is rather resource intensive and time consuming\n    // therefore, the result is cached in local storage\n    const jwt = await (await fetch(\"https://mds.fidoalliance.org\")).text();\n    // the response is a JWT including all AAGUIDs and their metadata\n    console.debug(jwt);\n    // let us ignore the JWT verification, since this is solely for descriptive purposes, not signed data\n    const payload = jwt.split(\".\")[1].replaceAll(\"-\", \"+\").replaceAll(\"_\", \"/\");\n    const json = JSON.parse(atob(payload));\n    console.debug(json);\n    let aaguidMetadata = {};\n    for (const e of json.entries){\n        if (!e.aaguid || !e.metadataStatement) continue;\n        aaguidMetadata[e.aaguid] = e.metadataStatement.description;\n    }\n    console.debug(aaguidMetadata);\n    updatedAuthenticatorMetadata = aaguidMetadata;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticators.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/client.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/client.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticate: function() { return /* binding */ authenticate; },\n/* harmony export */   isAvailable: function() { return /* binding */ isAvailable; },\n/* harmony export */   isLocalAuthenticator: function() { return /* binding */ isLocalAuthenticator; },\n/* harmony export */   register: function() { return /* binding */ register; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n\n/**\n * Returns whether passwordless authentication is available on this browser/platform or not.\n */ function isAvailable() {\n    return !!window.PublicKeyCredential;\n}\n/**\n * Returns whether the device itself can be used as authenticator.\n */ async function isLocalAuthenticator() {\n    return await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\nasync function getAuthAttachment(authType) {\n    if (authType === \"local\") return \"platform\";\n    if (authType === \"roaming\" || authType === \"extern\") return \"cross-platform\";\n    if (authType === \"both\") return undefined; // The webauthn protocol considers `null` as invalid but `undefined` as \"both\"!\n    // the default case: \"auto\", depending on device capabilities\n    try {\n        if (await isLocalAuthenticator()) return \"platform\";\n        else return \"cross-platform\";\n    } catch (e) {\n        // might happen due to some security policies\n        // see https://w3c.github.io/webauthn/#sctn-isUserVerifyingPlatformAuthenticatorAvailable\n        return undefined; // The webauthn protocol considers `null` as invalid but `undefined` as \"both\"!\n    }\n}\nfunction getAlgoName(num) {\n    switch(num){\n        case -7:\n            return \"ES256\";\n        // case -8 ignored to to its rarity\n        case -257:\n            return \"RS256\";\n        default:\n            throw new Error(\"Unknown algorithm code: \".concat(num));\n    }\n}\n/**\n * Creates a cryptographic key pair, in order to register the public key for later passwordless authentication.\n *\n * @param {string} username\n * @param {string} challenge A server-side randomly generated string.\n * @param {Object} [options] Optional parameters.\n * @param {number} [options.timeout=60000] Number of milliseconds the user has to respond to the biometric/PIN check.\n * @param {'required'|'preferred'|'discouraged'} [options.userVerification='required'] Whether to prompt for biometric/PIN check or not.\n * @param {'auto'|'local'|'roaming'|'both'}       [options.authenticatorType='auto'] Which device to use as authenticator.\n *          'auto': if the local device can be used as authenticator it will be preferred. Otherwise it will prompt for a roaming device.\n *          'local': use the local device (using TouchID, FaceID, Windows Hello or PIN)\n *          'roaming': use a roaming device (security key or connected phone)\n *          'both': prompt the user to choose between local or roaming device. The UI and user interaction in this case is platform specific.\n * @param {boolean} [options.attestation=false] If enabled, the device attestation and clientData will be provided as Base64url encoded binary data.\n *                                Note that this is not available on some platforms.\n * @param {'discouraged'|'preferred'|'required'} [options.discoverable] A \"discoverable\" credential can be selected using `authenticate(...)` without providing credential IDs.\n *              Instead, a native pop-up will appear for user selection.\n *              This may have an impact on the \"passkeys\" user experience and syncing behavior of the key.\n */ async function register(username, challenge, options) {\n    options = options !== null && options !== void 0 ? options : {};\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isBase64url(challenge)) throw new Error(\"Provided challenge is not properly encoded in Base64url\");\n    var _options_domain, _options_domain1, _options_timeout, _options_userVerification, _options_authenticatorType, _options_discoverable;\n    const creationOptions = {\n        challenge: _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(challenge),\n        rp: {\n            id: (_options_domain = options.domain) !== null && _options_domain !== void 0 ? _options_domain : window.location.hostname,\n            name: (_options_domain1 = options.domain) !== null && _options_domain1 !== void 0 ? _options_domain1 : window.location.hostname\n        },\n        user: {\n            id: options.userHandle ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBuffer(options.userHandle) : await _utils_js__WEBPACK_IMPORTED_MODULE_0__.sha256(new TextEncoder().encode(\"passwordless.id-user:\" + username)),\n            name: username,\n            displayName: username\n        },\n        pubKeyCredParams: [\n            {\n                alg: -7,\n                type: \"public-key\"\n            },\n            {\n                alg: -257,\n                type: \"public-key\"\n            }\n        ],\n        timeout: (_options_timeout = options.timeout) !== null && _options_timeout !== void 0 ? _options_timeout : 60000,\n        authenticatorSelection: {\n            userVerification: (_options_userVerification = options.userVerification) !== null && _options_userVerification !== void 0 ? _options_userVerification : \"required\",\n            authenticatorAttachment: await getAuthAttachment((_options_authenticatorType = options.authenticatorType) !== null && _options_authenticatorType !== void 0 ? _options_authenticatorType : \"auto\"),\n            residentKey: (_options_discoverable = options.discoverable) !== null && _options_discoverable !== void 0 ? _options_discoverable : \"preferred\",\n            requireResidentKey: options.discoverable === \"required\" // mainly for backwards compatibility, see https://www.w3.org/TR/webauthn/#dictionary-authenticatorSelection\n        },\n        attestation: \"direct\"\n    };\n    if (options.debug) console.debug(creationOptions);\n    const credential = await navigator.credentials.create({\n        publicKey: creationOptions\n    }); //PublicKeyCredential\n    if (options.debug) console.debug(credential);\n    const response = credential.response; // AuthenticatorAttestationResponse\n    let registration = {\n        username: username,\n        credential: {\n            id: credential.id,\n            publicKey: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.getPublicKey()),\n            algorithm: getAlgoName(credential.response.getPublicKeyAlgorithm())\n        },\n        authenticatorData: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.getAuthenticatorData()),\n        clientData: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.clientDataJSON)\n    };\n    if (options.attestation) {\n        registration.attestationData = _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.attestationObject);\n    }\n    return registration;\n}\nasync function getTransports(authType) {\n    const local = [\n        \"internal\"\n    ];\n    // 'hybrid' was added mid-2022 in the specs and currently not yet available in the official dom types\n    // @ts-ignore\n    const roaming = [\n        \"hybrid\",\n        \"usb\",\n        \"ble\",\n        \"nfc\"\n    ];\n    if (authType === \"local\") return local;\n    if (authType == \"roaming\" || authType === \"extern\") return roaming;\n    if (authType === \"both\") return [\n        ...local,\n        ...roaming\n    ];\n    // the default case: \"auto\", depending on device capabilities\n    try {\n        if (await isLocalAuthenticator()) return local;\n        else return roaming;\n    } catch (e) {\n        return [\n            ...local,\n            ...roaming\n        ];\n    }\n}\n/**\n * Signs a challenge using one of the provided credentials IDs in order to authenticate the user.\n *\n * @param {string[]} credentialIds The list of credential IDs that can be used for signing.\n * @param {string} challenge A server-side randomly generated string, the base64 encoded version will be signed.\n * @param {Object} [options] Optional parameters.\n * @param {number} [options.timeout=60000] Number of milliseconds the user has to respond to the biometric/PIN check.\n * @param {'required'|'preferred'|'discouraged'} [options.userVerification='required'] Whether to prompt for biometric/PIN check or not.\n * @param {'optional'|'conditional'|'required'|'silent'} [options.mediation='optional'] https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get#mediation\n */ async function authenticate(credentialIds, challenge, options) {\n    options = options !== null && options !== void 0 ? options : {};\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isBase64url(challenge)) throw new Error(\"Provided challenge is not properly encoded in Base64url\");\n    var _options_authenticatorType;\n    const transports = await getTransports((_options_authenticatorType = options.authenticatorType) !== null && _options_authenticatorType !== void 0 ? _options_authenticatorType : \"auto\");\n    var _options_domain, _options_userVerification, _options_timeout;\n    let authOptions = {\n        challenge: _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(challenge),\n        rpId: (_options_domain = options.domain) !== null && _options_domain !== void 0 ? _options_domain : window.location.hostname,\n        allowCredentials: credentialIds.map((id)=>{\n            return {\n                id: _utils_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64url(id),\n                type: \"public-key\",\n                transports: transports\n            };\n        }),\n        userVerification: (_options_userVerification = options.userVerification) !== null && _options_userVerification !== void 0 ? _options_userVerification : \"required\",\n        timeout: (_options_timeout = options.timeout) !== null && _options_timeout !== void 0 ? _options_timeout : 60000\n    };\n    if (options.debug) console.debug(authOptions);\n    let auth = await navigator.credentials.get({\n        publicKey: authOptions,\n        mediation: options.mediation\n    });\n    if (options.debug) console.debug(auth);\n    const response = auth.response;\n    const authentication = {\n        credentialId: auth.id,\n        authenticatorData: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.authenticatorData),\n        clientData: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.clientDataJSON),\n        signature: _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.signature),\n        userHandle: response.userHandle ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.toBase64url(response.userHandle) : undefined // may not be returned by every authenticator\n    };\n    return authentication;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/client.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authenticatorMetadata: function() { return /* reexport safe */ _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_4__.authenticatorMetadata; },\n/* harmony export */   client: function() { return /* reexport module object */ _client_js__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   parsers: function() { return /* reexport module object */ _parsers_js__WEBPACK_IMPORTED_MODULE_2__; },\n/* harmony export */   server: function() { return /* reexport module object */ _server_js__WEBPACK_IMPORTED_MODULE_1__; },\n/* harmony export */   utils: function() { return /* reexport module object */ _utils_js__WEBPACK_IMPORTED_MODULE_3__; }\n/* harmony export */ });\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/client.js\");\n/* harmony import */ var _server_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./server.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/server.js\");\n/* harmony import */ var _parsers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parsers.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n/* harmony import */ var _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./authenticatorMetadata.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticatorMetadata.js\");\n/*\nexport * from './types'\nexport * from './webauthn'\nexport * from './parsers'\nexport * from './validation'\n*/ \n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    client: _client_js__WEBPACK_IMPORTED_MODULE_0__,\n    server: _server_js__WEBPACK_IMPORTED_MODULE_1__,\n    parsers: _parsers_js__WEBPACK_IMPORTED_MODULE_2__,\n    utils: _utils_js__WEBPACK_IMPORTED_MODULE_3__,\n    authenticatorMetadata: _authenticatorMetadata_js__WEBPACK_IMPORTED_MODULE_4__.authenticatorMetadata\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFzc3dvcmRsZXNzLWlkL3dlYmF1dGhuL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7QUFLQSxHQUNzQztBQUNBO0FBQ0U7QUFDSjtBQUMrQjtBQUNGO0FBQ2pFLCtEQUFlO0lBQUVBLE1BQU1BLHlDQUFBQTtJQUFFQyxNQUFNQSx5Q0FBQUE7SUFBRUMsT0FBT0EsMENBQUFBO0lBQUVDLEtBQUtBLHdDQUFBQTtJQUFFQyxxQkFBcUJBLDhFQUFBQTtBQUFDLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS9pbmRleC5qcz9lNTU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5leHBvcnQgKiBmcm9tICcuL3R5cGVzJ1xuZXhwb3J0ICogZnJvbSAnLi93ZWJhdXRobidcbmV4cG9ydCAqIGZyb20gJy4vcGFyc2VycydcbmV4cG9ydCAqIGZyb20gJy4vdmFsaWRhdGlvbidcbiovXG5pbXBvcnQgKiBhcyBjbGllbnQgZnJvbSAnLi9jbGllbnQuanMnO1xuaW1wb3J0ICogYXMgc2VydmVyIGZyb20gJy4vc2VydmVyLmpzJztcbmltcG9ydCAqIGFzIHBhcnNlcnMgZnJvbSAnLi9wYXJzZXJzLmpzJztcbmltcG9ydCAqIGFzIHV0aWxzIGZyb20gJy4vdXRpbHMuanMnO1xuaW1wb3J0IHsgYXV0aGVudGljYXRvck1ldGFkYXRhIH0gZnJvbSAnLi9hdXRoZW50aWNhdG9yTWV0YWRhdGEuanMnO1xuZXhwb3J0IHsgY2xpZW50LCBzZXJ2ZXIsIHBhcnNlcnMsIHV0aWxzLCBhdXRoZW50aWNhdG9yTWV0YWRhdGEgfTtcbmV4cG9ydCBkZWZhdWx0IHsgY2xpZW50LCBzZXJ2ZXIsIHBhcnNlcnMsIHV0aWxzLCBhdXRoZW50aWNhdG9yTWV0YWRhdGEgfTtcbiJdLCJuYW1lcyI6WyJjbGllbnQiLCJzZXJ2ZXIiLCJwYXJzZXJzIiwidXRpbHMiLCJhdXRoZW50aWNhdG9yTWV0YWRhdGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js":
/*!********************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseAttestation: function() { return /* binding */ parseAttestation; },\n/* harmony export */   parseAuthentication: function() { return /* binding */ parseAuthentication; },\n/* harmony export */   parseAuthenticator: function() { return /* binding */ parseAuthenticator; },\n/* harmony export */   parseClient: function() { return /* binding */ parseClient; },\n/* harmony export */   parseRegistration: function() { return /* binding */ parseRegistration; }\n/* harmony export */ });\n/* harmony import */ var _authenticators_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./authenticators.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/authenticators.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n\n\nconst utf8Decoder = new TextDecoder(\"utf-8\");\nfunction parseClient(data) {\n    if (typeof data == \"string\") data = _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(data);\n    return JSON.parse(utf8Decoder.decode(data));\n}\nfunction parseAuthenticator(data) {\n    if (typeof data == \"string\") data = _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(data);\n    return _authenticators_js__WEBPACK_IMPORTED_MODULE_0__.parseAuthBuffer(data);\n}\nfunction parseAttestation(data) {\n    //if(typeof data == 'string')\n    //    data = utils.parseBase64url(data)\n    // Useless comment, let's at least provide the raw value \n    // return \"The device attestation proves the authenticity of the device model / aaguid. It's not guaranteed to be included and really complex to parse / verify. Good luck with that one!\"\n    return data;\n}\nfunction parseRegistration(registration) {\n    return {\n        username: registration.username,\n        credential: registration.credential,\n        client: parseClient(registration.clientData),\n        authenticator: parseAuthenticator(registration.authenticatorData),\n        attestation: registration.attestationData ? parseAttestation(registration.attestationData) : null\n    };\n}\nfunction parseAuthentication(authentication) {\n    return {\n        credentialId: authentication.credentialId,\n        client: parseClient(authentication.clientData),\n        authenticator: parseAuthenticator(authentication.authenticatorData),\n        signature: authentication.signature\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFzc3dvcmRsZXNzLWlkL3dlYmF1dGhuL2Rpc3QvZXNtL3BhcnNlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFzRDtBQUNsQjtBQUNwQyxNQUFNRSxjQUFjLElBQUlDLFlBQVk7QUFDN0IsU0FBU0MsWUFBWUMsSUFBSTtJQUM1QixJQUFJLE9BQU9BLFFBQVEsVUFDZkEsT0FBT0oscURBQW9CLENBQUNJO0lBQ2hDLE9BQU9FLEtBQUtDLEtBQUssQ0FBQ04sWUFBWU8sTUFBTSxDQUFDSjtBQUN6QztBQUNPLFNBQVNLLG1CQUFtQkwsSUFBSTtJQUNuQyxJQUFJLE9BQU9BLFFBQVEsVUFDZkEsT0FBT0oscURBQW9CLENBQUNJO0lBQ2hDLE9BQU9MLCtEQUE4QixDQUFDSztBQUMxQztBQUNPLFNBQVNPLGlCQUFpQlAsSUFBSTtJQUNqQyw2QkFBNkI7SUFDN0IsdUNBQXVDO0lBQ3ZDLHlEQUF5RDtJQUN6RCwwTEFBMEw7SUFDMUwsT0FBT0E7QUFDWDtBQUNPLFNBQVNRLGtCQUFrQkMsWUFBWTtJQUMxQyxPQUFPO1FBQ0hDLFVBQVVELGFBQWFDLFFBQVE7UUFDL0JDLFlBQVlGLGFBQWFFLFVBQVU7UUFDbkNDLFFBQVFiLFlBQVlVLGFBQWFJLFVBQVU7UUFDM0NDLGVBQWVULG1CQUFtQkksYUFBYU0saUJBQWlCO1FBQ2hFQyxhQUFhUCxhQUFhUSxlQUFlLEdBQUdWLGlCQUFpQkUsYUFBYVEsZUFBZSxJQUFJO0lBQ2pHO0FBQ0o7QUFDTyxTQUFTQyxvQkFBb0JDLGNBQWM7SUFDOUMsT0FBTztRQUNIQyxjQUFjRCxlQUFlQyxZQUFZO1FBQ3pDUixRQUFRYixZQUFZb0IsZUFBZU4sVUFBVTtRQUM3Q0MsZUFBZVQsbUJBQW1CYyxlQUFlSixpQkFBaUI7UUFDbEVNLFdBQVdGLGVBQWVFLFNBQVM7SUFDdkM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHBhc3N3b3JkbGVzcy1pZC93ZWJhdXRobi9kaXN0L2VzbS9wYXJzZXJzLmpzP2Y4MGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYXV0aGVudGljYXRvcnMgZnJvbSAnLi9hdXRoZW50aWNhdG9ycy5qcyc7XG5pbXBvcnQgKiBhcyB1dGlscyBmcm9tICcuL3V0aWxzLmpzJztcbmNvbnN0IHV0ZjhEZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCd1dGYtOCcpO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQ2xpZW50KGRhdGEpIHtcbiAgICBpZiAodHlwZW9mIGRhdGEgPT0gJ3N0cmluZycpXG4gICAgICAgIGRhdGEgPSB1dGlscy5wYXJzZUJhc2U2NHVybChkYXRhKTtcbiAgICByZXR1cm4gSlNPTi5wYXJzZSh1dGY4RGVjb2Rlci5kZWNvZGUoZGF0YSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQXV0aGVudGljYXRvcihkYXRhKSB7XG4gICAgaWYgKHR5cGVvZiBkYXRhID09ICdzdHJpbmcnKVxuICAgICAgICBkYXRhID0gdXRpbHMucGFyc2VCYXNlNjR1cmwoZGF0YSk7XG4gICAgcmV0dXJuIGF1dGhlbnRpY2F0b3JzLnBhcnNlQXV0aEJ1ZmZlcihkYXRhKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUF0dGVzdGF0aW9uKGRhdGEpIHtcbiAgICAvL2lmKHR5cGVvZiBkYXRhID09ICdzdHJpbmcnKVxuICAgIC8vICAgIGRhdGEgPSB1dGlscy5wYXJzZUJhc2U2NHVybChkYXRhKVxuICAgIC8vIFVzZWxlc3MgY29tbWVudCwgbGV0J3MgYXQgbGVhc3QgcHJvdmlkZSB0aGUgcmF3IHZhbHVlIFxuICAgIC8vIHJldHVybiBcIlRoZSBkZXZpY2UgYXR0ZXN0YXRpb24gcHJvdmVzIHRoZSBhdXRoZW50aWNpdHkgb2YgdGhlIGRldmljZSBtb2RlbCAvIGFhZ3VpZC4gSXQncyBub3QgZ3VhcmFudGVlZCB0byBiZSBpbmNsdWRlZCBhbmQgcmVhbGx5IGNvbXBsZXggdG8gcGFyc2UgLyB2ZXJpZnkuIEdvb2QgbHVjayB3aXRoIHRoYXQgb25lIVwiXG4gICAgcmV0dXJuIGRhdGE7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VSZWdpc3RyYXRpb24ocmVnaXN0cmF0aW9uKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdXNlcm5hbWU6IHJlZ2lzdHJhdGlvbi51c2VybmFtZSxcbiAgICAgICAgY3JlZGVudGlhbDogcmVnaXN0cmF0aW9uLmNyZWRlbnRpYWwsXG4gICAgICAgIGNsaWVudDogcGFyc2VDbGllbnQocmVnaXN0cmF0aW9uLmNsaWVudERhdGEpLFxuICAgICAgICBhdXRoZW50aWNhdG9yOiBwYXJzZUF1dGhlbnRpY2F0b3IocmVnaXN0cmF0aW9uLmF1dGhlbnRpY2F0b3JEYXRhKSxcbiAgICAgICAgYXR0ZXN0YXRpb246IHJlZ2lzdHJhdGlvbi5hdHRlc3RhdGlvbkRhdGEgPyBwYXJzZUF0dGVzdGF0aW9uKHJlZ2lzdHJhdGlvbi5hdHRlc3RhdGlvbkRhdGEpIDogbnVsbFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VBdXRoZW50aWNhdGlvbihhdXRoZW50aWNhdGlvbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIGNyZWRlbnRpYWxJZDogYXV0aGVudGljYXRpb24uY3JlZGVudGlhbElkLFxuICAgICAgICBjbGllbnQ6IHBhcnNlQ2xpZW50KGF1dGhlbnRpY2F0aW9uLmNsaWVudERhdGEpLFxuICAgICAgICBhdXRoZW50aWNhdG9yOiBwYXJzZUF1dGhlbnRpY2F0b3IoYXV0aGVudGljYXRpb24uYXV0aGVudGljYXRvckRhdGEpLFxuICAgICAgICBzaWduYXR1cmU6IGF1dGhlbnRpY2F0aW9uLnNpZ25hdHVyZVxuICAgIH07XG59XG4iXSwibmFtZXMiOlsiYXV0aGVudGljYXRvcnMiLCJ1dGlscyIsInV0ZjhEZWNvZGVyIiwiVGV4dERlY29kZXIiLCJwYXJzZUNsaWVudCIsImRhdGEiLCJwYXJzZUJhc2U2NHVybCIsIkpTT04iLCJwYXJzZSIsImRlY29kZSIsInBhcnNlQXV0aGVudGljYXRvciIsInBhcnNlQXV0aEJ1ZmZlciIsInBhcnNlQXR0ZXN0YXRpb24iLCJwYXJzZVJlZ2lzdHJhdGlvbiIsInJlZ2lzdHJhdGlvbiIsInVzZXJuYW1lIiwiY3JlZGVudGlhbCIsImNsaWVudCIsImNsaWVudERhdGEiLCJhdXRoZW50aWNhdG9yIiwiYXV0aGVudGljYXRvckRhdGEiLCJhdHRlc3RhdGlvbiIsImF0dGVzdGF0aW9uRGF0YSIsInBhcnNlQXV0aGVudGljYXRpb24iLCJhdXRoZW50aWNhdGlvbiIsImNyZWRlbnRpYWxJZCIsInNpZ25hdHVyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/server.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/server.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAuthentication: function() { return /* binding */ verifyAuthentication; },\n/* harmony export */   verifyRegistration: function() { return /* binding */ verifyRegistration; },\n/* harmony export */   verifySignature: function() { return /* binding */ verifySignature; }\n/* harmony export */ });\n/* harmony import */ var _parsers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsers.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/parsers.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\");\n\n\nasync function isValid(validator, value) {\n    if (typeof validator === \"function\") {\n        const res = validator(value);\n        if (res instanceof Promise) return await res;\n        else return res;\n    }\n    // the validator can be a single value too\n    return validator === value;\n}\nasync function isNotValid(validator, value) {\n    return !await isValid(validator, value);\n}\nasync function verifyRegistration(registrationRaw, expected) {\n    const registration = (0,_parsers_js__WEBPACK_IMPORTED_MODULE_0__.parseRegistration)(registrationRaw);\n    if (registration.client.type !== \"webauthn.create\") throw new Error(\"Unexpected ClientData type: \".concat(registration.client.type));\n    if (await isNotValid(expected.origin, registration.client.origin)) throw new Error(\"Unexpected ClientData origin: \".concat(registration.client.origin));\n    if (await isNotValid(expected.challenge, registration.client.challenge)) throw new Error(\"Unexpected ClientData challenge: \".concat(registration.client.challenge));\n    return registration;\n}\nasync function verifyAuthentication(authenticationRaw, credential, expected) {\n    if (authenticationRaw.credentialId !== credential.id) throw new Error(\"Credential ID mismatch: \".concat(authenticationRaw.credentialId, \" vs \").concat(credential.id));\n    const isValidSignature = await verifySignature({\n        algorithm: credential.algorithm,\n        publicKey: credential.publicKey,\n        authenticatorData: authenticationRaw.authenticatorData,\n        clientData: authenticationRaw.clientData,\n        signature: authenticationRaw.signature,\n        verbose: expected.verbose\n    });\n    if (!isValidSignature) throw new Error(\"Invalid signature: \".concat(authenticationRaw.signature));\n    const authentication = (0,_parsers_js__WEBPACK_IMPORTED_MODULE_0__.parseAuthentication)(authenticationRaw);\n    if (expected.verbose) console.debug(authentication);\n    if (authentication.client.type !== \"webauthn.get\") throw new Error(\"Unexpected clientData type: \".concat(authentication.client.type));\n    if (await isNotValid(expected.origin, authentication.client.origin)) throw new Error(\"Unexpected ClientData origin: \".concat(authentication.client.origin));\n    if (await isNotValid(expected.challenge, authentication.client.challenge)) throw new Error(\"Unexpected ClientData challenge: \".concat(authentication.client.challenge));\n    var _expected_domain;\n    // this only works because we consider `rp.origin` and `rp.id` to be the same during authentication/registration\n    const rpId = (_expected_domain = expected.domain) !== null && _expected_domain !== void 0 ? _expected_domain : new URL(authentication.client.origin).hostname;\n    const expectedRpIdHash = _utils_js__WEBPACK_IMPORTED_MODULE_1__.toBase64url(await _utils_js__WEBPACK_IMPORTED_MODULE_1__.sha256(_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBuffer(rpId)));\n    if (authentication.authenticator.rpIdHash !== expectedRpIdHash) throw new Error(\"Unexpected RpIdHash: \".concat(authentication.authenticator.rpIdHash, \" vs \").concat(expectedRpIdHash));\n    if (!authentication.authenticator.flags.userPresent) throw new Error(\"Unexpected authenticator flags: missing userPresent\");\n    if (!authentication.authenticator.flags.userVerified && expected.userVerified) throw new Error(\"Unexpected authenticator flags: missing userVerified\");\n    if (expected.counter && authentication.authenticator.counter <= expected.counter) throw new Error(\"Unexpected authenticator counter: \".concat(authentication.authenticator.counter, \" (should be > \").concat(expected.counter, \")\"));\n    return authentication;\n}\n// https://w3c.github.io/webauthn/#sctn-public-key-easy\n// https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n/*\nUser agents MUST be able to return a non-null value for getPublicKey() when the credential public key has a COSEAlgorithmIdentifier value of:\n\n-7 (ES256), where kty is 2 (with uncompressed points) and crv is 1 (P-256).\n\n-257 (RS256).\n\n-8 (EdDSA), where crv is 6 (Ed25519).\n*/ function getAlgoParams(algorithm) {\n    switch(algorithm){\n        case \"RS256\":\n            return {\n                name: \"RSASSA-PKCS1-v1_5\",\n                hash: \"SHA-256\"\n            };\n        case \"ES256\":\n            return {\n                name: \"ECDSA\",\n                namedCurve: \"P-256\",\n                hash: \"SHA-256\"\n            };\n        // case 'EdDSA': Not supported by browsers\n        default:\n            throw new Error(\"Unknown or unsupported crypto algorithm: \".concat(algorithm, \". Only 'RS256' and 'ES256' are supported.\"));\n    }\n}\nasync function parseCryptoKey(algoParams, publicKey) {\n    const buffer = _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(publicKey);\n    return crypto.subtle.importKey(\"spki\", buffer, algoParams, false, [\n        \"verify\"\n    ]);\n}\n// https://w3c.github.io/webauthn/#sctn-verifying-assertion\n// https://w3c.github.io/webauthn/#sctn-signature-attestation-types\n/* Emphasis mine:\n\n6.5.6. Signature Formats for Packed Attestation, FIDO U2F Attestation, and **Assertion Signatures**\n\n[...] For COSEAlgorithmIdentifier -7 (ES256) [...] the sig value MUST be encoded as an ASN.1 [...]\n[...] For COSEAlgorithmIdentifier -257 (RS256) [...] The signature is not ASN.1 wrapped.\n[...] For COSEAlgorithmIdentifier -37 (PS256) [...] The signature is not ASN.1 wrapped.\n*/ // see also https://gist.github.com/philholden/50120652bfe0498958fd5926694ba354\nasync function verifySignature(param) {\n    let { algorithm, publicKey, authenticatorData, clientData, signature, verbose } = param;\n    const algoParams = getAlgoParams(algorithm);\n    let cryptoKey = await parseCryptoKey(algoParams, publicKey);\n    if (verbose) {\n        console.debug(cryptoKey);\n    }\n    let clientHash = await _utils_js__WEBPACK_IMPORTED_MODULE_1__.sha256(_utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(clientData));\n    // during \"login\", the authenticatorData is exactly 37 bytes\n    let comboBuffer = _utils_js__WEBPACK_IMPORTED_MODULE_1__.concatenateBuffers(_utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(authenticatorData), clientHash);\n    if (verbose) {\n        console.debug(\"Crypto Algo: \" + JSON.stringify(algoParams));\n        console.debug(\"Public key: \" + publicKey);\n        console.debug(\"Data: \" + _utils_js__WEBPACK_IMPORTED_MODULE_1__.toBase64url(comboBuffer));\n        console.debug(\"Signature: \" + signature);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/verify\n    let signatureBuffer = _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseBase64url(signature);\n    if (algorithm == \"ES256\") signatureBuffer = convertASN1toRaw(signatureBuffer);\n    const isValid = await crypto.subtle.verify(algoParams, cryptoKey, signatureBuffer, comboBuffer);\n    return isValid;\n}\nfunction convertASN1toRaw(signatureBuffer) {\n    // Convert signature from ASN.1 sequence to \"raw\" format\n    const usignature = new Uint8Array(signatureBuffer);\n    const rStart = usignature[4] === 0 ? 5 : 4;\n    const rEnd = rStart + 32;\n    const sStart = usignature[rEnd + 2] === 0 ? rEnd + 3 : rEnd + 2;\n    const r = usignature.slice(rStart, rEnd);\n    const s = usignature.slice(sStart);\n    return new Uint8Array([\n        ...r,\n        ...s\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/server.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@passwordless-id/webauthn/dist/esm/utils.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bufferToHex: function() { return /* binding */ bufferToHex; },\n/* harmony export */   concatenateBuffers: function() { return /* binding */ concatenateBuffers; },\n/* harmony export */   isBase64url: function() { return /* binding */ isBase64url; },\n/* harmony export */   parseBase64url: function() { return /* binding */ parseBase64url; },\n/* harmony export */   parseBuffer: function() { return /* binding */ parseBuffer; },\n/* harmony export */   randomChallenge: function() { return /* binding */ randomChallenge; },\n/* harmony export */   sha256: function() { return /* binding */ sha256; },\n/* harmony export */   toBase64url: function() { return /* binding */ toBase64url; },\n/* harmony export */   toBuffer: function() { return /* binding */ toBuffer; }\n/* harmony export */ });\n/********************************\n     Encoding/Decoding Utils\n********************************/ function randomChallenge() {\n    return crypto.randomUUID();\n}\nfunction toBuffer(txt) {\n    return Uint8Array.from(txt, (c)=>c.charCodeAt(0)).buffer;\n}\nfunction parseBuffer(buffer) {\n    return String.fromCharCode(...new Uint8Array(buffer));\n}\nfunction isBase64url(txt) {\n    return txt.match(/^[a-zA-Z0-9\\-_]+=*$/) !== null;\n}\nfunction toBase64url(buffer) {\n    const txt = btoa(parseBuffer(buffer)); // base64\n    return txt.replaceAll(\"+\", \"-\").replaceAll(\"/\", \"_\");\n}\nfunction parseBase64url(txt) {\n    txt = txt.replaceAll(\"-\", \"+\").replaceAll(\"_\", \"/\"); // base64url -> base64\n    return toBuffer(atob(txt));\n}\nasync function sha256(buffer) {\n    return await crypto.subtle.digest(\"SHA-256\", buffer);\n}\nfunction bufferToHex(buffer) {\n    return [\n        ...new Uint8Array(buffer)\n    ].map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n}\nfunction concatenateBuffers(buffer1, buffer2) {\n    var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n    tmp.set(new Uint8Array(buffer1), 0);\n    tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n    return tmp;\n}\n;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFzc3dvcmRsZXNzLWlkL3dlYmF1dGhuL2Rpc3QvZXNtL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBOzsrQkFFK0IsR0FDeEIsU0FBU0E7SUFDWixPQUFPQyxPQUFPQyxVQUFVO0FBQzVCO0FBQ08sU0FBU0MsU0FBU0MsR0FBRztJQUN4QixPQUFPQyxXQUFXQyxJQUFJLENBQUNGLEtBQUtHLENBQUFBLElBQUtBLEVBQUVDLFVBQVUsQ0FBQyxJQUFJQyxNQUFNO0FBQzVEO0FBQ08sU0FBU0MsWUFBWUQsTUFBTTtJQUM5QixPQUFPRSxPQUFPQyxZQUFZLElBQUksSUFBSVAsV0FBV0k7QUFDakQ7QUFDTyxTQUFTSSxZQUFZVCxHQUFHO0lBQzNCLE9BQU9BLElBQUlVLEtBQUssQ0FBQywyQkFBMkI7QUFDaEQ7QUFDTyxTQUFTQyxZQUFZTixNQUFNO0lBQzlCLE1BQU1MLE1BQU1ZLEtBQUtOLFlBQVlELFVBQVUsU0FBUztJQUNoRCxPQUFPTCxJQUFJYSxVQUFVLENBQUMsS0FBSyxLQUFLQSxVQUFVLENBQUMsS0FBSztBQUNwRDtBQUNPLFNBQVNDLGVBQWVkLEdBQUc7SUFDOUJBLE1BQU1BLElBQUlhLFVBQVUsQ0FBQyxLQUFLLEtBQUtBLFVBQVUsQ0FBQyxLQUFLLE1BQU0sc0JBQXNCO0lBQzNFLE9BQU9kLFNBQVNnQixLQUFLZjtBQUN6QjtBQUNPLGVBQWVnQixPQUFPWCxNQUFNO0lBQy9CLE9BQU8sTUFBTVIsT0FBT29CLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDLFdBQVdiO0FBQ2pEO0FBQ08sU0FBU2MsWUFBWWQsTUFBTTtJQUM5QixPQUFPO1dBQUksSUFBSUosV0FBV0k7S0FBUSxDQUM3QmUsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxRQUFRLENBQUMsSUFBSUMsUUFBUSxDQUFDLEdBQUcsTUFDcENDLElBQUksQ0FBQztBQUNkO0FBQ08sU0FBU0MsbUJBQW1CQyxPQUFPLEVBQUVDLE9BQU87SUFDL0MsSUFBSUMsTUFBTSxJQUFJM0IsV0FBV3lCLFFBQVFHLFVBQVUsR0FBR0YsUUFBUUUsVUFBVTtJQUNoRUQsSUFBSUUsR0FBRyxDQUFDLElBQUk3QixXQUFXeUIsVUFBVTtJQUNqQ0UsSUFBSUUsR0FBRyxDQUFDLElBQUk3QixXQUFXMEIsVUFBVUQsUUFBUUcsVUFBVTtJQUNuRCxPQUFPRDtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcGFzc3dvcmRsZXNzLWlkL3dlYmF1dGhuL2Rpc3QvZXNtL3V0aWxzLmpzPzg5MmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gICAgIEVuY29kaW5nL0RlY29kaW5nIFV0aWxzXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbmV4cG9ydCBmdW5jdGlvbiByYW5kb21DaGFsbGVuZ2UoKSB7XG4gICAgcmV0dXJuIGNyeXB0by5yYW5kb21VVUlEKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9CdWZmZXIodHh0KSB7XG4gICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbSh0eHQsIGMgPT4gYy5jaGFyQ29kZUF0KDApKS5idWZmZXI7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VCdWZmZXIoYnVmZmVyKSB7XG4gICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoLi4ubmV3IFVpbnQ4QXJyYXkoYnVmZmVyKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNCYXNlNjR1cmwodHh0KSB7XG4gICAgcmV0dXJuIHR4dC5tYXRjaCgvXlthLXpBLVowLTlcXC1fXSs9KiQvKSAhPT0gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB0b0Jhc2U2NHVybChidWZmZXIpIHtcbiAgICBjb25zdCB0eHQgPSBidG9hKHBhcnNlQnVmZmVyKGJ1ZmZlcikpOyAvLyBiYXNlNjRcbiAgICByZXR1cm4gdHh0LnJlcGxhY2VBbGwoJysnLCAnLScpLnJlcGxhY2VBbGwoJy8nLCAnXycpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQmFzZTY0dXJsKHR4dCkge1xuICAgIHR4dCA9IHR4dC5yZXBsYWNlQWxsKCctJywgJysnKS5yZXBsYWNlQWxsKCdfJywgJy8nKTsgLy8gYmFzZTY0dXJsIC0+IGJhc2U2NFxuICAgIHJldHVybiB0b0J1ZmZlcihhdG9iKHR4dCkpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNoYTI1NihidWZmZXIpIHtcbiAgICByZXR1cm4gYXdhaXQgY3J5cHRvLnN1YnRsZS5kaWdlc3QoJ1NIQS0yNTYnLCBidWZmZXIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJ1ZmZlclRvSGV4KGJ1ZmZlcikge1xuICAgIHJldHVybiBbLi4ubmV3IFVpbnQ4QXJyYXkoYnVmZmVyKV1cbiAgICAgICAgLm1hcChiID0+IGIudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsIFwiMFwiKSlcbiAgICAgICAgLmpvaW4oXCJcIik7XG59XG5leHBvcnQgZnVuY3Rpb24gY29uY2F0ZW5hdGVCdWZmZXJzKGJ1ZmZlcjEsIGJ1ZmZlcjIpIHtcbiAgICB2YXIgdG1wID0gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyMS5ieXRlTGVuZ3RoICsgYnVmZmVyMi5ieXRlTGVuZ3RoKTtcbiAgICB0bXAuc2V0KG5ldyBVaW50OEFycmF5KGJ1ZmZlcjEpLCAwKTtcbiAgICB0bXAuc2V0KG5ldyBVaW50OEFycmF5KGJ1ZmZlcjIpLCBidWZmZXIxLmJ5dGVMZW5ndGgpO1xuICAgIHJldHVybiB0bXA7XG59XG47XG4iXSwibmFtZXMiOlsicmFuZG9tQ2hhbGxlbmdlIiwiY3J5cHRvIiwicmFuZG9tVVVJRCIsInRvQnVmZmVyIiwidHh0IiwiVWludDhBcnJheSIsImZyb20iLCJjIiwiY2hhckNvZGVBdCIsImJ1ZmZlciIsInBhcnNlQnVmZmVyIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiaXNCYXNlNjR1cmwiLCJtYXRjaCIsInRvQmFzZTY0dXJsIiwiYnRvYSIsInJlcGxhY2VBbGwiLCJwYXJzZUJhc2U2NHVybCIsImF0b2IiLCJzaGEyNTYiLCJzdWJ0bGUiLCJkaWdlc3QiLCJidWZmZXJUb0hleCIsIm1hcCIsImIiLCJ0b1N0cmluZyIsInBhZFN0YXJ0Iiwiam9pbiIsImNvbmNhdGVuYXRlQnVmZmVycyIsImJ1ZmZlcjEiLCJidWZmZXIyIiwidG1wIiwiYnl0ZUxlbmd0aCIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js":
/*!******************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eth_sendRawTransaction: function() { return /* binding */ eth_sendRawTransaction; }\n/* harmony export */ });\n/**\n * Sends a raw transaction to the Ethereum network.\n * @param request - The EIP1193 request function.\n * @param signedTransaction - The signed transaction in hex format.\n * @returns A promise that resolves to the transaction hash.\n * @rpc\n * @example\n * ```ts\n * import { getRpcClient, eth_sendRawTransaction } from \"thirdweb/rpc\";\n * const rpcRequest = getRpcClient({ client, chain });\n * const transactionHash = await eth_sendRawTransaction(rpcRequest, \"0x...\");\n * ```\n */ async function eth_sendRawTransaction(request, signedTransaction) {\n    return await request({\n        method: \"eth_sendRawTransaction\",\n        params: [\n            signedTransaction\n        ]\n    });\n} //# sourceMappingURL=eth_sendRawTransaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9ycGMvYWN0aW9ucy9ldGhfc2VuZFJhd1RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Ozs7O0NBWUMsR0FDTSxlQUFlQSx1QkFBdUJDLE9BQU8sRUFBRUMsaUJBQWlCO0lBQ25FLE9BQU8sTUFBTUQsUUFBUTtRQUNqQkUsUUFBUTtRQUNSQyxRQUFRO1lBQUNGO1NBQWtCO0lBQy9CO0FBQ0osRUFDQSxrREFBa0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3JwYy9hY3Rpb25zL2V0aF9zZW5kUmF3VHJhbnNhY3Rpb24uanM/MGYyYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNlbmRzIGEgcmF3IHRyYW5zYWN0aW9uIHRvIHRoZSBFdGhlcmV1bSBuZXR3b3JrLlxuICogQHBhcmFtIHJlcXVlc3QgLSBUaGUgRUlQMTE5MyByZXF1ZXN0IGZ1bmN0aW9uLlxuICogQHBhcmFtIHNpZ25lZFRyYW5zYWN0aW9uIC0gVGhlIHNpZ25lZCB0cmFuc2FjdGlvbiBpbiBoZXggZm9ybWF0LlxuICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHRyYW5zYWN0aW9uIGhhc2guXG4gKiBAcnBjXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGdldFJwY0NsaWVudCwgZXRoX3NlbmRSYXdUcmFuc2FjdGlvbiB9IGZyb20gXCJ0aGlyZHdlYi9ycGNcIjtcbiAqIGNvbnN0IHJwY1JlcXVlc3QgPSBnZXRScGNDbGllbnQoeyBjbGllbnQsIGNoYWluIH0pO1xuICogY29uc3QgdHJhbnNhY3Rpb25IYXNoID0gYXdhaXQgZXRoX3NlbmRSYXdUcmFuc2FjdGlvbihycGNSZXF1ZXN0LCBcIjB4Li4uXCIpO1xuICogYGBgXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBldGhfc2VuZFJhd1RyYW5zYWN0aW9uKHJlcXVlc3QsIHNpZ25lZFRyYW5zYWN0aW9uKSB7XG4gICAgcmV0dXJuIGF3YWl0IHJlcXVlc3Qoe1xuICAgICAgICBtZXRob2Q6IFwiZXRoX3NlbmRSYXdUcmFuc2FjdGlvblwiLFxuICAgICAgICBwYXJhbXM6IFtzaWduZWRUcmFuc2FjdGlvbl0sXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldGhfc2VuZFJhd1RyYW5zYWN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJldGhfc2VuZFJhd1RyYW5zYWN0aW9uIiwicmVxdWVzdCIsInNpZ25lZFRyYW5zYWN0aW9uIiwibWV0aG9kIiwicGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parseTypedData.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parseTypedData.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTypedData: function() { return /* binding */ parseTypedData; }\n/* harmony export */ });\n/* harmony import */ var _encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/helpers/is-hex.js\");\n/* harmony import */ var _encoding_hex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n\n/**\n * @internal\n */ function parseTypedData(typedData) {\n    const domain = typedData.domain;\n    if ((domain === null || domain === void 0 ? void 0 : domain.chainId) !== undefined && (0,_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(domain.chainId)) {\n        typedData.domain = {\n            ...typedData.domain,\n            chainId: (0,_encoding_hex_js__WEBPACK_IMPORTED_MODULE_1__.hexToNumber)(typedData.domain.chainId)\n        };\n    }\n    return typedData;\n} //# sourceMappingURL=parseTypedData.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9zaWduYXR1cmVzL2hlbHBlcnMvcGFyc2VUeXBlZERhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJEO0FBQzNEOztDQUVDLEdBQ00sU0FBU0UsZUFBZUMsU0FBUztJQUNwQyxNQUFNQyxTQUFTRCxVQUFVQyxNQUFNO0lBQy9CLElBQUlBLENBQUFBLG1CQUFBQSw2QkFBQUEsT0FBUUMsT0FBTyxNQUFLQyxhQUFhTCx1REFBS0EsQ0FBQ0csT0FBT0MsT0FBTyxHQUFHO1FBQ3hERixVQUFVQyxNQUFNLEdBQUc7WUFDZixHQUFHRCxVQUFVQyxNQUFNO1lBQ25CQyxTQUFTTCw2REFBV0EsQ0FBQ0csVUFBVUMsTUFBTSxDQUFDQyxPQUFPO1FBQ2pEO0lBQ0o7SUFDQSxPQUFPRjtBQUNYLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9zaWduYXR1cmVzL2hlbHBlcnMvcGFyc2VUeXBlZERhdGEuanM/NGFjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoZXhUb051bWJlciwgaXNIZXggfSBmcm9tIFwiLi4vLi4vZW5jb2RpbmcvaGV4LmpzXCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VUeXBlZERhdGEodHlwZWREYXRhKSB7XG4gICAgY29uc3QgZG9tYWluID0gdHlwZWREYXRhLmRvbWFpbjtcbiAgICBpZiAoZG9tYWluPy5jaGFpbklkICE9PSB1bmRlZmluZWQgJiYgaXNIZXgoZG9tYWluLmNoYWluSWQpKSB7XG4gICAgICAgIHR5cGVkRGF0YS5kb21haW4gPSB7XG4gICAgICAgICAgICAuLi50eXBlZERhdGEuZG9tYWluLFxuICAgICAgICAgICAgY2hhaW5JZDogaGV4VG9OdW1iZXIodHlwZWREYXRhLmRvbWFpbi5jaGFpbklkKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHR5cGVkRGF0YTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlVHlwZWREYXRhLmpzLm1hcCJdLCJuYW1lcyI6WyJoZXhUb051bWJlciIsImlzSGV4IiwicGFyc2VUeXBlZERhdGEiLCJ0eXBlZERhdGEiLCJkb21haW4iLCJjaGFpbklkIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parseTypedData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/constants/settings.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/core/constants/settings.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AUTH_TOKEN_LOCAL_STORAGE_NAME: function() { return /* binding */ AUTH_TOKEN_LOCAL_STORAGE_NAME; },\n/* harmony export */   BASE_IN_APP_WALLET_URL: function() { return /* binding */ BASE_IN_APP_WALLET_URL; },\n/* harmony export */   DEVICE_SHARE_LOCAL_STORAGE_NAME: function() { return /* binding */ DEVICE_SHARE_LOCAL_STORAGE_NAME; },\n/* harmony export */   DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED: function() { return /* binding */ DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED; },\n/* harmony export */   HEADLESS_GOOGLE_OAUTH_ROUTE: function() { return /* binding */ HEADLESS_GOOGLE_OAUTH_ROUTE; },\n/* harmony export */   IN_APP_WALLET_PATH: function() { return /* binding */ IN_APP_WALLET_PATH; },\n/* harmony export */   PASSKEY_CREDENTIAL_ID_LOCAL_STORAGE_NAME: function() { return /* binding */ PASSKEY_CREDENTIAL_ID_LOCAL_STORAGE_NAME; },\n/* harmony export */   WALLET_CONNECT_SESSIONS_LOCAL_STORAGE_NAME: function() { return /* binding */ WALLET_CONNECT_SESSIONS_LOCAL_STORAGE_NAME; },\n/* harmony export */   WALLET_USER_DETAILS_LOCAL_STORAGE_NAME: function() { return /* binding */ WALLET_USER_DETAILS_LOCAL_STORAGE_NAME; },\n/* harmony export */   WALLET_USER_ID_LOCAL_STORAGE_NAME: function() { return /* binding */ WALLET_USER_ID_LOCAL_STORAGE_NAME; }\n/* harmony export */ });\n/**\n * @internal\n */ const IN_APP_WALLET_PATH = \"/sdk/2022-08-12/embedded-wallet\";\n/**\n * @internal\n */ const HEADLESS_GOOGLE_OAUTH_ROUTE = \"/auth/headless-google-login-managed\";\n/**\n * @internal\n */ const BASE_IN_APP_WALLET_URL = \"embedded-wallet.thirdweb.com\";\n// STORAGE\n/**\n * @internal\n */ const WALLET_USER_DETAILS_LOCAL_STORAGE_NAME = (clientId)=>\"thirdwebEwsWalletUserDetails-\".concat(clientId);\n_c = WALLET_USER_DETAILS_LOCAL_STORAGE_NAME;\n/**\n * @internal\n */ const WALLET_USER_ID_LOCAL_STORAGE_NAME = (clientId)=>\"thirdwebEwsWalletUserId-\".concat(clientId);\n_c1 = WALLET_USER_ID_LOCAL_STORAGE_NAME;\n/**\n * @internal\n */ const AUTH_TOKEN_LOCAL_STORAGE_PREFIX = \"walletToken\";\n/**\n * @internal\n */ const AUTH_TOKEN_LOCAL_STORAGE_NAME = (clientId)=>{\n    return \"\".concat(AUTH_TOKEN_LOCAL_STORAGE_PREFIX, \"-\").concat(clientId);\n};\n_c2 = AUTH_TOKEN_LOCAL_STORAGE_NAME;\n/**\n * @internal\n */ const PASSKEY_CREDENTIAL_ID_LOCAL_STORAGE_NAME = (clientId)=>{\n    return \"passkey-credential-id-\".concat(clientId);\n};\n_c3 = PASSKEY_CREDENTIAL_ID_LOCAL_STORAGE_NAME;\n/**\n * @internal\n */ const DEVICE_SHARE_LOCAL_STORAGE_PREFIX = \"a\";\n/**\n * @internal\n */ const DEVICE_SHARE_LOCAL_STORAGE_NAME = (clientId, userId)=>\"\".concat(DEVICE_SHARE_LOCAL_STORAGE_PREFIX, \"-\").concat(clientId, \"-\").concat(userId);\n_c4 = DEVICE_SHARE_LOCAL_STORAGE_NAME;\n/**\n * @internal\n */ const WALLET_CONNECT_SESSIONS_LOCAL_STORAGE_NAME = (clientId)=>\"walletConnectSessions-\".concat(clientId);\n_c5 = WALLET_CONNECT_SESSIONS_LOCAL_STORAGE_NAME;\n/**\n * @internal\n */ const DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED = (clientId)=>\"\".concat(DEVICE_SHARE_LOCAL_STORAGE_PREFIX, \"-\").concat(clientId); //# sourceMappingURL=settings.js.map\n_c6 = DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED;\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"WALLET_USER_DETAILS_LOCAL_STORAGE_NAME\");\n$RefreshReg$(_c1, \"WALLET_USER_ID_LOCAL_STORAGE_NAME\");\n$RefreshReg$(_c2, \"AUTH_TOKEN_LOCAL_STORAGE_NAME\");\n$RefreshReg$(_c3, \"PASSKEY_CREDENTIAL_ID_LOCAL_STORAGE_NAME\");\n$RefreshReg$(_c4, \"DEVICE_SHARE_LOCAL_STORAGE_NAME\");\n$RefreshReg$(_c5, \"WALLET_CONNECT_SESSIONS_LOCAL_STORAGE_NAME\");\n$RefreshReg$(_c6, \"DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC9jb3JlL2NvbnN0YW50cy9zZXR0aW5ncy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0NBRUMsR0FDTSxNQUFNQSxxQkFBcUIsa0NBQWtDO0FBQ3BFOztDQUVDLEdBQ00sTUFBTUMsOEJBQThCLHNDQUFzQztBQUNqRjs7Q0FFQyxHQUNNLE1BQU1DLHlCQUF5QiwrQkFBK0I7QUFDckUsVUFBVTtBQUNWOztDQUVDLEdBQ00sTUFBTUMseUNBQXlDLENBQUNDLFdBQWEsZ0NBQXlDLE9BQVRBLFVBQVc7S0FBbEdEO0FBQ2I7O0NBRUMsR0FDTSxNQUFNRSxvQ0FBb0MsQ0FBQ0QsV0FBYSwyQkFBb0MsT0FBVEEsVUFBVztNQUF4RkM7QUFDYjs7Q0FFQyxHQUNELE1BQU1DLGtDQUFrQztBQUN4Qzs7Q0FFQyxHQUNNLE1BQU1DLGdDQUFnQyxDQUFDSDtJQUMxQyxPQUFPLEdBQXNDQSxPQUFuQ0UsaUNBQWdDLEtBQVksT0FBVEY7QUFDakQsRUFBRTtNQUZXRztBQUdiOztDQUVDLEdBQ00sTUFBTUMsMkNBQTJDLENBQUNKO0lBQ3JELE9BQU8seUJBQWtDLE9BQVRBO0FBQ3BDLEVBQUU7TUFGV0k7QUFHYjs7Q0FFQyxHQUNELE1BQU1DLG9DQUFvQztBQUMxQzs7Q0FFQyxHQUNNLE1BQU1DLGtDQUFrQyxDQUFDTixVQUFVTyxTQUFXLEdBQXdDUCxPQUFyQ0ssbUNBQWtDLEtBQWVFLE9BQVpQLFVBQVMsS0FBVSxPQUFQTyxRQUFTO01BQXJIRDtBQUNiOztDQUVDLEdBQ00sTUFBTUUsNkNBQTZDLENBQUNSLFdBQWEseUJBQWtDLE9BQVRBLFVBQVc7TUFBL0ZRO0FBQ2I7O0NBRUMsR0FDTSxNQUFNQyw2Q0FBNkMsQ0FBQ1QsV0FBYSxHQUF3Q0EsT0FBckNLLG1DQUFrQyxLQUFZLE9BQVRMLFVBQVcsQ0FDM0gsb0NBQW9DO01BRHZCUyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy9pbi1hcHAvY29yZS9jb25zdGFudHMvc2V0dGluZ3MuanM/NWUwYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgSU5fQVBQX1dBTExFVF9QQVRIID0gXCIvc2RrLzIwMjItMDgtMTIvZW1iZWRkZWQtd2FsbGV0XCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgSEVBRExFU1NfR09PR0xFX09BVVRIX1JPVVRFID0gXCIvYXV0aC9oZWFkbGVzcy1nb29nbGUtbG9naW4tbWFuYWdlZFwiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IEJBU0VfSU5fQVBQX1dBTExFVF9VUkwgPSBcImVtYmVkZGVkLXdhbGxldC50aGlyZHdlYi5jb21cIjtcbi8vIFNUT1JBR0Vcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBXQUxMRVRfVVNFUl9ERVRBSUxTX0xPQ0FMX1NUT1JBR0VfTkFNRSA9IChjbGllbnRJZCkgPT4gYHRoaXJkd2ViRXdzV2FsbGV0VXNlckRldGFpbHMtJHtjbGllbnRJZH1gO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IFdBTExFVF9VU0VSX0lEX0xPQ0FMX1NUT1JBR0VfTkFNRSA9IChjbGllbnRJZCkgPT4gYHRoaXJkd2ViRXdzV2FsbGV0VXNlcklkLSR7Y2xpZW50SWR9YDtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IEFVVEhfVE9LRU5fTE9DQUxfU1RPUkFHRV9QUkVGSVggPSBcIndhbGxldFRva2VuXCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgQVVUSF9UT0tFTl9MT0NBTF9TVE9SQUdFX05BTUUgPSAoY2xpZW50SWQpID0+IHtcbiAgICByZXR1cm4gYCR7QVVUSF9UT0tFTl9MT0NBTF9TVE9SQUdFX1BSRUZJWH0tJHtjbGllbnRJZH1gO1xufTtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCBQQVNTS0VZX0NSRURFTlRJQUxfSURfTE9DQUxfU1RPUkFHRV9OQU1FID0gKGNsaWVudElkKSA9PiB7XG4gICAgcmV0dXJuIGBwYXNza2V5LWNyZWRlbnRpYWwtaWQtJHtjbGllbnRJZH1gO1xufTtcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IERFVklDRV9TSEFSRV9MT0NBTF9TVE9SQUdFX1BSRUZJWCA9IFwiYVwiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IERFVklDRV9TSEFSRV9MT0NBTF9TVE9SQUdFX05BTUUgPSAoY2xpZW50SWQsIHVzZXJJZCkgPT4gYCR7REVWSUNFX1NIQVJFX0xPQ0FMX1NUT1JBR0VfUFJFRklYfS0ke2NsaWVudElkfS0ke3VzZXJJZH1gO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IFdBTExFVF9DT05ORUNUX1NFU1NJT05TX0xPQ0FMX1NUT1JBR0VfTkFNRSA9IChjbGllbnRJZCkgPT4gYHdhbGxldENvbm5lY3RTZXNzaW9ucy0ke2NsaWVudElkfWA7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgREVWSUNFX1NIQVJFX0xPQ0FMX1NUT1JBR0VfTkFNRV9ERVBSRUNBVEVEID0gKGNsaWVudElkKSA9PiBgJHtERVZJQ0VfU0hBUkVfTE9DQUxfU1RPUkFHRV9QUkVGSVh9LSR7Y2xpZW50SWR9YDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNldHRpbmdzLmpzLm1hcCJdLCJuYW1lcyI6WyJJTl9BUFBfV0FMTEVUX1BBVEgiLCJIRUFETEVTU19HT09HTEVfT0FVVEhfUk9VVEUiLCJCQVNFX0lOX0FQUF9XQUxMRVRfVVJMIiwiV0FMTEVUX1VTRVJfREVUQUlMU19MT0NBTF9TVE9SQUdFX05BTUUiLCJjbGllbnRJZCIsIldBTExFVF9VU0VSX0lEX0xPQ0FMX1NUT1JBR0VfTkFNRSIsIkFVVEhfVE9LRU5fTE9DQUxfU1RPUkFHRV9QUkVGSVgiLCJBVVRIX1RPS0VOX0xPQ0FMX1NUT1JBR0VfTkFNRSIsIlBBU1NLRVlfQ1JFREVOVElBTF9JRF9MT0NBTF9TVE9SQUdFX05BTUUiLCJERVZJQ0VfU0hBUkVfTE9DQUxfU1RPUkFHRV9QUkVGSVgiLCJERVZJQ0VfU0hBUkVfTE9DQUxfU1RPUkFHRV9OQU1FIiwidXNlcklkIiwiV0FMTEVUX0NPTk5FQ1RfU0VTU0lPTlNfTE9DQUxfU1RPUkFHRV9OQU1FIiwiREVWSUNFX1NIQVJFX0xPQ0FMX1NUT1JBR0VfTkFNRV9ERVBSRUNBVEVEIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/constants/settings.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractLogin: function() { return /* binding */ AbstractLogin; }\n/* harmony export */ });\n/**\n * @internal\n */ class AbstractLogin {\n    /**\n     * @internal\n     */ async sendEmailLoginOtp(param) {\n        let { email } = param;\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"sendThirdwebEmailLoginOtp\",\n            params: {\n                email\n            }\n        });\n        return result;\n    }\n    /**\n     *\n     * @internal\n     */ async sendSmsLoginOtp(param) {\n        let { phoneNumber } = param;\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"sendThirdwebSmsLoginOtp\",\n            params: {\n                phoneNumber\n            }\n        });\n        return result;\n    }\n    /**\n     * Used to manage the user's auth states. This should not be instantiated directly.\n     * Call {@link InAppWalletSDK.auth} instead.\n     * @internal\n     */ constructor({ baseUrl, querier, preLogin, postLogin, client }){\n        Object.defineProperty(this, \"LoginQuerier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"preLogin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"postLogin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"baseUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.baseUrl = baseUrl;\n        this.LoginQuerier = querier;\n        this.preLogin = preLogin;\n        this.postLogin = postLogin;\n        this.client = client;\n    }\n} //# sourceMappingURL=abstract-login.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvbGliL2F1dGgvYWJzdHJhY3QtbG9naW4uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztDQUVDLEdBQ00sTUFBTUE7SUEyQ1Q7O0tBRUMsR0FDRCxNQUFNQyxrQkFBa0IsS0FBVSxFQUFFO1lBQVosRUFBRUMsS0FBSyxFQUFHLEdBQVY7UUFDcEIsTUFBTSxJQUFJLENBQUNDLFFBQVE7UUFDbkIsTUFBTUMsU0FBUyxNQUFNLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxJQUFJLENBQUM7WUFDeENDLGVBQWU7WUFDZkMsUUFBUTtnQkFBRU47WUFBTTtRQUNwQjtRQUNBLE9BQU9FO0lBQ1g7SUFDQTs7O0tBR0MsR0FDRCxNQUFNSyxnQkFBZ0IsS0FBZ0IsRUFBRTtZQUFsQixFQUFFQyxXQUFXLEVBQUcsR0FBaEI7UUFDbEIsTUFBTSxJQUFJLENBQUNQLFFBQVE7UUFDbkIsTUFBTUMsU0FBUyxNQUFNLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxJQUFJLENBQUM7WUFDeENDLGVBQWU7WUFDZkMsUUFBUTtnQkFBRUU7WUFBWTtRQUMxQjtRQUNBLE9BQU9OO0lBQ1g7SUFoRUE7Ozs7S0FJQyxHQUNETyxZQUFZLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFFVixRQUFRLEVBQUVXLFNBQVMsRUFBRUMsTUFBTSxFQUFHLENBQUU7UUFDNURDLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsZ0JBQWdCO1lBQ3hDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxZQUFZO1lBQ3BDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxhQUFhO1lBQ3JDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxVQUFVO1lBQ2xDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQUwsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxXQUFXO1lBQ25DQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQSxJQUFJLENBQUNULE9BQU8sR0FBR0E7UUFDZixJQUFJLENBQUNQLFlBQVksR0FBR1E7UUFDcEIsSUFBSSxDQUFDVixRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ1csU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNDLE1BQU0sR0FBR0E7SUFDbEI7QUF3QkosRUFDQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3dhbGxldHMvaW4tYXBwL3dlYi9saWIvYXV0aC9hYnN0cmFjdC1sb2dpbi5qcz9hMzYwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjbGFzcyBBYnN0cmFjdExvZ2luIHtcbiAgICAvKipcbiAgICAgKiBVc2VkIHRvIG1hbmFnZSB0aGUgdXNlcidzIGF1dGggc3RhdGVzLiBUaGlzIHNob3VsZCBub3QgYmUgaW5zdGFudGlhdGVkIGRpcmVjdGx5LlxuICAgICAqIENhbGwge0BsaW5rIEluQXBwV2FsbGV0U0RLLmF1dGh9IGluc3RlYWQuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBxdWVyaWVyLCBwcmVMb2dpbiwgcG9zdExvZ2luLCBjbGllbnQsIH0pIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiTG9naW5RdWVyaWVyXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInByZUxvZ2luXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInBvc3RMb2dpblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJjbGllbnRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiYmFzZVVybFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmJhc2VVcmwgPSBiYXNlVXJsO1xuICAgICAgICB0aGlzLkxvZ2luUXVlcmllciA9IHF1ZXJpZXI7XG4gICAgICAgIHRoaXMucHJlTG9naW4gPSBwcmVMb2dpbjtcbiAgICAgICAgdGhpcy5wb3N0TG9naW4gPSBwb3N0TG9naW47XG4gICAgICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyBzZW5kRW1haWxMb2dpbk90cCh7IGVtYWlsLCB9KSB7XG4gICAgICAgIGF3YWl0IHRoaXMucHJlTG9naW4oKTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5Mb2dpblF1ZXJpZXIuY2FsbCh7XG4gICAgICAgICAgICBwcm9jZWR1cmVOYW1lOiBcInNlbmRUaGlyZHdlYkVtYWlsTG9naW5PdHBcIixcbiAgICAgICAgICAgIHBhcmFtczogeyBlbWFpbCB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyBzZW5kU21zTG9naW5PdHAoeyBwaG9uZU51bWJlciwgfSkge1xuICAgICAgICBhd2FpdCB0aGlzLnByZUxvZ2luKCk7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuTG9naW5RdWVyaWVyLmNhbGwoe1xuICAgICAgICAgICAgcHJvY2VkdXJlTmFtZTogXCJzZW5kVGhpcmR3ZWJTbXNMb2dpbk90cFwiLFxuICAgICAgICAgICAgcGFyYW1zOiB7IHBob25lTnVtYmVyIH0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFic3RyYWN0LWxvZ2luLmpzLm1hcCJdLCJuYW1lcyI6WyJBYnN0cmFjdExvZ2luIiwic2VuZEVtYWlsTG9naW5PdHAiLCJlbWFpbCIsInByZUxvZ2luIiwicmVzdWx0IiwiTG9naW5RdWVyaWVyIiwiY2FsbCIsInByb2NlZHVyZU5hbWUiLCJwYXJhbXMiLCJzZW5kU21zTG9naW5PdHAiLCJwaG9uZU51bWJlciIsImNvbnN0cnVjdG9yIiwiYmFzZVVybCIsInF1ZXJpZXIiLCJwb3N0TG9naW4iLCJjbGllbnQiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseLogin: function() { return /* binding */ BaseLogin; }\n/* harmony export */ });\n/* harmony import */ var _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/authentication/type.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/type.js\");\n/* harmony import */ var _abstract_login_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./abstract-login.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/abstract-login.js\");\n\n\n/**\n *\n */ class BaseLogin extends _abstract_login_js__WEBPACK_IMPORTED_MODULE_0__.AbstractLogin {\n    async getOauthLoginUrl(authProvider) {\n        const result = await this.LoginQuerier.call({\n            procedureName: \"getHeadlessOauthLoginLink\",\n            params: {\n                authProvider\n            }\n        });\n        return result;\n    }\n    /**\n     * @internal\n     */ async loginWithModal() {\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"loginWithThirdwebModal\",\n            params: undefined,\n            showIframe: true\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * @internal\n     */ async loginWithEmailOtp(param) {\n        let { email } = param;\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"loginWithThirdwebModal\",\n            params: {\n                email\n            },\n            showIframe: true\n        });\n        return this.postLogin(result);\n    }\n    getOauthPopUpSizing(authProvider) {\n        switch(authProvider){\n            case _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_1__.AuthProvider.FACEBOOK:\n                return \"width=715, height=555\";\n            default:\n                return \"width=350, height=500\";\n        }\n    }\n    /**\n     * @internal\n     */ async loginWithOauth(args) {\n        let win = args === null || args === void 0 ? void 0 : args.openedWindow;\n        let isWindowOpenedByFn = false;\n        if (!win) {\n            win = window.open(\"\", \"Login\", this.getOauthPopUpSizing(args.oauthProvider));\n            isWindowOpenedByFn = true;\n        }\n        if (!win) {\n            throw new Error(\"Something went wrong opening pop-up\");\n        }\n        // logout the user\n        // fetch the url to open the login window from iframe\n        const [{ loginLink }] = await Promise.all([\n            this.getOauthLoginUrl(args.oauthProvider),\n            this.preLogin()\n        ]);\n        win.location.href = loginLink;\n        // listen to result from the login window\n        const result = await new Promise((resolve, reject)=>{\n            // detect when the user closes the login window\n            const pollTimer = window.setInterval(async ()=>{\n                if (!win) {\n                    return;\n                }\n                if (win.closed) {\n                    clearInterval(pollTimer);\n                    window.removeEventListener(\"message\", messageListener);\n                    reject(new Error(\"User closed login window\"));\n                }\n            }, 1000);\n            const messageListener = async (event)=>{\n                if (event.origin !== this.baseUrl) {\n                    return;\n                }\n                if (typeof event.data !== \"object\") {\n                    reject(new Error(\"Invalid event data\"));\n                    return;\n                }\n                switch(event.data.eventType){\n                    case \"userLoginSuccess\":\n                        {\n                            window.removeEventListener(\"message\", messageListener);\n                            clearInterval(pollTimer);\n                            this.closeWindow({\n                                isWindowOpenedByFn,\n                                win,\n                                closeOpenedWindow: args === null || args === void 0 ? void 0 : args.closeOpenedWindow\n                            });\n                            if (event.data.authResult) {\n                                resolve(event.data.authResult);\n                            }\n                            break;\n                        }\n                    case \"userLoginFailed\":\n                        {\n                            window.removeEventListener(\"message\", messageListener);\n                            clearInterval(pollTimer);\n                            this.closeWindow({\n                                isWindowOpenedByFn,\n                                win,\n                                closeOpenedWindow: args === null || args === void 0 ? void 0 : args.closeOpenedWindow\n                            });\n                            reject(new Error(event.data.error));\n                            break;\n                        }\n                    case \"injectDeveloperClientId\":\n                        {\n                            win === null || win === void 0 ? void 0 : win.postMessage({\n                                eventType: \"injectDeveloperClientIdResult\",\n                                developerClientId: this.client.clientId,\n                                authOption: args.oauthProvider\n                            }, this.baseUrl);\n                            break;\n                        }\n                }\n            };\n            window.addEventListener(\"message\", messageListener);\n        });\n        return this.postLogin({\n            storedToken: {\n                ...result.storedToken,\n                shouldStoreCookieString: true\n            },\n            walletDetails: {\n                ...result.walletDetails,\n                isIframeStorageEnabled: false\n            }\n        });\n    }\n    /**\n     * @internal\n     */ async loginWithCustomJwt(param) {\n        let { encryptionKey, jwt } = param;\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"loginWithCustomJwt\",\n            params: {\n                encryptionKey,\n                jwt\n            }\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * @internal\n     */ async loginWithCustomAuthEndpoint(param) {\n        let { encryptionKey, payload } = param;\n        await this.preLogin();\n        const result = await this.LoginQuerier.call({\n            procedureName: \"loginWithCustomAuthEndpoint\",\n            params: {\n                encryptionKey,\n                payload\n            }\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * @internal\n     */ async verifyEmailLoginOtp(param) {\n        let { email, otp, recoveryCode } = param;\n        const result = await this.LoginQuerier.call({\n            procedureName: \"verifyThirdwebEmailLoginOtp\",\n            params: {\n                email,\n                otp,\n                recoveryCode\n            }\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * @internal\n     */ async verifySmsLoginOtp(param) {\n        let { phoneNumber, otp, recoveryCode } = param;\n        const result = await this.LoginQuerier.call({\n            procedureName: \"verifyThirdwebSmsLoginOtp\",\n            params: {\n                phoneNumber,\n                otp,\n                recoveryCode\n            }\n        });\n        return this.postLogin(result);\n    }\n    constructor(){\n        super(...arguments);\n        Object.defineProperty(this, \"closeWindow\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (param)=>{\n                let { isWindowOpenedByFn, win, closeOpenedWindow } = param;\n                if (isWindowOpenedByFn) {\n                    win === null || win === void 0 ? void 0 : win.close();\n                } else {\n                    if (win && closeOpenedWindow) {\n                        closeOpenedWindow(win);\n                    } else if (win) {\n                        win.close();\n                    }\n                }\n            }\n        });\n    }\n} //# sourceMappingURL=base-login.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvbGliL2F1dGgvYmFzZS1sb2dpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUU7QUFDakI7QUFDcEQ7O0NBRUMsR0FDTSxNQUFNRSxrQkFBa0JELDZEQUFhQTtJQXNCeEMsTUFBTUUsaUJBQWlCQyxZQUFZLEVBQUU7UUFDakMsTUFBTUMsU0FBUyxNQUFNLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxJQUFJLENBQUM7WUFDeENDLGVBQWU7WUFDZkMsUUFBUTtnQkFBRUw7WUFBYTtRQUMzQjtRQUNBLE9BQU9DO0lBQ1g7SUFDQTs7S0FFQyxHQUNELE1BQU1LLGlCQUFpQjtRQUNuQixNQUFNLElBQUksQ0FBQ0MsUUFBUTtRQUNuQixNQUFNTixTQUFTLE1BQU0sSUFBSSxDQUFDQyxZQUFZLENBQUNDLElBQUksQ0FBQztZQUN4Q0MsZUFBZTtZQUNmQyxRQUFRRztZQUNSQyxZQUFZO1FBQ2hCO1FBQ0EsT0FBTyxJQUFJLENBQUNDLFNBQVMsQ0FBQ1Q7SUFDMUI7SUFDQTs7S0FFQyxHQUNELE1BQU1VLGtCQUFrQixLQUFVLEVBQUU7WUFBWixFQUFFQyxLQUFLLEVBQUcsR0FBVjtRQUNwQixNQUFNLElBQUksQ0FBQ0wsUUFBUTtRQUNuQixNQUFNTixTQUFTLE1BQU0sSUFBSSxDQUFDQyxZQUFZLENBQUNDLElBQUksQ0FBQztZQUN4Q0MsZUFBZTtZQUNmQyxRQUFRO2dCQUFFTztZQUFNO1lBQ2hCSCxZQUFZO1FBQ2hCO1FBQ0EsT0FBTyxJQUFJLENBQUNDLFNBQVMsQ0FBQ1Q7SUFDMUI7SUFDQVksb0JBQW9CYixZQUFZLEVBQUU7UUFDOUIsT0FBUUE7WUFDSixLQUFLSixzRUFBWUEsQ0FBQ2tCLFFBQVE7Z0JBQ3RCLE9BQU87WUFDWDtnQkFDSSxPQUFPO1FBQ2Y7SUFDSjtJQUNBOztLQUVDLEdBQ0QsTUFBTUMsZUFBZUMsSUFBSSxFQUFFO1FBQ3ZCLElBQUlDLE1BQU1ELGlCQUFBQSwyQkFBQUEsS0FBTUUsWUFBWTtRQUM1QixJQUFJQyxxQkFBcUI7UUFDekIsSUFBSSxDQUFDRixLQUFLO1lBQ05BLE1BQU1HLE9BQU9DLElBQUksQ0FBQyxJQUFJLFNBQVMsSUFBSSxDQUFDUixtQkFBbUIsQ0FBQ0csS0FBS00sYUFBYTtZQUMxRUgscUJBQXFCO1FBQ3pCO1FBQ0EsSUFBSSxDQUFDRixLQUFLO1lBQ04sTUFBTSxJQUFJTSxNQUFNO1FBQ3BCO1FBQ0Esa0JBQWtCO1FBQ2xCLHFEQUFxRDtRQUNyRCxNQUFNLENBQUMsRUFBRUMsU0FBUyxFQUFFLENBQUMsR0FBRyxNQUFNQyxRQUFRQyxHQUFHLENBQUM7WUFDdEMsSUFBSSxDQUFDM0IsZ0JBQWdCLENBQUNpQixLQUFLTSxhQUFhO1lBQ3hDLElBQUksQ0FBQ2YsUUFBUTtTQUNoQjtRQUNEVSxJQUFJVSxRQUFRLENBQUNDLElBQUksR0FBR0o7UUFDcEIseUNBQXlDO1FBQ3pDLE1BQU12QixTQUFTLE1BQU0sSUFBSXdCLFFBQVEsQ0FBQ0ksU0FBU0M7WUFDdkMsK0NBQStDO1lBQy9DLE1BQU1DLFlBQVlYLE9BQU9ZLFdBQVcsQ0FBQztnQkFDakMsSUFBSSxDQUFDZixLQUFLO29CQUNOO2dCQUNKO2dCQUNBLElBQUlBLElBQUlnQixNQUFNLEVBQUU7b0JBQ1pDLGNBQWNIO29CQUNkWCxPQUFPZSxtQkFBbUIsQ0FBQyxXQUFXQztvQkFDdENOLE9BQU8sSUFBSVAsTUFBTTtnQkFDckI7WUFDSixHQUFHO1lBQ0gsTUFBTWEsa0JBQWtCLE9BQU9DO2dCQUMzQixJQUFJQSxNQUFNQyxNQUFNLEtBQUssSUFBSSxDQUFDQyxPQUFPLEVBQUU7b0JBQy9CO2dCQUNKO2dCQUNBLElBQUksT0FBT0YsTUFBTUcsSUFBSSxLQUFLLFVBQVU7b0JBQ2hDVixPQUFPLElBQUlQLE1BQU07b0JBQ2pCO2dCQUNKO2dCQUNBLE9BQVFjLE1BQU1HLElBQUksQ0FBQ0MsU0FBUztvQkFDeEIsS0FBSzt3QkFBb0I7NEJBQ3JCckIsT0FBT2UsbUJBQW1CLENBQUMsV0FBV0M7NEJBQ3RDRixjQUFjSDs0QkFDZCxJQUFJLENBQUNXLFdBQVcsQ0FBQztnQ0FDYnZCO2dDQUNBRjtnQ0FDQTBCLGlCQUFpQixFQUFFM0IsaUJBQUFBLDJCQUFBQSxLQUFNMkIsaUJBQWlCOzRCQUM5Qzs0QkFDQSxJQUFJTixNQUFNRyxJQUFJLENBQUNJLFVBQVUsRUFBRTtnQ0FDdkJmLFFBQVFRLE1BQU1HLElBQUksQ0FBQ0ksVUFBVTs0QkFDakM7NEJBQ0E7d0JBQ0o7b0JBQ0EsS0FBSzt3QkFBbUI7NEJBQ3BCeEIsT0FBT2UsbUJBQW1CLENBQUMsV0FBV0M7NEJBQ3RDRixjQUFjSDs0QkFDZCxJQUFJLENBQUNXLFdBQVcsQ0FBQztnQ0FDYnZCO2dDQUNBRjtnQ0FDQTBCLGlCQUFpQixFQUFFM0IsaUJBQUFBLDJCQUFBQSxLQUFNMkIsaUJBQWlCOzRCQUM5Qzs0QkFDQWIsT0FBTyxJQUFJUCxNQUFNYyxNQUFNRyxJQUFJLENBQUNLLEtBQUs7NEJBQ2pDO3dCQUNKO29CQUNBLEtBQUs7d0JBQTJCOzRCQUM1QjVCLGdCQUFBQSwwQkFBQUEsSUFBSzZCLFdBQVcsQ0FBQztnQ0FDYkwsV0FBVztnQ0FDWE0sbUJBQW1CLElBQUksQ0FBQ0MsTUFBTSxDQUFDQyxRQUFRO2dDQUN2Q0MsWUFBWWxDLEtBQUtNLGFBQWE7NEJBQ2xDLEdBQUcsSUFBSSxDQUFDaUIsT0FBTzs0QkFDZjt3QkFDSjtnQkFDSjtZQUNKO1lBQ0FuQixPQUFPK0IsZ0JBQWdCLENBQUMsV0FBV2Y7UUFDdkM7UUFDQSxPQUFPLElBQUksQ0FBQzFCLFNBQVMsQ0FBQztZQUNsQjBDLGFBQWE7Z0JBQUUsR0FBR25ELE9BQU9tRCxXQUFXO2dCQUFFQyx5QkFBeUI7WUFBSztZQUNwRUMsZUFBZTtnQkFBRSxHQUFHckQsT0FBT3FELGFBQWE7Z0JBQUVDLHdCQUF3QjtZQUFNO1FBQzVFO0lBQ0o7SUFDQTs7S0FFQyxHQUNELE1BQU1DLG1CQUFtQixLQUF1QixFQUFFO1lBQXpCLEVBQUVDLGFBQWEsRUFBRUMsR0FBRyxFQUFHLEdBQXZCO1FBQ3JCLE1BQU0sSUFBSSxDQUFDbkQsUUFBUTtRQUNuQixNQUFNTixTQUFTLE1BQU0sSUFBSSxDQUFDQyxZQUFZLENBQUNDLElBQUksQ0FBQztZQUN4Q0MsZUFBZTtZQUNmQyxRQUFRO2dCQUFFb0Q7Z0JBQWVDO1lBQUk7UUFDakM7UUFDQSxPQUFPLElBQUksQ0FBQ2hELFNBQVMsQ0FBQ1Q7SUFDMUI7SUFDQTs7S0FFQyxHQUNELE1BQU0wRCw0QkFBNEIsS0FBMkIsRUFBRTtZQUE3QixFQUFFRixhQUFhLEVBQUVHLE9BQU8sRUFBRyxHQUEzQjtRQUM5QixNQUFNLElBQUksQ0FBQ3JELFFBQVE7UUFDbkIsTUFBTU4sU0FBUyxNQUFNLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxJQUFJLENBQUM7WUFDeENDLGVBQWU7WUFDZkMsUUFBUTtnQkFBRW9EO2dCQUFlRztZQUFRO1FBQ3JDO1FBQ0EsT0FBTyxJQUFJLENBQUNsRCxTQUFTLENBQUNUO0lBQzFCO0lBQ0E7O0tBRUMsR0FDRCxNQUFNNEQsb0JBQW9CLEtBQTZCLEVBQUU7WUFBL0IsRUFBRWpELEtBQUssRUFBRWtELEdBQUcsRUFBRUMsWUFBWSxFQUFHLEdBQTdCO1FBQ3RCLE1BQU05RCxTQUFTLE1BQU0sSUFBSSxDQUFDQyxZQUFZLENBQUNDLElBQUksQ0FBQztZQUN4Q0MsZUFBZTtZQUNmQyxRQUFRO2dCQUFFTztnQkFBT2tEO2dCQUFLQztZQUFhO1FBQ3ZDO1FBQ0EsT0FBTyxJQUFJLENBQUNyRCxTQUFTLENBQUNUO0lBQzFCO0lBQ0E7O0tBRUMsR0FDRCxNQUFNK0Qsa0JBQWtCLEtBQW1DLEVBQUU7WUFBckMsRUFBRUMsV0FBVyxFQUFFSCxHQUFHLEVBQUVDLFlBQVksRUFBRyxHQUFuQztRQUNwQixNQUFNOUQsU0FBUyxNQUFNLElBQUksQ0FBQ0MsWUFBWSxDQUFDQyxJQUFJLENBQUM7WUFDeENDLGVBQWU7WUFDZkMsUUFBUTtnQkFBRTREO2dCQUFhSDtnQkFBS0M7WUFBYTtRQUM3QztRQUNBLE9BQU8sSUFBSSxDQUFDckQsU0FBUyxDQUFDVDtJQUMxQjtJQXhMQWlFLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1RDLE9BQU9DLGNBQWMsQ0FBQyxJQUFJLEVBQUUsZUFBZTtZQUN2Q0MsWUFBWTtZQUNaQyxjQUFjO1lBQ2RDLFVBQVU7WUFDVkMsT0FBTztvQkFBQyxFQUFFdEQsa0JBQWtCLEVBQUVGLEdBQUcsRUFBRTBCLGlCQUFpQixFQUFHO2dCQUNuRCxJQUFJeEIsb0JBQW9CO29CQUNwQkYsZ0JBQUFBLDBCQUFBQSxJQUFLeUQsS0FBSztnQkFDZCxPQUNLO29CQUNELElBQUl6RCxPQUFPMEIsbUJBQW1CO3dCQUMxQkEsa0JBQWtCMUI7b0JBQ3RCLE9BQ0ssSUFBSUEsS0FBSzt3QkFDVkEsSUFBSXlELEtBQUs7b0JBQ2I7Z0JBQ0o7WUFDSjtRQUNKO0lBQ0o7QUFxS0osRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL3dhbGxldHMvaW4tYXBwL3dlYi9saWIvYXV0aC9iYXNlLWxvZ2luLmpzPzM5NTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXV0aFByb3ZpZGVyLCB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL2F1dGhlbnRpY2F0aW9uL3R5cGUuanNcIjtcbmltcG9ydCB7IEFic3RyYWN0TG9naW4gfSBmcm9tIFwiLi9hYnN0cmFjdC1sb2dpbi5qc1wiO1xuLyoqXG4gKlxuICovXG5leHBvcnQgY2xhc3MgQmFzZUxvZ2luIGV4dGVuZHMgQWJzdHJhY3RMb2dpbiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNsb3NlV2luZG93XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiAoeyBpc1dpbmRvd09wZW5lZEJ5Rm4sIHdpbiwgY2xvc2VPcGVuZWRXaW5kb3csIH0pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoaXNXaW5kb3dPcGVuZWRCeUZuKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbj8uY2xvc2UoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh3aW4gJiYgY2xvc2VPcGVuZWRXaW5kb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsb3NlT3BlbmVkV2luZG93KHdpbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAod2luKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW4uY2xvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFzeW5jIGdldE9hdXRoTG9naW5VcmwoYXV0aFByb3ZpZGVyKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuTG9naW5RdWVyaWVyLmNhbGwoe1xuICAgICAgICAgICAgcHJvY2VkdXJlTmFtZTogXCJnZXRIZWFkbGVzc09hdXRoTG9naW5MaW5rXCIsXG4gICAgICAgICAgICBwYXJhbXM6IHsgYXV0aFByb3ZpZGVyIH0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBhc3luYyBsb2dpbldpdGhNb2RhbCgpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5wcmVMb2dpbigpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLkxvZ2luUXVlcmllci5jYWxsKHtcbiAgICAgICAgICAgIHByb2NlZHVyZU5hbWU6IFwibG9naW5XaXRoVGhpcmR3ZWJNb2RhbFwiLFxuICAgICAgICAgICAgcGFyYW1zOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBzaG93SWZyYW1lOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdExvZ2luKHJlc3VsdCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jIGxvZ2luV2l0aEVtYWlsT3RwKHsgZW1haWwsIH0pIHtcbiAgICAgICAgYXdhaXQgdGhpcy5wcmVMb2dpbigpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLkxvZ2luUXVlcmllci5jYWxsKHtcbiAgICAgICAgICAgIHByb2NlZHVyZU5hbWU6IFwibG9naW5XaXRoVGhpcmR3ZWJNb2RhbFwiLFxuICAgICAgICAgICAgcGFyYW1zOiB7IGVtYWlsIH0sXG4gICAgICAgICAgICBzaG93SWZyYW1lOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdExvZ2luKHJlc3VsdCk7XG4gICAgfVxuICAgIGdldE9hdXRoUG9wVXBTaXppbmcoYXV0aFByb3ZpZGVyKSB7XG4gICAgICAgIHN3aXRjaCAoYXV0aFByb3ZpZGVyKSB7XG4gICAgICAgICAgICBjYXNlIEF1dGhQcm92aWRlci5GQUNFQk9PSzpcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJ3aWR0aD03MTUsIGhlaWdodD01NTVcIjtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwid2lkdGg9MzUwLCBoZWlnaHQ9NTAwXCI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgYXN5bmMgbG9naW5XaXRoT2F1dGgoYXJncykge1xuICAgICAgICBsZXQgd2luID0gYXJncz8ub3BlbmVkV2luZG93O1xuICAgICAgICBsZXQgaXNXaW5kb3dPcGVuZWRCeUZuID0gZmFsc2U7XG4gICAgICAgIGlmICghd2luKSB7XG4gICAgICAgICAgICB3aW4gPSB3aW5kb3cub3BlbihcIlwiLCBcIkxvZ2luXCIsIHRoaXMuZ2V0T2F1dGhQb3BVcFNpemluZyhhcmdzLm9hdXRoUHJvdmlkZXIpKTtcbiAgICAgICAgICAgIGlzV2luZG93T3BlbmVkQnlGbiA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF3aW4pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNvbWV0aGluZyB3ZW50IHdyb25nIG9wZW5pbmcgcG9wLXVwXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGxvZ291dCB0aGUgdXNlclxuICAgICAgICAvLyBmZXRjaCB0aGUgdXJsIHRvIG9wZW4gdGhlIGxvZ2luIHdpbmRvdyBmcm9tIGlmcmFtZVxuICAgICAgICBjb25zdCBbeyBsb2dpbkxpbmsgfV0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgICB0aGlzLmdldE9hdXRoTG9naW5VcmwoYXJncy5vYXV0aFByb3ZpZGVyKSxcbiAgICAgICAgICAgIHRoaXMucHJlTG9naW4oKSxcbiAgICAgICAgXSk7XG4gICAgICAgIHdpbi5sb2NhdGlvbi5ocmVmID0gbG9naW5MaW5rO1xuICAgICAgICAvLyBsaXN0ZW4gdG8gcmVzdWx0IGZyb20gdGhlIGxvZ2luIHdpbmRvd1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICAvLyBkZXRlY3Qgd2hlbiB0aGUgdXNlciBjbG9zZXMgdGhlIGxvZ2luIHdpbmRvd1xuICAgICAgICAgICAgY29uc3QgcG9sbFRpbWVyID0gd2luZG93LnNldEludGVydmFsKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXdpbikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh3aW4uY2xvc2VkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwocG9sbFRpbWVyKTtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIG1lc3NhZ2VMaXN0ZW5lcik7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoXCJVc2VyIGNsb3NlZCBsb2dpbiB3aW5kb3dcIikpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIDEwMDApO1xuICAgICAgICAgICAgY29uc3QgbWVzc2FnZUxpc3RlbmVyID0gYXN5bmMgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGV2ZW50Lm9yaWdpbiAhPT0gdGhpcy5iYXNlVXJsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBldmVudC5kYXRhICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoXCJJbnZhbGlkIGV2ZW50IGRhdGFcIikpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN3aXRjaCAoZXZlbnQuZGF0YS5ldmVudFR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInVzZXJMb2dpblN1Y2Nlc3NcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIG1lc3NhZ2VMaXN0ZW5lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHBvbGxUaW1lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlV2luZG93KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1dpbmRvd09wZW5lZEJ5Rm4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb3NlT3BlbmVkV2luZG93OiBhcmdzPy5jbG9zZU9wZW5lZFdpbmRvdyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50LmRhdGEuYXV0aFJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZXZlbnQuZGF0YS5hdXRoUmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJ1c2VyTG9naW5GYWlsZWRcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIG1lc3NhZ2VMaXN0ZW5lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHBvbGxUaW1lcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlV2luZG93KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1dpbmRvd09wZW5lZEJ5Rm4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsb3NlT3BlbmVkV2luZG93OiBhcmdzPy5jbG9zZU9wZW5lZFdpbmRvdyxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihldmVudC5kYXRhLmVycm9yKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiaW5qZWN0RGV2ZWxvcGVyQ2xpZW50SWRcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2luPy5wb3N0TWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnRUeXBlOiBcImluamVjdERldmVsb3BlckNsaWVudElkUmVzdWx0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV2ZWxvcGVyQ2xpZW50SWQ6IHRoaXMuY2xpZW50LmNsaWVudElkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhPcHRpb246IGFyZ3Mub2F1dGhQcm92aWRlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHRoaXMuYmFzZVVybCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgbWVzc2FnZUxpc3RlbmVyKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RMb2dpbih7XG4gICAgICAgICAgICBzdG9yZWRUb2tlbjogeyAuLi5yZXN1bHQuc3RvcmVkVG9rZW4sIHNob3VsZFN0b3JlQ29va2llU3RyaW5nOiB0cnVlIH0sXG4gICAgICAgICAgICB3YWxsZXREZXRhaWxzOiB7IC4uLnJlc3VsdC53YWxsZXREZXRhaWxzLCBpc0lmcmFtZVN0b3JhZ2VFbmFibGVkOiBmYWxzZSB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgYXN5bmMgbG9naW5XaXRoQ3VzdG9tSnd0KHsgZW5jcnlwdGlvbktleSwgand0LCB9KSB7XG4gICAgICAgIGF3YWl0IHRoaXMucHJlTG9naW4oKTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5Mb2dpblF1ZXJpZXIuY2FsbCh7XG4gICAgICAgICAgICBwcm9jZWR1cmVOYW1lOiBcImxvZ2luV2l0aEN1c3RvbUp3dFwiLFxuICAgICAgICAgICAgcGFyYW1zOiB7IGVuY3J5cHRpb25LZXksIGp3dCB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdExvZ2luKHJlc3VsdCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jIGxvZ2luV2l0aEN1c3RvbUF1dGhFbmRwb2ludCh7IGVuY3J5cHRpb25LZXksIHBheWxvYWQsIH0pIHtcbiAgICAgICAgYXdhaXQgdGhpcy5wcmVMb2dpbigpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLkxvZ2luUXVlcmllci5jYWxsKHtcbiAgICAgICAgICAgIHByb2NlZHVyZU5hbWU6IFwibG9naW5XaXRoQ3VzdG9tQXV0aEVuZHBvaW50XCIsXG4gICAgICAgICAgICBwYXJhbXM6IHsgZW5jcnlwdGlvbktleSwgcGF5bG9hZCB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdExvZ2luKHJlc3VsdCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jIHZlcmlmeUVtYWlsTG9naW5PdHAoeyBlbWFpbCwgb3RwLCByZWNvdmVyeUNvZGUsIH0pIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy5Mb2dpblF1ZXJpZXIuY2FsbCh7XG4gICAgICAgICAgICBwcm9jZWR1cmVOYW1lOiBcInZlcmlmeVRoaXJkd2ViRW1haWxMb2dpbk90cFwiLFxuICAgICAgICAgICAgcGFyYW1zOiB7IGVtYWlsLCBvdHAsIHJlY292ZXJ5Q29kZSB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdExvZ2luKHJlc3VsdCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jIHZlcmlmeVNtc0xvZ2luT3RwKHsgcGhvbmVOdW1iZXIsIG90cCwgcmVjb3ZlcnlDb2RlLCB9KSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuTG9naW5RdWVyaWVyLmNhbGwoe1xuICAgICAgICAgICAgcHJvY2VkdXJlTmFtZTogXCJ2ZXJpZnlUaGlyZHdlYlNtc0xvZ2luT3RwXCIsXG4gICAgICAgICAgICBwYXJhbXM6IHsgcGhvbmVOdW1iZXIsIG90cCwgcmVjb3ZlcnlDb2RlIH0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0TG9naW4ocmVzdWx0KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlLWxvZ2luLmpzLm1hcCJdLCJuYW1lcyI6WyJBdXRoUHJvdmlkZXIiLCJBYnN0cmFjdExvZ2luIiwiQmFzZUxvZ2luIiwiZ2V0T2F1dGhMb2dpblVybCIsImF1dGhQcm92aWRlciIsInJlc3VsdCIsIkxvZ2luUXVlcmllciIsImNhbGwiLCJwcm9jZWR1cmVOYW1lIiwicGFyYW1zIiwibG9naW5XaXRoTW9kYWwiLCJwcmVMb2dpbiIsInVuZGVmaW5lZCIsInNob3dJZnJhbWUiLCJwb3N0TG9naW4iLCJsb2dpbldpdGhFbWFpbE90cCIsImVtYWlsIiwiZ2V0T2F1dGhQb3BVcFNpemluZyIsIkZBQ0VCT09LIiwibG9naW5XaXRoT2F1dGgiLCJhcmdzIiwid2luIiwib3BlbmVkV2luZG93IiwiaXNXaW5kb3dPcGVuZWRCeUZuIiwid2luZG93Iiwib3BlbiIsIm9hdXRoUHJvdmlkZXIiLCJFcnJvciIsImxvZ2luTGluayIsIlByb21pc2UiLCJhbGwiLCJsb2NhdGlvbiIsImhyZWYiLCJyZXNvbHZlIiwicmVqZWN0IiwicG9sbFRpbWVyIiwic2V0SW50ZXJ2YWwiLCJjbG9zZWQiLCJjbGVhckludGVydmFsIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm1lc3NhZ2VMaXN0ZW5lciIsImV2ZW50Iiwib3JpZ2luIiwiYmFzZVVybCIsImRhdGEiLCJldmVudFR5cGUiLCJjbG9zZVdpbmRvdyIsImNsb3NlT3BlbmVkV2luZG93IiwiYXV0aFJlc3VsdCIsImVycm9yIiwicG9zdE1lc3NhZ2UiLCJkZXZlbG9wZXJDbGllbnRJZCIsImNsaWVudCIsImNsaWVudElkIiwiYXV0aE9wdGlvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJzdG9yZWRUb2tlbiIsInNob3VsZFN0b3JlQ29va2llU3RyaW5nIiwid2FsbGV0RGV0YWlscyIsImlzSWZyYW1lU3RvcmFnZUVuYWJsZWQiLCJsb2dpbldpdGhDdXN0b21Kd3QiLCJlbmNyeXB0aW9uS2V5Iiwiand0IiwibG9naW5XaXRoQ3VzdG9tQXV0aEVuZHBvaW50IiwicGF5bG9hZCIsInZlcmlmeUVtYWlsTG9naW5PdHAiLCJvdHAiLCJyZWNvdmVyeUNvZGUiLCJ2ZXJpZnlTbXNMb2dpbk90cCIsInBob25lTnVtYmVyIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsInZhbHVlIiwiY2xvc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/index.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Auth: function() { return /* binding */ Auth; }\n/* harmony export */ });\n/* harmony import */ var _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Storage/LocalStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/Storage/LocalStorage.js\");\n/* harmony import */ var _base_login_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base-login.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/base-login.js\");\n\n\n/**\n *\n */ class Auth {\n    async preLogin() {\n        await this.logout();\n    }\n    async postLogin(param) {\n        let { storedToken, walletDetails } = param;\n        if (storedToken.shouldStoreCookieString) {\n            await this.localStorage.saveAuthCookie(storedToken.cookieString);\n        }\n        const initializedUser = await this.onAuthSuccess({\n            storedToken,\n            walletDetails\n        });\n        return initializedUser;\n    }\n    async loginWithAuthToken(authToken, recoveryCode) {\n        await this.preLogin();\n        const result = await this.AuthQuerier.call({\n            procedureName: \"loginWithStoredTokenDetails\",\n            params: {\n                storedToken: authToken.storedToken,\n                recoveryCode\n            }\n        });\n        return this.postLogin(result);\n    }\n    /**\n     * Used to log the user into their thirdweb wallet on your platform via a myriad of auth providers\n     * @example\n     * ```typescript\n     * const thirdwebInAppWallet = new InAppWalletSdk({clientId: \"YOUR_CLIENT_ID\", chain: \"Polygon\"})\n     * try {\n     *   const user = await thirdwebInAppWallet.auth.loginWithModal();\n     *   // user is now logged in\n     * } catch (e) {\n     *   // User closed modal or something else went wrong during the authentication process\n     *   console.error(e)\n     * }\n     * ```\n     * @returns `{{user: InitializedUser}}` An InitializedUser object.\n     */ async loginWithModal() {\n        return this.BaseLogin.loginWithModal();\n    }\n    /**\n     * Used to log the user into their thirdweb wallet using email OTP\n     * @example\n     * ```typescript\n     *  // Basic Flow\n     *  const thirdwebInAppWallet = new InAppWalletSdk({clientId: \"\", chain: \"Polygon\"});\n     *  try {\n     *    // prompts user to enter the code they received\n     *    const user = await thirdwebInAppWallet.auth.loginWithThirdwebEmailOtp({ email : \"you@example.com\" });\n     *    // user is now logged in\n     *  } catch (e) {\n     *    // User closed the OTP modal or something else went wrong during the authentication process\n     *    console.error(e)\n     *  }\n     * ```\n     * @param args - args.email: We will send the email an OTP that needs to be entered in order for them to be logged in.\n     * @returns `{{user: InitializedUser}}` An InitializedUser object. See {@link InAppWalletSdk.getUser} for more\n     */ async loginWithEmailOtp(args) {\n        return this.BaseLogin.loginWithEmailOtp(args);\n    }\n    /**\n     * @internal\n     */ async loginWithCustomJwt(args) {\n        return this.BaseLogin.loginWithCustomJwt(args);\n    }\n    /**\n     * @internal\n     */ async loginWithCustomAuthEndpoint(args) {\n        return this.BaseLogin.loginWithCustomAuthEndpoint(args);\n    }\n    /**\n     * @internal\n     */ async loginWithOauth(args) {\n        return this.BaseLogin.loginWithOauth(args);\n    }\n    /**\n     * A headless way to send the users at the passed email an OTP code.\n     * You need to then call {@link Auth.verifyEmailLoginOtp} in order to complete the login process\n     * @example\n     * @param param0.email\n     * ```typescript\n     *  const thirdwebInAppWallet = new InAppWalletSdk({clientId: \"\", chain: \"Polygon\"});\n     *  // sends user an OTP code\n     * try {\n     *    await thirdwebInAppWallet.auth.sendEmailLoginOtp({ email : \"you@example.com\" });\n     * } catch(e) {\n     *    // Error Sending user's email an OTP code\n     *    console.error(e);\n     * }\n     *\n     * // Then when your user is ready to verify their OTP\n     * try {\n     *    const user = await thirdwebInAppWallet.auth.verifyEmailLoginOtp({ email: \"you@example.com\", otp: \"6-DIGIT_CODE_HERE\" });\n     * } catch(e) {\n     *    // Error verifying the OTP code\n     *    console.error(e)\n     * }\n     * ```\n     * @param param0 - param0.email We will send the email an OTP that needs to be entered in order for them to be logged in.\n     * @returns `{{ isNewUser: boolean }}` IsNewUser indicates if the user is a new user to your platform\n     * @internal\n     */ async sendEmailLoginOtp(param) {\n        let { email } = param;\n        return this.BaseLogin.sendEmailLoginOtp({\n            email\n        });\n    }\n    /**\n     * @internal\n     */ async sendSmsLoginOtp(param) {\n        let { phoneNumber } = param;\n        return this.BaseLogin.sendSmsLoginOtp({\n            phoneNumber\n        });\n    }\n    /**\n     * Used to verify the otp that the user receives from thirdweb\n     *\n     * See {@link Auth.sendEmailLoginOtp} for how the headless call flow looks like. Simply swap out the calls to `loginWithThirdwebEmailOtp` with `verifyThirdwebEmailLoginOtp`\n     * @param args - props.email We will send the email an OTP that needs to be entered in order for them to be logged in.\n     * props.otp The code that the user received in their email\n     * @returns `{{user: InitializedUser}}` An InitializedUser object containing the user's status, wallet, authDetails, and more\n     * @internal\n     */ async verifyEmailLoginOtp(args) {\n        return this.BaseLogin.verifyEmailLoginOtp(args);\n    }\n    /**\n     * @internal\n     */ async verifySmsLoginOtp(args) {\n        return this.BaseLogin.verifySmsLoginOtp(args);\n    }\n    /**\n     * Logs any existing user out of their wallet.\n     * @returns `{{success: boolean}}` true if a user is successfully logged out. false if there's no user currently logged in.\n     * @internal\n     */ async logout() {\n        const { success } = await this.AuthQuerier.call({\n            procedureName: \"logout\",\n            params: undefined\n        });\n        const isRemoveAuthCookie = await this.localStorage.removeAuthCookie();\n        const isRemoveUserId = await this.localStorage.removeWalletUserId();\n        return {\n            success: success || isRemoveAuthCookie || isRemoveUserId\n        };\n    }\n    /**\n     * Used to manage the user's auth states. This should not be instantiated directly.\n     * Call {@link InAppWalletSdk.auth} instead.\n     * @internal\n     */ constructor({ client, querier, onAuthSuccess, baseUrl }){\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"AuthQuerier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"localStorage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"onAuthSuccess\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"BaseLogin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.client = client;\n        this.AuthQuerier = querier;\n        this.localStorage = new _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_0__.LocalStorage({\n            clientId: client.clientId\n        });\n        this.onAuthSuccess = onAuthSuccess;\n        this.BaseLogin = new _base_login_js__WEBPACK_IMPORTED_MODULE_1__.BaseLogin({\n            postLogin: async (result)=>{\n                return this.postLogin(result);\n            },\n            preLogin: async ()=>{\n                await this.preLogin();\n            },\n            querier: querier,\n            client,\n            baseUrl\n        });\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/passkeys.js":
/*!********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/passkeys.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasStoredPasskey: function() { return /* binding */ hasStoredPasskey; },\n/* harmony export */   loginWithPasskey: function() { return /* binding */ loginWithPasskey; },\n/* harmony export */   registerPasskey: function() { return /* binding */ registerPasskey; }\n/* harmony export */ });\n/* harmony import */ var _passwordless_id_webauthn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @passwordless-id/webauthn */ \"(app-pages-browser)/./node_modules/@passwordless-id/webauthn/dist/esm/index.js\");\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _utils_fetch_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../utils/fetch.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/fetch.js\");\n/* harmony import */ var _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/Storage/LocalStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/Storage/LocalStorage.js\");\n\n\n\n\nfunction getVerificationPath() {\n    return \"\".concat((0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"inAppWallet\"), \"/api/2024-05-05/login/passkey/callback\");\n}\nfunction getChallengePath(type, username) {\n    return \"\".concat((0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_1__.getThirdwebBaseUrl)(\"inAppWallet\"), \"/api/2024-05-05/login/passkey?type=\").concat(type).concat(username ? \"&username=\".concat(username) : \"\");\n}\nasync function registerPasskey(options) {\n    if (!_passwordless_id_webauthn__WEBPACK_IMPORTED_MODULE_0__.client.isAvailable()) {\n        throw new Error(\"Passkeys are not available on this device\");\n    }\n    // TODO inject this\n    const storage = new _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_2__.LocalStorage({\n        clientId: options.client.clientId\n    });\n    const fetchWithId = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_3__.getClientFetch)(options.client);\n    var _options_username;\n    const generatedName = (_options_username = options.username) !== null && _options_username !== void 0 ? _options_username : generateUsername();\n    // 1. request challenge from  server\n    const res = await fetchWithId(getChallengePath(\"sign-up\", generatedName));\n    const challengeData = await res.json();\n    if (!challengeData.challenge) {\n        throw new Error(\"No challenge received\");\n    }\n    const challenge = challengeData.challenge;\n    var _options_authenticatorType;\n    // 2. initiate registration\n    const registration = await _passwordless_id_webauthn__WEBPACK_IMPORTED_MODULE_0__.client.register(generatedName, challenge, {\n        authenticatorType: (_options_authenticatorType = options.authenticatorType) !== null && _options_authenticatorType !== void 0 ? _options_authenticatorType : \"auto\",\n        userVerification: \"required\",\n        attestation: true,\n        debug: false\n    });\n    // 3. store the credentialId in local storage\n    await storage.savePasskeyCredentialId(registration.credential.id);\n    // 4. send the registration object to the server\n    const verifRes = await fetchWithId(getVerificationPath(), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            type: \"sign-up\",\n            authenticatorData: registration.authenticatorData,\n            credentialId: registration.credential.id,\n            serverVerificationId: challengeData.serverVerificationId,\n            clientData: registration.clientData,\n            username: generatedName,\n            credential: {\n                publicKey: registration.credential.publicKey,\n                algorithm: registration.credential.algorithm\n            }\n        })\n    });\n    const verifData = await verifRes.json();\n    if (!verifData) {\n        throw new Error(\"No token received\");\n    }\n    // 5. returns back the IAW authentication token\n    return verifData;\n}\nasync function loginWithPasskey(options) {\n    if (!_passwordless_id_webauthn__WEBPACK_IMPORTED_MODULE_0__.client.isAvailable()) {\n        throw new Error(\"Passkeys are not available on this device\");\n    }\n    // TODO inject this\n    const storage = new _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_2__.LocalStorage({\n        clientId: options.client.clientId\n    });\n    const fetchWithId = (0,_utils_fetch_js__WEBPACK_IMPORTED_MODULE_3__.getClientFetch)(options.client);\n    // 1. request challenge from  server/iframe\n    const res = await fetchWithId(getChallengePath(\"sign-in\"));\n    const challengeData = await res.json();\n    if (!challengeData.challenge) {\n        throw new Error(\"No challenge received\");\n    }\n    const challenge = challengeData.challenge;\n    // 1.2. find the user's credentialId in local storage\n    const credentialId = await storage.getPasskeyCredentialId();\n    const credentials = credentialId ? [\n        credentialId\n    ] : [];\n    var _options_authenticatorType;\n    // 2. initiate login\n    const authentication = await _passwordless_id_webauthn__WEBPACK_IMPORTED_MODULE_0__.client.authenticate(credentials, challenge, {\n        authenticatorType: (_options_authenticatorType = options.authenticatorType) !== null && _options_authenticatorType !== void 0 ? _options_authenticatorType : \"auto\",\n        userVerification: \"required\"\n    });\n    // 3. send the authentication object to the server/iframe\n    const verifRes = await fetchWithId(getVerificationPath(), {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            type: \"sign-in\",\n            authenticatorData: authentication.authenticatorData,\n            credentialId: authentication.credentialId,\n            serverVerificationId: challengeData.serverVerificationId,\n            clientData: authentication.clientData,\n            signature: authentication.signature\n        })\n    });\n    // 5. store the credentialId in local storage\n    await storage.savePasskeyCredentialId(authentication.credentialId);\n    const verifData = await verifRes.json();\n    if (!verifData) {\n        throw new Error(\"No token received\");\n    }\n    // 6. return the auth'd user type\n    return verifData;\n}\n/**\n * Returns whether this device has a stored passkey ready to be used for sign-in\n * @param client - the thirdweb client\n * @returns whether the device has a stored passkey\n * @wallet\n */ async function hasStoredPasskey(client) {\n    const storage = new _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_2__.LocalStorage({\n        clientId: client.clientId\n    });\n    const credId = await storage.getPasskeyCredentialId();\n    return !!credId;\n}\nfunction generateUsername() {\n    return \"wallet-\".concat(new Date().toISOString());\n} //# sourceMappingURL=passkeys.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/passkeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/in-app-account.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/in-app-account.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IFrameWallet: function() { return /* binding */ IFrameWallet; }\n/* harmony export */ });\n/* harmony import */ var _chains_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../chains/utils.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/chains/utils.js\");\n/* harmony import */ var _rpc_actions_eth_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../rpc/actions/eth_sendRawTransaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/actions/eth_sendRawTransaction.js\");\n/* harmony import */ var _rpc_rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../rpc/rpc.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/rpc/rpc.js\");\n/* harmony import */ var _utils_signatures_helpers_parseTypedData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/signatures/helpers/parseTypedData.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parseTypedData.js\");\n/* harmony import */ var _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/authentication/type.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/type.js\");\n/* harmony import */ var _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Storage/LocalStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/Storage/LocalStorage.js\");\n\n\n\n\n\n\n/**\n *\n */ class IFrameWallet {\n    /**\n     * Used to set-up the user device in the case that they are using incognito\n     * @returns `{walletAddress : string }` The user's wallet details\n     * @internal\n     */ async postWalletSetUp(param) {\n        let { deviceShareStored, walletAddress, isIframeStorageEnabled, walletUserId } = param;\n        if (!isIframeStorageEnabled) {\n            await this.localStorage.saveDeviceShare(deviceShareStored, walletUserId);\n        }\n        return {\n            walletAddress\n        };\n    }\n    /**\n     * Gets the various status states of the user\n     * @example\n     * ```typescript\n     *  const userStatus = await Paper.getUserWalletStatus();\n     *  switch (userStatus.status) {\n     *  case UserWalletStatus.LOGGED_OUT: {\n     *    // User is logged out, call one of the auth methods on Paper.auth to authenticate the user\n     *    break;\n     *  }\n     *  case UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED: {\n     *    // User is logged in, but does not have a wallet associated with it\n     *    // you also have access to the user's details\n     *    userStatus.user.authDetails;\n     *    break;\n     *  }\n     *  case UserWalletStatus.LOGGED_IN_NEW_DEVICE: {\n     *    // User is logged in and created a wallet already, but is missing the device shard\n     *    // You have access to:\n     *    userStatus.user.authDetails;\n     *    userStatus.user.walletAddress;\n     *    break;\n     *  }\n     *  case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n     *    // user is logged in and wallet is all set up.\n     *    // You have access to:\n     *    userStatus.user.authDetails;\n     *    userStatus.user.walletAddress;\n     *    userStatus.user.wallet;\n     *    break;\n     *  }\n     *}\n     *```\n     * @returns `{GetUserWalletStatusFnReturnType}` an object to containing various information on the user statuses\n     * @internal\n     */ async getUserWalletStatus() {\n        const userStatus = await this.walletManagerQuerier.call({\n            procedureName: \"getUserStatus\",\n            params: undefined\n        });\n        if (userStatus.status === _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_0__.UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED) {\n            return {\n                status: _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_0__.UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED,\n                ...userStatus.user,\n                account: await this.getAccount()\n            };\n        }\n        if (userStatus.status === _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_0__.UserWalletStatus.LOGGED_IN_NEW_DEVICE) {\n            return {\n                status: _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_0__.UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED,\n                ...userStatus.user\n            };\n        }\n        if (userStatus.status === _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_0__.UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED) {\n            return {\n                status: _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_0__.UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED,\n                ...userStatus.user\n            };\n        }\n        // Logged out\n        return {\n            status: userStatus.status\n        };\n    }\n    /**\n     * Returns an account that communicates with the iFrame for signing operations\n     * @internal\n     */ async getAccount() {\n        const querier = this.walletManagerQuerier;\n        const { address } = await querier.call({\n            procedureName: \"getAddress\",\n            params: undefined\n        });\n        const _signTransaction = async (tx)=>{\n            var _tx_to;\n            // biome-ignore lint/suspicious/noExplicitAny: ethers tx transformation\n            const transaction = {\n                to: (_tx_to = tx.to) !== null && _tx_to !== void 0 ? _tx_to : undefined,\n                data: tx.data,\n                value: tx.value,\n                gasLimit: tx.gas,\n                nonce: tx.nonce,\n                chainId: tx.chainId\n            };\n            if (tx.maxFeePerGas) {\n                // ethers (in the iframe) rejects any type 0 trasaction with unknown keys\n                // TODO remove this once iframe is upgraded to v5\n                transaction.accessList = tx.accessList;\n                transaction.maxFeePerGas = tx.maxFeePerGas;\n                transaction.maxPriorityFeePerGas = tx.maxPriorityFeePerGas;\n                transaction.type = 2;\n            } else {\n                transaction.gasPrice = tx.gasPrice;\n                transaction.type = 0;\n            }\n            const { signedTransaction } = await querier.call({\n                procedureName: \"signTransaction\",\n                params: {\n                    transaction,\n                    chainId: tx.chainId,\n                    rpcEndpoint: \"https://\".concat(tx.chainId, \".rpc.thirdweb.com\")\n                }\n            });\n            return signedTransaction;\n        };\n        const client = this.client;\n        return {\n            address,\n            async signTransaction (tx) {\n                if (!tx.chainId) {\n                    throw new Error(\"chainId required in tx to sign\");\n                }\n                return _signTransaction({\n                    ...tx,\n                    chainId: tx.chainId\n                });\n            },\n            async sendTransaction (tx) {\n                const rpcRequest = (0,_rpc_rpc_js__WEBPACK_IMPORTED_MODULE_1__.getRpcClient)({\n                    client,\n                    chain: (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCachedChain)(tx.chainId)\n                });\n                const signedTx = await _signTransaction(tx);\n                const transactionHash = await (0,_rpc_actions_eth_sendRawTransaction_js__WEBPACK_IMPORTED_MODULE_3__.eth_sendRawTransaction)(rpcRequest, signedTx);\n                return {\n                    transactionHash\n                };\n            },\n            async signMessage (param) {\n                let { message } = param;\n                const messageDecoded = typeof message === \"string\" ? message : message.raw;\n                const { signedMessage } = await querier.call({\n                    procedureName: \"signMessage\",\n                    params: {\n                        // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n                        message: messageDecoded,\n                        chainId: 1\n                    }\n                });\n                return signedMessage;\n            },\n            async signTypedData (_typedData) {\n                var _parsedTypedData_types, _parsedTypedData_domain;\n                const parsedTypedData = (0,_utils_signatures_helpers_parseTypedData_js__WEBPACK_IMPORTED_MODULE_4__.parseTypedData)(_typedData);\n                // deleting EIP712 Domain as it results in ambiguous primary type on some cases\n                // this happens when going from viem to ethers via the iframe\n                if ((_parsedTypedData_types = parsedTypedData.types) === null || _parsedTypedData_types === void 0 ? void 0 : _parsedTypedData_types.EIP712Domain) {\n                    parsedTypedData.types.EIP712Domain = undefined;\n                }\n                // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n                const chainId = Number(((_parsedTypedData_domain = parsedTypedData.domain) === null || _parsedTypedData_domain === void 0 ? void 0 : _parsedTypedData_domain.chainId) || 1);\n                const { signedTypedData } = await querier.call({\n                    procedureName: \"signTypedDataV4\",\n                    params: {\n                        // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n                        domain: parsedTypedData.domain,\n                        types: parsedTypedData.types,\n                        message: parsedTypedData.message,\n                        chainId,\n                        rpcEndpoint: \"https://\".concat(chainId, \".rpc.thirdweb.com\")\n                    }\n                });\n                return signedTypedData;\n            }\n        };\n    }\n    /**\n     * Not meant to be initialized directly. Call {@link initializeUser} to get an instance\n     * @internal\n     */ constructor({ client, querier }){\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"walletManagerQuerier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"localStorage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.client = client;\n        this.walletManagerQuerier = querier;\n        this.localStorage = new _utils_Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_5__.LocalStorage({\n            clientId: client.clientId\n        });\n    }\n} //# sourceMappingURL=in-app-account.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/in-app-account.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/web-connector.js":
/*!********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/web-connector.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InAppWebConnector: function() { return /* binding */ InAppWebConnector; }\n/* harmony export */ });\n/* harmony import */ var _utils_domains_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../utils/domains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/domains.js\");\n/* harmony import */ var _core_authentication_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/authentication/index.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/index.js\");\n/* harmony import */ var _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/authentication/type.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/authentication/type.js\");\n/* harmony import */ var _utils_iFrameCommunication_InAppWalletIframeCommunicator_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/iFrameCommunication/InAppWalletIframeCommunicator.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js\");\n/* harmony import */ var _auth_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth/index.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/index.js\");\n/* harmony import */ var _auth_passkeys_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth/passkeys.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/auth/passkeys.js\");\n/* harmony import */ var _in_app_account_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./in-app-account.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/in-app-account.js\");\n\n\n\n\n\n\n\n/**\n * @internal\n */ class InAppWebConnector {\n    isClientIdLegacyPaper(clientId) {\n        if (clientId.indexOf(\"-\") > 0 && clientId.length === 36) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the usr if they are logged in\n     * @example\n     * ```js\n     *  const user = await thirdwebInAppWallet.getUser();\n     *  switch (user.status) {\n     *     case UserWalletStatus.LOGGED_OUT: {\n     *       // User is logged out, call one of the auth methods on thirdwebInAppWallet.auth to authenticate the user\n     *       break;\n     *     }\n     *     case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n     *       // user is logged in and wallet is all set up.\n     *       // You have access to:\n     *       user.status;\n     *       user.authDetails;\n     *       user.walletAddress;\n     *       user.wallet;\n     *       break;\n     *     }\n     * }\n     * ```\n     * @returns GetUser - an object to containing various information on the user statuses\n     */ async getUser() {\n        return this.wallet.getUserWalletStatus();\n    }\n    getAccount() {\n        return this.wallet.getAccount();\n    }\n    async preAuthenticate(args) {\n        const strategy = args.strategy;\n        switch(strategy){\n            case \"email\":\n                {\n                    return this.auth.sendEmailLoginOtp({\n                        email: args.email\n                    });\n                }\n            case \"phone\":\n                {\n                    return this.auth.sendSmsLoginOtp({\n                        phoneNumber: args.phoneNumber\n                    });\n                }\n            default:\n                assertUnreachable(strategy, \"Provider: \".concat(strategy, \" doesnt require pre-authentication\"));\n        }\n    }\n    async authenticate(args) {\n        const strategy = args.strategy;\n        switch(strategy){\n            case \"email\":\n                {\n                    return await this.auth.verifyEmailLoginOtp({\n                        email: args.email,\n                        otp: args.verificationCode\n                    });\n                }\n            case \"phone\":\n                {\n                    return await this.auth.verifySmsLoginOtp({\n                        otp: args.verificationCode,\n                        phoneNumber: args.phoneNumber\n                    });\n                }\n            case \"apple\":\n            case \"facebook\":\n            case \"google\":\n                {\n                    const oauthProvider = _core_authentication_index_js__WEBPACK_IMPORTED_MODULE_0__.oauthStrategyToAuthProvider[strategy];\n                    return this.auth.loginWithOauth({\n                        oauthProvider,\n                        closeOpenedWindow: args.closeOpenedWindow,\n                        openedWindow: args.openedWindow\n                    });\n                }\n            case \"jwt\":\n                {\n                    return this.auth.loginWithCustomJwt({\n                        jwt: args.jwt,\n                        encryptionKey: args.encryptionKey\n                    });\n                }\n            case \"auth_endpoint\":\n                {\n                    return this.auth.loginWithCustomAuthEndpoint({\n                        payload: args.payload,\n                        encryptionKey: args.encryptionKey\n                    });\n                }\n            case \"iframe_email_verification\":\n                {\n                    return this.auth.loginWithEmailOtp({\n                        email: args.email\n                    });\n                }\n            case \"iframe\":\n                {\n                    return this.auth.loginWithModal();\n                }\n            case \"passkey\":\n                {\n                    if (args.type === \"sign-up\") {\n                        const authToken = await (0,_auth_passkeys_js__WEBPACK_IMPORTED_MODULE_1__.registerPasskey)({\n                            client: args.client,\n                            authenticatorType: args.authenticatorType,\n                            username: args.passkeyName\n                        });\n                        return this.auth.loginWithAuthToken(authToken);\n                    }\n                    const authToken = await (0,_auth_passkeys_js__WEBPACK_IMPORTED_MODULE_1__.loginWithPasskey)({\n                        client: args.client,\n                        authenticatorType: args.authenticatorType\n                    });\n                    return this.auth.loginWithAuthToken(authToken);\n                }\n            default:\n                assertUnreachable(strategy);\n        }\n    }\n    async logout() {\n        return await this.auth.logout();\n    }\n    /**\n     * @example\n     * `const thirdwebInAppWallet = new InAppWalletSdk({ clientId: \"\", chain: \"Goerli\" });`\n     * @internal\n     */ constructor({ client, onAuthSuccess }){\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"querier\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"wallet\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Used to manage the Auth state of the user.\n         */ Object.defineProperty(this, \"auth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (this.isClientIdLegacyPaper(client.clientId)) {\n            throw new Error(\"You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page\");\n        }\n        const baseUrl = (0,_utils_domains_js__WEBPACK_IMPORTED_MODULE_2__.getThirdwebBaseUrl)(\"inAppWallet\");\n        this.client = client;\n        this.querier = new _utils_iFrameCommunication_InAppWalletIframeCommunicator_js__WEBPACK_IMPORTED_MODULE_3__.InAppWalletIframeCommunicator({\n            clientId: client.clientId,\n            baseUrl\n        });\n        this.wallet = new _in_app_account_js__WEBPACK_IMPORTED_MODULE_4__.IFrameWallet({\n            client,\n            querier: this.querier\n        });\n        this.auth = new _auth_index_js__WEBPACK_IMPORTED_MODULE_5__.Auth({\n            client,\n            querier: this.querier,\n            baseUrl,\n            onAuthSuccess: async (authResult)=>{\n                onAuthSuccess === null || onAuthSuccess === void 0 ? void 0 : onAuthSuccess(authResult);\n                await this.wallet.postWalletSetUp({\n                    ...authResult.walletDetails,\n                    walletUserId: authResult.storedToken.authDetails.userWalletId\n                });\n                await this.querier.call({\n                    procedureName: \"initIframe\",\n                    params: {\n                        deviceShareStored: authResult.walletDetails.deviceShareStored,\n                        clientId: this.client.clientId,\n                        walletUserId: authResult.storedToken.authDetails.userWalletId,\n                        authCookie: authResult.storedToken.cookieString\n                    }\n                });\n                return {\n                    user: {\n                        status: _core_authentication_type_js__WEBPACK_IMPORTED_MODULE_6__.UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED,\n                        authDetails: authResult.storedToken.authDetails,\n                        account: await this.wallet.getAccount(),\n                        walletAddress: authResult.walletDetails.walletAddress\n                    }\n                };\n            }\n        });\n    }\n}\nfunction assertUnreachable(x, message) {\n    throw new Error(message !== null && message !== void 0 ? message : \"Invalid param: \".concat(x));\n} //# sourceMappingURL=web-connector.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/lib/web-connector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/Storage/LocalStorage.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/Storage/LocalStorage.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalStorage: function() { return /* binding */ LocalStorage; }\n/* harmony export */ });\n/* harmony import */ var _core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/constants/settings.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/constants/settings.js\");\n\nconst data = new Map();\n/**\n * @internal\n */ class LocalStorage {\n    async getItem(key) {\n        if (this.isSupported) {\n            return window.localStorage.getItem(key);\n        }\n        var _data_get;\n        return (_data_get = data.get(key)) !== null && _data_get !== void 0 ? _data_get : null;\n    }\n    async setItem(key, value) {\n        if (this.isSupported) {\n            return window.localStorage.setItem(key, value);\n        }\n        data.set(key, value);\n    }\n    async removeItem(key) {\n        const item = await this.getItem(key);\n        if (this.isSupported && item) {\n            window.localStorage.removeItem(key);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @internal\n     */ async getWalletConnectSessions() {\n        return this.getItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.WALLET_CONNECT_SESSIONS_LOCAL_STORAGE_NAME)(this.clientId));\n    }\n    /**\n     * @internal\n     */ async saveWalletConnectSessions(stringifiedSessions) {\n        await this.setItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.WALLET_CONNECT_SESSIONS_LOCAL_STORAGE_NAME)(this.clientId), stringifiedSessions);\n    }\n    /**\n     * @internal\n     */ async savePasskeyCredentialId(id) {\n        await this.setItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.PASSKEY_CREDENTIAL_ID_LOCAL_STORAGE_NAME)(this.clientId), id);\n    }\n    /**\n     * @internal\n     */ async getPasskeyCredentialId() {\n        return this.getItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.PASSKEY_CREDENTIAL_ID_LOCAL_STORAGE_NAME)(this.clientId));\n    }\n    /**\n     * @internal\n     */ async saveAuthCookie(cookie) {\n        await this.setItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.AUTH_TOKEN_LOCAL_STORAGE_NAME)(this.clientId), cookie);\n    }\n    /**\n     * @internal\n     */ async getAuthCookie() {\n        return this.getItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.AUTH_TOKEN_LOCAL_STORAGE_NAME)(this.clientId));\n    }\n    /**\n     * @internal\n     */ async removeAuthCookie() {\n        return this.removeItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.AUTH_TOKEN_LOCAL_STORAGE_NAME)(this.clientId));\n    }\n    /**\n     * @internal\n     */ async saveDeviceShare(share, userId) {\n        await this.saveWalletUserId(userId);\n        await this.setItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.DEVICE_SHARE_LOCAL_STORAGE_NAME)(this.clientId, userId), share);\n    }\n    /**\n     * @internal\n     */ async getDeviceShare() {\n        const userId = await this.getWalletUserId();\n        if (userId) {\n            return this.getItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.DEVICE_SHARE_LOCAL_STORAGE_NAME)(this.clientId, userId));\n        }\n        return null;\n    }\n    /**\n     * @internal\n     */ async removeDeviceShare() {\n        const userId = await this.getWalletUserId();\n        if (userId) {\n            return this.removeItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.DEVICE_SHARE_LOCAL_STORAGE_NAME)(this.clientId, userId));\n        }\n        return false;\n    }\n    /**\n     * @internal\n     */ async getWalletUserId() {\n        return this.getItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.WALLET_USER_ID_LOCAL_STORAGE_NAME)(this.clientId));\n    }\n    /**\n     * @internal\n     */ async saveWalletUserId(userId) {\n        await this.setItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.WALLET_USER_ID_LOCAL_STORAGE_NAME)(this.clientId), userId);\n    }\n    /**\n     * @internal\n     */ async removeWalletUserId() {\n        return this.removeItem((0,_core_constants_settings_js__WEBPACK_IMPORTED_MODULE_0__.WALLET_USER_ID_LOCAL_STORAGE_NAME)(this.clientId));\n    }\n    /**\n     * @internal\n     */ constructor({ clientId }){\n        Object.defineProperty(this, \"isSupported\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.isSupported =  true && !!window.localStorage;\n        this.clientId = clientId;\n    }\n} //# sourceMappingURL=LocalStorage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/Storage/LocalStorage.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IframeCommunicator: function() { return /* binding */ IframeCommunicator; }\n/* harmony export */ });\nfunction sleep(seconds) {\n    return new Promise((resolve)=>{\n        setTimeout(resolve, seconds * 1000);\n    });\n}\nconst iframeBaseStyle = {\n    height: \"100%\",\n    width: \"100%\",\n    border: \"none\",\n    backgroundColor: \"transparent\",\n    colorScheme: \"light\",\n    position: \"fixed\",\n    top: \"0px\",\n    right: \"0px\",\n    zIndex: \"2147483646\",\n    display: \"none\"\n};\n// Global var to help track iframe state\nconst isIframeLoaded = new Map();\n/**\n * @internal\n */ // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\nclass IframeCommunicator {\n    // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n    async onIframeLoadedInitVariables() {\n        return {};\n    }\n    /**\n     * @internal\n     */ onIframeLoadHandler(iframe, onIframeInitialize) {\n        return async ()=>{\n            var _iframe_contentWindow;\n            const channel = new MessageChannel();\n            const promise = new Promise((res, rej)=>{\n                // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n                channel.port1.onmessage = (event)=>{\n                    const { data } = event;\n                    channel.port1.close();\n                    if (!data.success) {\n                        rej(new Error(data.error));\n                    }\n                    isIframeLoaded.set(iframe.src, true);\n                    if (onIframeInitialize) {\n                        onIframeInitialize();\n                    }\n                    res(true);\n                };\n            });\n            const INIT_IFRAME_EVENT = \"initIframe\";\n            iframe === null || iframe === void 0 ? void 0 : (_iframe_contentWindow = iframe.contentWindow) === null || _iframe_contentWindow === void 0 ? void 0 : _iframe_contentWindow.postMessage(// ? We initialise the iframe with a bunch\n            // of useful information so that we don't have to pass it\n            // through in each of the future call. This would be where we do it.\n            {\n                eventType: INIT_IFRAME_EVENT,\n                data: await this.onIframeLoadedInitVariables()\n            }, this.iframeBaseUrl, [\n                channel.port2\n            ]);\n            await promise;\n        };\n    }\n    /**\n     * @internal\n     */ async call(param) {\n        let { procedureName, params, showIframe = false } = param;\n        var _this_iframe_contentWindow;\n        while(!isIframeLoaded.get(this.iframe.src)){\n            await sleep(this.POLLING_INTERVAL_SECONDS);\n        }\n        if (showIframe) {\n            this.iframe.style.display = \"block\";\n            // magic number to let the display render before performing the animation of the modal in\n            await sleep(0.005);\n        }\n        const channel = new MessageChannel();\n        const promise = new Promise((res, rej)=>{\n            // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n            channel.port1.onmessage = async (event)=>{\n                const { data } = event;\n                channel.port1.close();\n                if (showIframe) {\n                    // magic number to let modal fade out before hiding it\n                    await sleep(0.1);\n                    this.iframe.style.display = \"none\";\n                }\n                if (!data.success) {\n                    rej(new Error(data.error));\n                } else {\n                    res(data.data);\n                }\n            };\n        });\n        (_this_iframe_contentWindow = this.iframe.contentWindow) === null || _this_iframe_contentWindow === void 0 ? void 0 : _this_iframe_contentWindow.postMessage({\n            eventType: procedureName,\n            data: params\n        }, this.iframeBaseUrl, [\n            channel.port2\n        ]);\n        return promise;\n    }\n    /**\n     * This has to be called by any iframe that will be removed from the DOM.\n     * Use to make sure that we reset the global loaded state of the particular iframe.src\n     * @internal\n     */ destroy() {\n        isIframeLoaded.delete(this.iframe.src);\n    }\n    /**\n     * @internal\n     */ constructor({ link, baseUrl, iframeId, container = document.body, onIframeInitialize }){\n        Object.defineProperty(this, \"iframe\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"POLLING_INTERVAL_SECONDS\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1.4\n        });\n        Object.defineProperty(this, \"iframeBaseUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.iframeBaseUrl = baseUrl;\n        // Creating the IFrame element for communication\n        let iframe = document.getElementById(iframeId);\n        const hrefLink = new URL(link);\n        // TODO (ew) - bring back version tracking\n        // const sdkVersion = process.env.THIRDWEB_EWS_SDK_VERSION;\n        // if (!sdkVersion) {\n        //   throw new Error(\"Missing THIRDWEB_EWS_SDK_VERSION env var\");\n        // }\n        // hrefLink.searchParams.set(\"sdkVersion\", sdkVersion);\n        if (!iframe || iframe.src !== hrefLink.href) {\n            // ! Do not update the hrefLink here or it'll cause multiple re-renders\n            if (!iframe) {\n                iframe = document.createElement(\"iframe\");\n                const mergedIframeStyles = {\n                    ...iframeBaseStyle\n                };\n                Object.assign(iframe.style, mergedIframeStyles);\n                iframe.setAttribute(\"id\", iframeId);\n                iframe.setAttribute(\"fetchpriority\", \"high\");\n                container.appendChild(iframe);\n            }\n            iframe.src = hrefLink.href;\n            // iframe.setAttribute(\"data-version\", sdkVersion);\n            // biome-ignore lint/suspicious/noExplicitAny: TODO: fix later\n            const onIframeLoaded = (event)=>{\n                if (event.data.eventType === \"ewsIframeLoaded\") {\n                    window.removeEventListener(\"message\", onIframeLoaded);\n                    if (!iframe) {\n                        console.warn(\"thirdweb Iframe not found\");\n                        return;\n                    }\n                    this.onIframeLoadHandler(iframe, onIframeInitialize)();\n                }\n            };\n            window.addEventListener(\"message\", onIframeLoaded);\n        }\n        this.iframe = iframe;\n    }\n} //# sourceMappingURL=IframeCommunicator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IN_APP_WALLET_IFRAME_ID: function() { return /* binding */ IN_APP_WALLET_IFRAME_ID; },\n/* harmony export */   InAppWalletIframeCommunicator: function() { return /* binding */ InAppWalletIframeCommunicator; },\n/* harmony export */   createInAppWalletIframeLink: function() { return /* binding */ createInAppWalletIframeLink; }\n/* harmony export */ });\n/* harmony import */ var _core_constants_settings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/constants/settings.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/core/constants/settings.js\");\n/* harmony import */ var _Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Storage/LocalStorage.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/Storage/LocalStorage.js\");\n/* harmony import */ var _IframeCommunicator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./IframeCommunicator.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/IframeCommunicator.js\");\n\n\n\n/**\n * @internal\n */ class InAppWalletIframeCommunicator extends _IframeCommunicator_js__WEBPACK_IMPORTED_MODULE_0__.IframeCommunicator {\n    /**\n     * @internal\n     */ async onIframeLoadedInitVariables() {\n        const localStorage = new _Storage_LocalStorage_js__WEBPACK_IMPORTED_MODULE_1__.LocalStorage({\n            clientId: this.clientId\n        });\n        return {\n            authCookie: await localStorage.getAuthCookie(),\n            deviceShareStored: await localStorage.getDeviceShare(),\n            walletUserId: await localStorage.getWalletUserId(),\n            clientId: this.clientId\n        };\n    }\n    /**\n     * @internal\n     */ constructor({ clientId, baseUrl }){\n        super({\n            iframeId: IN_APP_WALLET_IFRAME_ID,\n            link: createInAppWalletIframeLink({\n                clientId,\n                path: _core_constants_settings_js__WEBPACK_IMPORTED_MODULE_2__.IN_APP_WALLET_PATH,\n                baseUrl\n            }).href,\n            baseUrl,\n            container: document.body\n        });\n        Object.defineProperty(this, \"clientId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.clientId = clientId;\n    }\n}\n// This is the URL and ID tag of the iFrame that we communicate with\n/**\n * @internal\n */ function createInAppWalletIframeLink(param) {\n    let { clientId, baseUrl, path, queryParams } = param;\n    const inAppWalletUrl = new URL(\"\".concat(path), baseUrl);\n    if (queryParams) {\n        for (const queryKey of Object.keys(queryParams)){\n            var _queryParams_queryKey;\n            inAppWalletUrl.searchParams.set(queryKey, ((_queryParams_queryKey = queryParams[queryKey]) === null || _queryParams_queryKey === void 0 ? void 0 : _queryParams_queryKey.toString()) || \"\");\n        }\n    }\n    inAppWalletUrl.searchParams.set(\"clientId\", clientId);\n    return inAppWalletUrl;\n}\nconst IN_APP_WALLET_IFRAME_ID = \"thirdweb-in-app-wallet-iframe\"; //# sourceMappingURL=InAppWalletIframeCommunicator.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL2luLWFwcC93ZWIvdXRpbHMvaUZyYW1lQ29tbXVuaWNhdGlvbi9JbkFwcFdhbGxldElmcmFtZUNvbW11bmljYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBeUU7QUFDZjtBQUNHO0FBQzdEOztDQUVDLEdBQ00sTUFBTUcsc0NBQXNDRCxzRUFBa0JBO0lBdUJqRTs7S0FFQyxHQUNELE1BQU1FLDhCQUE4QjtRQUNoQyxNQUFNQyxlQUFlLElBQUlKLGtFQUFZQSxDQUFDO1lBQ2xDSyxVQUFVLElBQUksQ0FBQ0EsUUFBUTtRQUMzQjtRQUNBLE9BQU87WUFDSEMsWUFBWSxNQUFNRixhQUFhRyxhQUFhO1lBQzVDQyxtQkFBbUIsTUFBTUosYUFBYUssY0FBYztZQUNwREMsY0FBYyxNQUFNTixhQUFhTyxlQUFlO1lBQ2hETixVQUFVLElBQUksQ0FBQ0EsUUFBUTtRQUMzQjtJQUNKO0lBbkNBOztLQUVDLEdBQ0RPLFlBQVksRUFBRVAsUUFBUSxFQUFFUSxPQUFPLEVBQUUsQ0FBRTtRQUMvQixLQUFLLENBQUM7WUFDRkMsVUFBVUM7WUFDVkMsTUFBTUMsNEJBQTRCO2dCQUM5Qlo7Z0JBQ0FhLE1BQU1uQiwyRUFBa0JBO2dCQUN4QmM7WUFDSixHQUFHTSxJQUFJO1lBQ1BOO1lBQ0FPLFdBQVdDLFNBQVNDLElBQUk7UUFDNUI7UUFDQUMsT0FBT0MsY0FBYyxDQUFDLElBQUksRUFBRSxZQUFZO1lBQ3BDQyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtZQUNWQyxPQUFPLEtBQUs7UUFDaEI7UUFDQSxJQUFJLENBQUN2QixRQUFRLEdBQUdBO0lBQ3BCO0FBZUo7QUFDQSxvRUFBb0U7QUFDcEU7O0NBRUMsR0FDTSxTQUFTWSw0QkFBNEIsS0FBeUM7UUFBekMsRUFBRVosUUFBUSxFQUFFUSxPQUFPLEVBQUVLLElBQUksRUFBRVcsV0FBVyxFQUFHLEdBQXpDO0lBQ3hDLE1BQU1DLGlCQUFpQixJQUFJQyxJQUFJLEdBQVEsT0FBTGIsT0FBUUw7SUFDMUMsSUFBSWdCLGFBQWE7UUFDYixLQUFLLE1BQU1HLFlBQVlULE9BQU9VLElBQUksQ0FBQ0osYUFBYztnQkFDSEE7WUFBMUNDLGVBQWVJLFlBQVksQ0FBQ0MsR0FBRyxDQUFDSCxVQUFVSCxFQUFBQSx3QkFBQUEsV0FBVyxDQUFDRyxTQUFTLGNBQXJCSCw0Q0FBQUEsc0JBQXVCTyxRQUFRLE9BQU07UUFDbkY7SUFDSjtJQUNBTixlQUFlSSxZQUFZLENBQUNDLEdBQUcsQ0FBQyxZQUFZOUI7SUFDNUMsT0FBT3lCO0FBQ1g7QUFDTyxNQUFNZiwwQkFBMEIsZ0NBQWdDLENBQ3ZFLHlEQUF5RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy9pbi1hcHAvd2ViL3V0aWxzL2lGcmFtZUNvbW11bmljYXRpb24vSW5BcHBXYWxsZXRJZnJhbWVDb21tdW5pY2F0b3IuanM/YjJlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTl9BUFBfV0FMTEVUX1BBVEggfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9jb25zdGFudHMvc2V0dGluZ3MuanNcIjtcbmltcG9ydCB7IExvY2FsU3RvcmFnZSB9IGZyb20gXCIuLi9TdG9yYWdlL0xvY2FsU3RvcmFnZS5qc1wiO1xuaW1wb3J0IHsgSWZyYW1lQ29tbXVuaWNhdG9yIH0gZnJvbSBcIi4vSWZyYW1lQ29tbXVuaWNhdG9yLmpzXCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY2xhc3MgSW5BcHBXYWxsZXRJZnJhbWVDb21tdW5pY2F0b3IgZXh0ZW5kcyBJZnJhbWVDb21tdW5pY2F0b3Ige1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHsgY2xpZW50SWQsIGJhc2VVcmwgfSkge1xuICAgICAgICBzdXBlcih7XG4gICAgICAgICAgICBpZnJhbWVJZDogSU5fQVBQX1dBTExFVF9JRlJBTUVfSUQsXG4gICAgICAgICAgICBsaW5rOiBjcmVhdGVJbkFwcFdhbGxldElmcmFtZUxpbmsoe1xuICAgICAgICAgICAgICAgIGNsaWVudElkLFxuICAgICAgICAgICAgICAgIHBhdGg6IElOX0FQUF9XQUxMRVRfUEFUSCxcbiAgICAgICAgICAgICAgICBiYXNlVXJsLFxuICAgICAgICAgICAgfSkuaHJlZixcbiAgICAgICAgICAgIGJhc2VVcmwsXG4gICAgICAgICAgICBjb250YWluZXI6IGRvY3VtZW50LmJvZHksXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJjbGllbnRJZFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNsaWVudElkID0gY2xpZW50SWQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIGFzeW5jIG9uSWZyYW1lTG9hZGVkSW5pdFZhcmlhYmxlcygpIHtcbiAgICAgICAgY29uc3QgbG9jYWxTdG9yYWdlID0gbmV3IExvY2FsU3RvcmFnZSh7XG4gICAgICAgICAgICBjbGllbnRJZDogdGhpcy5jbGllbnRJZCxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhdXRoQ29va2llOiBhd2FpdCBsb2NhbFN0b3JhZ2UuZ2V0QXV0aENvb2tpZSgpLFxuICAgICAgICAgICAgZGV2aWNlU2hhcmVTdG9yZWQ6IGF3YWl0IGxvY2FsU3RvcmFnZS5nZXREZXZpY2VTaGFyZSgpLFxuICAgICAgICAgICAgd2FsbGV0VXNlcklkOiBhd2FpdCBsb2NhbFN0b3JhZ2UuZ2V0V2FsbGV0VXNlcklkKCksXG4gICAgICAgICAgICBjbGllbnRJZDogdGhpcy5jbGllbnRJZCxcbiAgICAgICAgfTtcbiAgICB9XG59XG4vLyBUaGlzIGlzIHRoZSBVUkwgYW5kIElEIHRhZyBvZiB0aGUgaUZyYW1lIHRoYXQgd2UgY29tbXVuaWNhdGUgd2l0aFxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUluQXBwV2FsbGV0SWZyYW1lTGluayh7IGNsaWVudElkLCBiYXNlVXJsLCBwYXRoLCBxdWVyeVBhcmFtcywgfSkge1xuICAgIGNvbnN0IGluQXBwV2FsbGV0VXJsID0gbmV3IFVSTChgJHtwYXRofWAsIGJhc2VVcmwpO1xuICAgIGlmIChxdWVyeVBhcmFtcykge1xuICAgICAgICBmb3IgKGNvbnN0IHF1ZXJ5S2V5IG9mIE9iamVjdC5rZXlzKHF1ZXJ5UGFyYW1zKSkge1xuICAgICAgICAgICAgaW5BcHBXYWxsZXRVcmwuc2VhcmNoUGFyYW1zLnNldChxdWVyeUtleSwgcXVlcnlQYXJhbXNbcXVlcnlLZXldPy50b1N0cmluZygpIHx8IFwiXCIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGluQXBwV2FsbGV0VXJsLnNlYXJjaFBhcmFtcy5zZXQoXCJjbGllbnRJZFwiLCBjbGllbnRJZCk7XG4gICAgcmV0dXJuIGluQXBwV2FsbGV0VXJsO1xufVxuZXhwb3J0IGNvbnN0IElOX0FQUF9XQUxMRVRfSUZSQU1FX0lEID0gXCJ0aGlyZHdlYi1pbi1hcHAtd2FsbGV0LWlmcmFtZVwiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW5BcHBXYWxsZXRJZnJhbWVDb21tdW5pY2F0b3IuanMubWFwIl0sIm5hbWVzIjpbIklOX0FQUF9XQUxMRVRfUEFUSCIsIkxvY2FsU3RvcmFnZSIsIklmcmFtZUNvbW11bmljYXRvciIsIkluQXBwV2FsbGV0SWZyYW1lQ29tbXVuaWNhdG9yIiwib25JZnJhbWVMb2FkZWRJbml0VmFyaWFibGVzIiwibG9jYWxTdG9yYWdlIiwiY2xpZW50SWQiLCJhdXRoQ29va2llIiwiZ2V0QXV0aENvb2tpZSIsImRldmljZVNoYXJlU3RvcmVkIiwiZ2V0RGV2aWNlU2hhcmUiLCJ3YWxsZXRVc2VySWQiLCJnZXRXYWxsZXRVc2VySWQiLCJjb25zdHJ1Y3RvciIsImJhc2VVcmwiLCJpZnJhbWVJZCIsIklOX0FQUF9XQUxMRVRfSUZSQU1FX0lEIiwibGluayIsImNyZWF0ZUluQXBwV2FsbGV0SWZyYW1lTGluayIsInBhdGgiLCJocmVmIiwiY29udGFpbmVyIiwiZG9jdW1lbnQiLCJib2R5IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJ2YWx1ZSIsInF1ZXJ5UGFyYW1zIiwiaW5BcHBXYWxsZXRVcmwiLCJVUkwiLCJxdWVyeUtleSIsImtleXMiLCJzZWFyY2hQYXJhbXMiLCJzZXQiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/in-app/web/utils/iFrameCommunication/InAppWalletIframeCommunicator.js\n"));

/***/ })

}]);