"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseEip155ChainId = exports.validateAccountAddress = void 0;
/**
 * @internal
 */
function validateAccountAddress(account, address) {
    if (account.address !== address) {
        throw new Error(`[WalletConnect] Failed to validate account address (${account.address}), differs from ${address}`);
    }
}
exports.validateAccountAddress = validateAccountAddress;
/**
 * @internal
 */
function parseEip155ChainId(chainId) {
    const chainIdParts = chainId.split(":");
    const chainIdAsNumber = Number.parseInt(chainIdParts[1] ?? "0");
    if (chainIdParts.length !== 2 ||
        chainIdParts[0] !== "eip155" ||
        chainIdAsNumber === 0 ||
        !chainIdAsNumber) {
        throw new Error(`[WalletConnect] Invalid chainId ${chainId}, should have the format 'eip155:1'`);
    }
    return chainIdAsNumber;
}
exports.parseEip155ChainId = parseEip155ChainId;
//# sourceMappingURL=utils.js.map