"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_extensions_erc1155_read_getNFT_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/totalSupply.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/totalSupply.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FN_SELECTOR: function() { return /* binding */ FN_SELECTOR; },\n/* harmony export */   decodeTotalSupplyResult: function() { return /* binding */ decodeTotalSupplyResult; },\n/* harmony export */   encodeTotalSupply: function() { return /* binding */ encodeTotalSupply; },\n/* harmony export */   encodeTotalSupplyParams: function() { return /* binding */ encodeTotalSupplyParams; },\n/* harmony export */   isTotalSupplySupported: function() { return /* binding */ isTotalSupplySupported; },\n/* harmony export */   totalSupply: function() { return /* binding */ totalSupply; }\n/* harmony export */ });\n/* harmony import */ var _transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../transaction/read-contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/read-contract.js\");\n/* harmony import */ var _utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../utils/abi/encodeAbiParameters.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js\");\n/* harmony import */ var _utils_bytecode_detectExtension_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../utils/bytecode/detectExtension.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js\");\n\n\n\n\nconst FN_SELECTOR = \"0xbd85b039\";\nconst FN_INPUTS = [\n    {\n        type: \"uint256\",\n        name: \"id\"\n    }\n];\nconst FN_OUTPUTS = [\n    {\n        type: \"uint256\"\n    }\n];\n/**\n * Checks if the `totalSupply` method is supported by the given contract.\n * @param contract The ThirdwebContract.\n * @returns A promise that resolves to a boolean indicating if the `totalSupply` method is supported.\n * @extension ERC1155\n * @example\n * ```ts\n * import { isTotalSupplySupported } from \"thirdweb/extensions/erc1155\";\n *\n * const supported = await isTotalSupplySupported(contract);\n * ```\n */ async function isTotalSupplySupported(contract) {\n    return (0,_utils_bytecode_detectExtension_js__WEBPACK_IMPORTED_MODULE_0__.detectMethod)({\n        contract,\n        method: [\n            FN_SELECTOR,\n            FN_INPUTS,\n            FN_OUTPUTS\n        ]\n    });\n}\n/**\n * Encodes the parameters for the \"totalSupply\" function.\n * @param options - The options for the totalSupply function.\n * @returns The encoded ABI parameters.\n * @extension ERC1155\n * @example\n * ```ts\n * import { encodeTotalSupplyParams } \"thirdweb/extensions/erc1155\";\n * const result = encodeTotalSupplyParams({\n *  id: ...,\n * });\n * ```\n */ function encodeTotalSupplyParams(options) {\n    return (0,_utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)(FN_INPUTS, [\n        options.id\n    ]);\n}\n/**\n * Encodes the \"totalSupply\" function into a Hex string with its parameters.\n * @param options - The options for the totalSupply function.\n * @returns The encoded hexadecimal string.\n * @extension ERC1155\n * @example\n * ```ts\n * import { encodeTotalSupply } \"thirdweb/extensions/erc1155\";\n * const result = encodeTotalSupply({\n *  id: ...,\n * });\n * ```\n */ function encodeTotalSupply(options) {\n    // we do a \"manual\" concat here to avoid the overhead of the \"concatHex\" function\n    // we can do this because we know the specific formats of the values\n    return FN_SELECTOR + encodeTotalSupplyParams(options).slice(2);\n}\n/**\n * Decodes the result of the totalSupply function call.\n * @param result - The hexadecimal result to decode.\n * @returns The decoded result as per the FN_OUTPUTS definition.\n * @extension ERC1155\n * @example\n * ```ts\n * import { decodeTotalSupplyResult } from \"thirdweb/extensions/erc1155\";\n * const result = decodeTotalSupplyResult(\"...\");\n * ```\n */ function decodeTotalSupplyResult(result) {\n    return (0,viem__WEBPACK_IMPORTED_MODULE_2__.decodeAbiParameters)(FN_OUTPUTS, result)[0];\n}\n/**\n * Calls the \"totalSupply\" function on the contract.\n * @param options - The options for the totalSupply function.\n * @returns The parsed result of the function call.\n * @extension ERC1155\n * @example\n * ```ts\n * import { totalSupply } from \"thirdweb/extensions/erc1155\";\n *\n * const result = await totalSupply({\n *  contract,\n *  id: ...,\n * });\n *\n * ```\n */ async function totalSupply(options) {\n    return (0,_transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_3__.readContract)({\n        contract: options.contract,\n        method: [\n            FN_SELECTOR,\n            FN_INPUTS,\n            FN_OUTPUTS\n        ],\n        params: [\n            options.id\n        ]\n    });\n} //# sourceMappingURL=totalSupply.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9leHRlbnNpb25zL2VyYzExNTUvX19nZW5lcmF0ZWRfXy9JRVJDMTE1NS9yZWFkL3RvdGFsU3VwcGx5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMkU7QUFDVztBQUMzQztBQUNxQztBQUN6RSxNQUFNSSxjQUFjLGFBQWE7QUFDeEMsTUFBTUMsWUFBWTtJQUNkO1FBQ0lDLE1BQU07UUFDTkMsTUFBTTtJQUNWO0NBQ0g7QUFDRCxNQUFNQyxhQUFhO0lBQ2Y7UUFDSUYsTUFBTTtJQUNWO0NBQ0g7QUFDRDs7Ozs7Ozs7Ozs7Q0FXQyxHQUNNLGVBQWVHLHVCQUF1QkMsUUFBUTtJQUNqRCxPQUFPUCxnRkFBWUEsQ0FBQztRQUNoQk87UUFDQUMsUUFBUTtZQUFDUDtZQUFhQztZQUFXRztTQUFXO0lBQ2hEO0FBQ0o7QUFDQTs7Ozs7Ozs7Ozs7O0NBWUMsR0FDTSxTQUFTSSx3QkFBd0JDLE9BQU87SUFDM0MsT0FBT1osc0ZBQW1CQSxDQUFDSSxXQUFXO1FBQUNRLFFBQVFDLEVBQUU7S0FBQztBQUN0RDtBQUNBOzs7Ozs7Ozs7Ozs7Q0FZQyxHQUNNLFNBQVNDLGtCQUFrQkYsT0FBTztJQUNyQyxpRkFBaUY7SUFDakYsb0VBQW9FO0lBQ3BFLE9BQVFULGNBQ0pRLHdCQUF3QkMsU0FBU0csS0FBSyxDQUFDO0FBQy9DO0FBQ0E7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLFNBQVNDLHdCQUF3QkMsTUFBTTtJQUMxQyxPQUFPaEIseURBQW1CQSxDQUFDTSxZQUFZVSxPQUFPLENBQUMsRUFBRTtBQUNyRDtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Q0FlQyxHQUNNLGVBQWVDLFlBQVlOLE9BQU87SUFDckMsT0FBT2IsMkVBQVlBLENBQUM7UUFDaEJVLFVBQVVHLFFBQVFILFFBQVE7UUFDMUJDLFFBQVE7WUFBQ1A7WUFBYUM7WUFBV0c7U0FBVztRQUM1Q1ksUUFBUTtZQUFDUCxRQUFRQyxFQUFFO1NBQUM7SUFDeEI7QUFDSixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vZXh0ZW5zaW9ucy9lcmMxMTU1L19fZ2VuZXJhdGVkX18vSUVSQzExNTUvcmVhZC90b3RhbFN1cHBseS5qcz9jZGU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlYWRDb250cmFjdCB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi90cmFuc2FjdGlvbi9yZWFkLWNvbnRyYWN0LmpzXCI7XG5pbXBvcnQgeyBlbmNvZGVBYmlQYXJhbWV0ZXJzIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL3V0aWxzL2FiaS9lbmNvZGVBYmlQYXJhbWV0ZXJzLmpzXCI7XG5pbXBvcnQgeyBkZWNvZGVBYmlQYXJhbWV0ZXJzIH0gZnJvbSBcInZpZW1cIjtcbmltcG9ydCB7IGRldGVjdE1ldGhvZCB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi91dGlscy9ieXRlY29kZS9kZXRlY3RFeHRlbnNpb24uanNcIjtcbmV4cG9ydCBjb25zdCBGTl9TRUxFQ1RPUiA9IFwiMHhiZDg1YjAzOVwiO1xuY29uc3QgRk5fSU5QVVRTID0gW1xuICAgIHtcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiaWRcIixcbiAgICB9LFxuXTtcbmNvbnN0IEZOX09VVFBVVFMgPSBbXG4gICAge1xuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAgICB9LFxuXTtcbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBgdG90YWxTdXBwbHlgIG1ldGhvZCBpcyBzdXBwb3J0ZWQgYnkgdGhlIGdpdmVuIGNvbnRyYWN0LlxuICogQHBhcmFtIGNvbnRyYWN0IFRoZSBUaGlyZHdlYkNvbnRyYWN0LlxuICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYSBib29sZWFuIGluZGljYXRpbmcgaWYgdGhlIGB0b3RhbFN1cHBseWAgbWV0aG9kIGlzIHN1cHBvcnRlZC5cbiAqIEBleHRlbnNpb24gRVJDMTE1NVxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBpc1RvdGFsU3VwcGx5U3VwcG9ydGVkIH0gZnJvbSBcInRoaXJkd2ViL2V4dGVuc2lvbnMvZXJjMTE1NVwiO1xuICpcbiAqIGNvbnN0IHN1cHBvcnRlZCA9IGF3YWl0IGlzVG90YWxTdXBwbHlTdXBwb3J0ZWQoY29udHJhY3QpO1xuICogYGBgXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpc1RvdGFsU3VwcGx5U3VwcG9ydGVkKGNvbnRyYWN0KSB7XG4gICAgcmV0dXJuIGRldGVjdE1ldGhvZCh7XG4gICAgICAgIGNvbnRyYWN0LFxuICAgICAgICBtZXRob2Q6IFtGTl9TRUxFQ1RPUiwgRk5fSU5QVVRTLCBGTl9PVVRQVVRTXSxcbiAgICB9KTtcbn1cbi8qKlxuICogRW5jb2RlcyB0aGUgcGFyYW1ldGVycyBmb3IgdGhlIFwidG90YWxTdXBwbHlcIiBmdW5jdGlvbi5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHRoZSB0b3RhbFN1cHBseSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBlbmNvZGVkIEFCSSBwYXJhbWV0ZXJzLlxuICogQGV4dGVuc2lvbiBFUkMxMTU1XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGVuY29kZVRvdGFsU3VwcGx5UGFyYW1zIH0gXCJ0aGlyZHdlYi9leHRlbnNpb25zL2VyYzExNTVcIjtcbiAqIGNvbnN0IHJlc3VsdCA9IGVuY29kZVRvdGFsU3VwcGx5UGFyYW1zKHtcbiAqICBpZDogLi4uLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVRvdGFsU3VwcGx5UGFyYW1zKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gZW5jb2RlQWJpUGFyYW1ldGVycyhGTl9JTlBVVFMsIFtvcHRpb25zLmlkXSk7XG59XG4vKipcbiAqIEVuY29kZXMgdGhlIFwidG90YWxTdXBwbHlcIiBmdW5jdGlvbiBpbnRvIGEgSGV4IHN0cmluZyB3aXRoIGl0cyBwYXJhbWV0ZXJzLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgdGhlIHRvdGFsU3VwcGx5IGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGVuY29kZWQgaGV4YWRlY2ltYWwgc3RyaW5nLlxuICogQGV4dGVuc2lvbiBFUkMxMTU1XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGVuY29kZVRvdGFsU3VwcGx5IH0gXCJ0aGlyZHdlYi9leHRlbnNpb25zL2VyYzExNTVcIjtcbiAqIGNvbnN0IHJlc3VsdCA9IGVuY29kZVRvdGFsU3VwcGx5KHtcbiAqICBpZDogLi4uLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVRvdGFsU3VwcGx5KG9wdGlvbnMpIHtcbiAgICAvLyB3ZSBkbyBhIFwibWFudWFsXCIgY29uY2F0IGhlcmUgdG8gYXZvaWQgdGhlIG92ZXJoZWFkIG9mIHRoZSBcImNvbmNhdEhleFwiIGZ1bmN0aW9uXG4gICAgLy8gd2UgY2FuIGRvIHRoaXMgYmVjYXVzZSB3ZSBrbm93IHRoZSBzcGVjaWZpYyBmb3JtYXRzIG9mIHRoZSB2YWx1ZXNcbiAgICByZXR1cm4gKEZOX1NFTEVDVE9SICtcbiAgICAgICAgZW5jb2RlVG90YWxTdXBwbHlQYXJhbXMob3B0aW9ucykuc2xpY2UoMikpO1xufVxuLyoqXG4gKiBEZWNvZGVzIHRoZSByZXN1bHQgb2YgdGhlIHRvdGFsU3VwcGx5IGZ1bmN0aW9uIGNhbGwuXG4gKiBAcGFyYW0gcmVzdWx0IC0gVGhlIGhleGFkZWNpbWFsIHJlc3VsdCB0byBkZWNvZGUuXG4gKiBAcmV0dXJucyBUaGUgZGVjb2RlZCByZXN1bHQgYXMgcGVyIHRoZSBGTl9PVVRQVVRTIGRlZmluaXRpb24uXG4gKiBAZXh0ZW5zaW9uIEVSQzExNTVcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZGVjb2RlVG90YWxTdXBwbHlSZXN1bHQgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMTU1XCI7XG4gKiBjb25zdCByZXN1bHQgPSBkZWNvZGVUb3RhbFN1cHBseVJlc3VsdChcIi4uLlwiKTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVG90YWxTdXBwbHlSZXN1bHQocmVzdWx0KSB7XG4gICAgcmV0dXJuIGRlY29kZUFiaVBhcmFtZXRlcnMoRk5fT1VUUFVUUywgcmVzdWx0KVswXTtcbn1cbi8qKlxuICogQ2FsbHMgdGhlIFwidG90YWxTdXBwbHlcIiBmdW5jdGlvbiBvbiB0aGUgY29udHJhY3QuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciB0aGUgdG90YWxTdXBwbHkgZnVuY3Rpb24uXG4gKiBAcmV0dXJucyBUaGUgcGFyc2VkIHJlc3VsdCBvZiB0aGUgZnVuY3Rpb24gY2FsbC5cbiAqIEBleHRlbnNpb24gRVJDMTE1NVxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyB0b3RhbFN1cHBseSB9IGZyb20gXCJ0aGlyZHdlYi9leHRlbnNpb25zL2VyYzExNTVcIjtcbiAqXG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCB0b3RhbFN1cHBseSh7XG4gKiAgY29udHJhY3QsXG4gKiAgaWQ6IC4uLixcbiAqIH0pO1xuICpcbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdG90YWxTdXBwbHkob3B0aW9ucykge1xuICAgIHJldHVybiByZWFkQ29udHJhY3Qoe1xuICAgICAgICBjb250cmFjdDogb3B0aW9ucy5jb250cmFjdCxcbiAgICAgICAgbWV0aG9kOiBbRk5fU0VMRUNUT1IsIEZOX0lOUFVUUywgRk5fT1VUUFVUU10sXG4gICAgICAgIHBhcmFtczogW29wdGlvbnMuaWRdLFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG90YWxTdXBwbHkuanMubWFwIl0sIm5hbWVzIjpbInJlYWRDb250cmFjdCIsImVuY29kZUFiaVBhcmFtZXRlcnMiLCJkZWNvZGVBYmlQYXJhbWV0ZXJzIiwiZGV0ZWN0TWV0aG9kIiwiRk5fU0VMRUNUT1IiLCJGTl9JTlBVVFMiLCJ0eXBlIiwibmFtZSIsIkZOX09VVFBVVFMiLCJpc1RvdGFsU3VwcGx5U3VwcG9ydGVkIiwiY29udHJhY3QiLCJtZXRob2QiLCJlbmNvZGVUb3RhbFN1cHBseVBhcmFtcyIsIm9wdGlvbnMiLCJpZCIsImVuY29kZVRvdGFsU3VwcGx5Iiwic2xpY2UiLCJkZWNvZGVUb3RhbFN1cHBseVJlc3VsdCIsInJlc3VsdCIsInRvdGFsU3VwcGx5IiwicGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/totalSupply.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/uri.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/uri.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FN_SELECTOR: function() { return /* binding */ FN_SELECTOR; },\n/* harmony export */   decodeUriResult: function() { return /* binding */ decodeUriResult; },\n/* harmony export */   encodeUri: function() { return /* binding */ encodeUri; },\n/* harmony export */   encodeUriParams: function() { return /* binding */ encodeUriParams; },\n/* harmony export */   isUriSupported: function() { return /* binding */ isUriSupported; },\n/* harmony export */   uri: function() { return /* binding */ uri; }\n/* harmony export */ });\n/* harmony import */ var _transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../transaction/read-contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/read-contract.js\");\n/* harmony import */ var _utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../utils/abi/encodeAbiParameters.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js\");\n/* harmony import */ var _utils_bytecode_detectExtension_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../utils/bytecode/detectExtension.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js\");\n\n\n\n\nconst FN_SELECTOR = \"0x0e89341c\";\nconst FN_INPUTS = [\n    {\n        type: \"uint256\",\n        name: \"tokenId\"\n    }\n];\nconst FN_OUTPUTS = [\n    {\n        type: \"string\"\n    }\n];\n/**\n * Checks if the `uri` method is supported by the given contract.\n * @param contract The ThirdwebContract.\n * @returns A promise that resolves to a boolean indicating if the `uri` method is supported.\n * @extension ERC1155\n * @example\n * ```ts\n * import { isUriSupported } from \"thirdweb/extensions/erc1155\";\n *\n * const supported = await isUriSupported(contract);\n * ```\n */ async function isUriSupported(contract) {\n    return (0,_utils_bytecode_detectExtension_js__WEBPACK_IMPORTED_MODULE_0__.detectMethod)({\n        contract,\n        method: [\n            FN_SELECTOR,\n            FN_INPUTS,\n            FN_OUTPUTS\n        ]\n    });\n}\n/**\n * Encodes the parameters for the \"uri\" function.\n * @param options - The options for the uri function.\n * @returns The encoded ABI parameters.\n * @extension ERC1155\n * @example\n * ```ts\n * import { encodeUriParams } \"thirdweb/extensions/erc1155\";\n * const result = encodeUriParams({\n *  tokenId: ...,\n * });\n * ```\n */ function encodeUriParams(options) {\n    return (0,_utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)(FN_INPUTS, [\n        options.tokenId\n    ]);\n}\n/**\n * Encodes the \"uri\" function into a Hex string with its parameters.\n * @param options - The options for the uri function.\n * @returns The encoded hexadecimal string.\n * @extension ERC1155\n * @example\n * ```ts\n * import { encodeUri } \"thirdweb/extensions/erc1155\";\n * const result = encodeUri({\n *  tokenId: ...,\n * });\n * ```\n */ function encodeUri(options) {\n    // we do a \"manual\" concat here to avoid the overhead of the \"concatHex\" function\n    // we can do this because we know the specific formats of the values\n    return FN_SELECTOR + encodeUriParams(options).slice(2);\n}\n/**\n * Decodes the result of the uri function call.\n * @param result - The hexadecimal result to decode.\n * @returns The decoded result as per the FN_OUTPUTS definition.\n * @extension ERC1155\n * @example\n * ```ts\n * import { decodeUriResult } from \"thirdweb/extensions/erc1155\";\n * const result = decodeUriResult(\"...\");\n * ```\n */ function decodeUriResult(result) {\n    return (0,viem__WEBPACK_IMPORTED_MODULE_2__.decodeAbiParameters)(FN_OUTPUTS, result)[0];\n}\n/**\n * Calls the \"uri\" function on the contract.\n * @param options - The options for the uri function.\n * @returns The parsed result of the function call.\n * @extension ERC1155\n * @example\n * ```ts\n * import { uri } from \"thirdweb/extensions/erc1155\";\n *\n * const result = await uri({\n *  contract,\n *  tokenId: ...,\n * });\n *\n * ```\n */ async function uri(options) {\n    return (0,_transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_3__.readContract)({\n        contract: options.contract,\n        method: [\n            FN_SELECTOR,\n            FN_INPUTS,\n            FN_OUTPUTS\n        ],\n        params: [\n            options.tokenId\n        ]\n    });\n} //# sourceMappingURL=uri.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9leHRlbnNpb25zL2VyYzExNTUvX19nZW5lcmF0ZWRfXy9JRVJDMTE1NS9yZWFkL3VyaS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTJFO0FBQ1c7QUFDM0M7QUFDcUM7QUFDekUsTUFBTUksY0FBYyxhQUFhO0FBQ3hDLE1BQU1DLFlBQVk7SUFDZDtRQUNJQyxNQUFNO1FBQ05DLE1BQU07SUFDVjtDQUNIO0FBQ0QsTUFBTUMsYUFBYTtJQUNmO1FBQ0lGLE1BQU07SUFDVjtDQUNIO0FBQ0Q7Ozs7Ozs7Ozs7O0NBV0MsR0FDTSxlQUFlRyxlQUFlQyxRQUFRO0lBQ3pDLE9BQU9QLGdGQUFZQSxDQUFDO1FBQ2hCTztRQUNBQyxRQUFRO1lBQUNQO1lBQWFDO1lBQVdHO1NBQVc7SUFDaEQ7QUFDSjtBQUNBOzs7Ozs7Ozs7Ozs7Q0FZQyxHQUNNLFNBQVNJLGdCQUFnQkMsT0FBTztJQUNuQyxPQUFPWixzRkFBbUJBLENBQUNJLFdBQVc7UUFBQ1EsUUFBUUMsT0FBTztLQUFDO0FBQzNEO0FBQ0E7Ozs7Ozs7Ozs7OztDQVlDLEdBQ00sU0FBU0MsVUFBVUYsT0FBTztJQUM3QixpRkFBaUY7SUFDakYsb0VBQW9FO0lBQ3BFLE9BQVFULGNBQ0pRLGdCQUFnQkMsU0FBU0csS0FBSyxDQUFDO0FBQ3ZDO0FBQ0E7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLFNBQVNDLGdCQUFnQkMsTUFBTTtJQUNsQyxPQUFPaEIseURBQW1CQSxDQUFDTSxZQUFZVSxPQUFPLENBQUMsRUFBRTtBQUNyRDtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Q0FlQyxHQUNNLGVBQWVDLElBQUlOLE9BQU87SUFDN0IsT0FBT2IsMkVBQVlBLENBQUM7UUFDaEJVLFVBQVVHLFFBQVFILFFBQVE7UUFDMUJDLFFBQVE7WUFBQ1A7WUFBYUM7WUFBV0c7U0FBVztRQUM1Q1ksUUFBUTtZQUFDUCxRQUFRQyxPQUFPO1NBQUM7SUFDN0I7QUFDSixFQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vZXh0ZW5zaW9ucy9lcmMxMTU1L19fZ2VuZXJhdGVkX18vSUVSQzExNTUvcmVhZC91cmkuanM/Y2YzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZWFkQ29udHJhY3QgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vdHJhbnNhY3Rpb24vcmVhZC1jb250cmFjdC5qc1wiO1xuaW1wb3J0IHsgZW5jb2RlQWJpUGFyYW1ldGVycyB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi91dGlscy9hYmkvZW5jb2RlQWJpUGFyYW1ldGVycy5qc1wiO1xuaW1wb3J0IHsgZGVjb2RlQWJpUGFyYW1ldGVycyB9IGZyb20gXCJ2aWVtXCI7XG5pbXBvcnQgeyBkZXRlY3RNZXRob2QgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vdXRpbHMvYnl0ZWNvZGUvZGV0ZWN0RXh0ZW5zaW9uLmpzXCI7XG5leHBvcnQgY29uc3QgRk5fU0VMRUNUT1IgPSBcIjB4MGU4OTM0MWNcIjtcbmNvbnN0IEZOX0lOUFVUUyA9IFtcbiAgICB7XG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcInRva2VuSWRcIixcbiAgICB9LFxuXTtcbmNvbnN0IEZOX09VVFBVVFMgPSBbXG4gICAge1xuICAgICAgICB0eXBlOiBcInN0cmluZ1wiLFxuICAgIH0sXG5dO1xuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGB1cmlgIG1ldGhvZCBpcyBzdXBwb3J0ZWQgYnkgdGhlIGdpdmVuIGNvbnRyYWN0LlxuICogQHBhcmFtIGNvbnRyYWN0IFRoZSBUaGlyZHdlYkNvbnRyYWN0LlxuICogQHJldHVybnMgQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gYSBib29sZWFuIGluZGljYXRpbmcgaWYgdGhlIGB1cmlgIG1ldGhvZCBpcyBzdXBwb3J0ZWQuXG4gKiBAZXh0ZW5zaW9uIEVSQzExNTVcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgaXNVcmlTdXBwb3J0ZWQgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMTU1XCI7XG4gKlxuICogY29uc3Qgc3VwcG9ydGVkID0gYXdhaXQgaXNVcmlTdXBwb3J0ZWQoY29udHJhY3QpO1xuICogYGBgXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpc1VyaVN1cHBvcnRlZChjb250cmFjdCkge1xuICAgIHJldHVybiBkZXRlY3RNZXRob2Qoe1xuICAgICAgICBjb250cmFjdCxcbiAgICAgICAgbWV0aG9kOiBbRk5fU0VMRUNUT1IsIEZOX0lOUFVUUywgRk5fT1VUUFVUU10sXG4gICAgfSk7XG59XG4vKipcbiAqIEVuY29kZXMgdGhlIHBhcmFtZXRlcnMgZm9yIHRoZSBcInVyaVwiIGZ1bmN0aW9uLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgdGhlIHVyaSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBlbmNvZGVkIEFCSSBwYXJhbWV0ZXJzLlxuICogQGV4dGVuc2lvbiBFUkMxMTU1XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGVuY29kZVVyaVBhcmFtcyB9IFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMTU1XCI7XG4gKiBjb25zdCByZXN1bHQgPSBlbmNvZGVVcmlQYXJhbXMoe1xuICogIHRva2VuSWQ6IC4uLixcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVVcmlQYXJhbXMob3B0aW9ucykge1xuICAgIHJldHVybiBlbmNvZGVBYmlQYXJhbWV0ZXJzKEZOX0lOUFVUUywgW29wdGlvbnMudG9rZW5JZF0pO1xufVxuLyoqXG4gKiBFbmNvZGVzIHRoZSBcInVyaVwiIGZ1bmN0aW9uIGludG8gYSBIZXggc3RyaW5nIHdpdGggaXRzIHBhcmFtZXRlcnMuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciB0aGUgdXJpIGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGVuY29kZWQgaGV4YWRlY2ltYWwgc3RyaW5nLlxuICogQGV4dGVuc2lvbiBFUkMxMTU1XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGVuY29kZVVyaSB9IFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMTU1XCI7XG4gKiBjb25zdCByZXN1bHQgPSBlbmNvZGVVcmkoe1xuICogIHRva2VuSWQ6IC4uLixcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVVcmkob3B0aW9ucykge1xuICAgIC8vIHdlIGRvIGEgXCJtYW51YWxcIiBjb25jYXQgaGVyZSB0byBhdm9pZCB0aGUgb3ZlcmhlYWQgb2YgdGhlIFwiY29uY2F0SGV4XCIgZnVuY3Rpb25cbiAgICAvLyB3ZSBjYW4gZG8gdGhpcyBiZWNhdXNlIHdlIGtub3cgdGhlIHNwZWNpZmljIGZvcm1hdHMgb2YgdGhlIHZhbHVlc1xuICAgIHJldHVybiAoRk5fU0VMRUNUT1IgK1xuICAgICAgICBlbmNvZGVVcmlQYXJhbXMob3B0aW9ucykuc2xpY2UoMikpO1xufVxuLyoqXG4gKiBEZWNvZGVzIHRoZSByZXN1bHQgb2YgdGhlIHVyaSBmdW5jdGlvbiBjYWxsLlxuICogQHBhcmFtIHJlc3VsdCAtIFRoZSBoZXhhZGVjaW1hbCByZXN1bHQgdG8gZGVjb2RlLlxuICogQHJldHVybnMgVGhlIGRlY29kZWQgcmVzdWx0IGFzIHBlciB0aGUgRk5fT1VUUFVUUyBkZWZpbml0aW9uLlxuICogQGV4dGVuc2lvbiBFUkMxMTU1XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGRlY29kZVVyaVJlc3VsdCB9IGZyb20gXCJ0aGlyZHdlYi9leHRlbnNpb25zL2VyYzExNTVcIjtcbiAqIGNvbnN0IHJlc3VsdCA9IGRlY29kZVVyaVJlc3VsdChcIi4uLlwiKTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVXJpUmVzdWx0KHJlc3VsdCkge1xuICAgIHJldHVybiBkZWNvZGVBYmlQYXJhbWV0ZXJzKEZOX09VVFBVVFMsIHJlc3VsdClbMF07XG59XG4vKipcbiAqIENhbGxzIHRoZSBcInVyaVwiIGZ1bmN0aW9uIG9uIHRoZSBjb250cmFjdC5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHRoZSB1cmkgZnVuY3Rpb24uXG4gKiBAcmV0dXJucyBUaGUgcGFyc2VkIHJlc3VsdCBvZiB0aGUgZnVuY3Rpb24gY2FsbC5cbiAqIEBleHRlbnNpb24gRVJDMTE1NVxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyB1cmkgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMTU1XCI7XG4gKlxuICogY29uc3QgcmVzdWx0ID0gYXdhaXQgdXJpKHtcbiAqICBjb250cmFjdCxcbiAqICB0b2tlbklkOiAuLi4sXG4gKiB9KTtcbiAqXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVyaShvcHRpb25zKSB7XG4gICAgcmV0dXJuIHJlYWRDb250cmFjdCh7XG4gICAgICAgIGNvbnRyYWN0OiBvcHRpb25zLmNvbnRyYWN0LFxuICAgICAgICBtZXRob2Q6IFtGTl9TRUxFQ1RPUiwgRk5fSU5QVVRTLCBGTl9PVVRQVVRTXSxcbiAgICAgICAgcGFyYW1zOiBbb3B0aW9ucy50b2tlbklkXSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVyaS5qcy5tYXAiXSwibmFtZXMiOlsicmVhZENvbnRyYWN0IiwiZW5jb2RlQWJpUGFyYW1ldGVycyIsImRlY29kZUFiaVBhcmFtZXRlcnMiLCJkZXRlY3RNZXRob2QiLCJGTl9TRUxFQ1RPUiIsIkZOX0lOUFVUUyIsInR5cGUiLCJuYW1lIiwiRk5fT1VUUFVUUyIsImlzVXJpU3VwcG9ydGVkIiwiY29udHJhY3QiLCJtZXRob2QiLCJlbmNvZGVVcmlQYXJhbXMiLCJvcHRpb25zIiwidG9rZW5JZCIsImVuY29kZVVyaSIsInNsaWNlIiwiZGVjb2RlVXJpUmVzdWx0IiwicmVzdWx0IiwidXJpIiwicGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/uri.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/read/getNFT.js":
/*!**************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/extensions/erc1155/read/getNFT.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNFT: function() { return /* binding */ getNFT; }\n/* harmony export */ });\n/* harmony import */ var _utils_nft_fetchTokenMetadata_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utils/nft/fetchTokenMetadata.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/nft/fetchTokenMetadata.js\");\n/* harmony import */ var _utils_nft_parseNft_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/nft/parseNft.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/nft/parseNft.js\");\n/* harmony import */ var _generated_IERC1155_read_totalSupply_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../__generated__/IERC1155/read/totalSupply.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/totalSupply.js\");\n/* harmony import */ var _generated_IERC1155_read_uri_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../__generated__/IERC1155/read/uri.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/uri.js\");\n\n\n\n\n/**\n * Retrieves information about a specific ERC1155 non-fungible token (NFT).\n * @param options - The options for retrieving the NFT.\n * @returns A promise that resolves to the NFT object.\n * @extension ERC1155\n * @example\n * ```ts\n * import { getNFT } from \"thirdweb/extensions/erc1155\";\n * const nft = await getNFT({\n *  contract,\n *  tokenId: 1n,\n * });\n * ```\n */ async function getNFT(options) {\n    const [tokenUri, supply] = await Promise.all([\n        (0,_generated_IERC1155_read_uri_js__WEBPACK_IMPORTED_MODULE_0__.uri)({\n            contract: options.contract,\n            tokenId: options.tokenId\n        }),\n        (0,_generated_IERC1155_read_totalSupply_js__WEBPACK_IMPORTED_MODULE_1__.totalSupply)({\n            contract: options.contract,\n            id: options.tokenId\n        }).catch(()=>0n)\n    ]);\n    return (0,_utils_nft_parseNft_js__WEBPACK_IMPORTED_MODULE_2__.parseNFT)(await (0,_utils_nft_fetchTokenMetadata_js__WEBPACK_IMPORTED_MODULE_3__.fetchTokenMetadata)({\n        client: options.contract.client,\n        tokenId: options.tokenId,\n        tokenUri\n    }).catch(()=>({\n            id: options.tokenId,\n            type: \"ERC1155\",\n            uri: tokenUri\n        })), {\n        tokenId: options.tokenId,\n        tokenUri,\n        type: \"ERC1155\",\n        owner: null,\n        supply\n    });\n} //# sourceMappingURL=getNFT.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9leHRlbnNpb25zL2VyYzExNTUvcmVhZC9nZXRORlQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBOEU7QUFDcEI7QUFDa0I7QUFDaEI7QUFDNUQ7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNNLGVBQWVJLE9BQU9DLE9BQU87SUFDaEMsTUFBTSxDQUFDQyxVQUFVQyxPQUFPLEdBQUcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDO1FBQ3pDTixvRUFBR0EsQ0FBQztZQUNBTyxVQUFVTCxRQUFRSyxRQUFRO1lBQzFCQyxTQUFTTixRQUFRTSxPQUFPO1FBQzVCO1FBQ0FULG9GQUFXQSxDQUFDO1lBQ1JRLFVBQVVMLFFBQVFLLFFBQVE7WUFDMUJFLElBQUlQLFFBQVFNLE9BQU87UUFFdkIsR0FBR0UsS0FBSyxDQUFDLElBQU0sRUFBRTtLQUNwQjtJQUNELE9BQU9aLGdFQUFRQSxDQUFDLE1BQU1ELG9GQUFrQkEsQ0FBQztRQUNyQ2MsUUFBUVQsUUFBUUssUUFBUSxDQUFDSSxNQUFNO1FBQy9CSCxTQUFTTixRQUFRTSxPQUFPO1FBQ3hCTDtJQUNKLEdBQUdPLEtBQUssQ0FBQyxJQUFPO1lBQ1pELElBQUlQLFFBQVFNLE9BQU87WUFDbkJJLE1BQU07WUFDTlosS0FBS0c7UUFDVCxLQUFLO1FBQ0RLLFNBQVNOLFFBQVFNLE9BQU87UUFDeEJMO1FBQ0FTLE1BQU07UUFDTkMsT0FBTztRQUNQVDtJQUNKO0FBQ0osRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL2V4dGVuc2lvbnMvZXJjMTE1NS9yZWFkL2dldE5GVC5qcz8wYzhlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZldGNoVG9rZW5NZXRhZGF0YSB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9uZnQvZmV0Y2hUb2tlbk1ldGFkYXRhLmpzXCI7XG5pbXBvcnQgeyBwYXJzZU5GVCB9IGZyb20gXCIuLi8uLi8uLi91dGlscy9uZnQvcGFyc2VOZnQuanNcIjtcbmltcG9ydCB7IHRvdGFsU3VwcGx5IH0gZnJvbSBcIi4uL19fZ2VuZXJhdGVkX18vSUVSQzExNTUvcmVhZC90b3RhbFN1cHBseS5qc1wiO1xuaW1wb3J0IHsgdXJpIH0gZnJvbSBcIi4uL19fZ2VuZXJhdGVkX18vSUVSQzExNTUvcmVhZC91cmkuanNcIjtcbi8qKlxuICogUmV0cmlldmVzIGluZm9ybWF0aW9uIGFib3V0IGEgc3BlY2lmaWMgRVJDMTE1NSBub24tZnVuZ2libGUgdG9rZW4gKE5GVCkuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciByZXRyaWV2aW5nIHRoZSBORlQuXG4gKiBAcmV0dXJucyBBIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgTkZUIG9iamVjdC5cbiAqIEBleHRlbnNpb24gRVJDMTE1NVxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBnZXRORlQgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMTU1XCI7XG4gKiBjb25zdCBuZnQgPSBhd2FpdCBnZXRORlQoe1xuICogIGNvbnRyYWN0LFxuICogIHRva2VuSWQ6IDFuLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldE5GVChvcHRpb25zKSB7XG4gICAgY29uc3QgW3Rva2VuVXJpLCBzdXBwbHldID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICB1cmkoe1xuICAgICAgICAgICAgY29udHJhY3Q6IG9wdGlvbnMuY29udHJhY3QsXG4gICAgICAgICAgICB0b2tlbklkOiBvcHRpb25zLnRva2VuSWQsXG4gICAgICAgIH0pLFxuICAgICAgICB0b3RhbFN1cHBseSh7XG4gICAgICAgICAgICBjb250cmFjdDogb3B0aW9ucy5jb250cmFjdCxcbiAgICAgICAgICAgIGlkOiBvcHRpb25zLnRva2VuSWQsXG4gICAgICAgICAgICAvLyBpbiBjYXNlcyB3aGVyZSB0aGUgc3VwcGx5IGlzIG5vdCBhdmFpbGFibGUgLT4gZmFsbCBiYWNrIHRvIDBcbiAgICAgICAgfSkuY2F0Y2goKCkgPT4gMG4pLFxuICAgIF0pO1xuICAgIHJldHVybiBwYXJzZU5GVChhd2FpdCBmZXRjaFRva2VuTWV0YWRhdGEoe1xuICAgICAgICBjbGllbnQ6IG9wdGlvbnMuY29udHJhY3QuY2xpZW50LFxuICAgICAgICB0b2tlbklkOiBvcHRpb25zLnRva2VuSWQsXG4gICAgICAgIHRva2VuVXJpLFxuICAgIH0pLmNhdGNoKCgpID0+ICh7XG4gICAgICAgIGlkOiBvcHRpb25zLnRva2VuSWQsXG4gICAgICAgIHR5cGU6IFwiRVJDMTE1NVwiLFxuICAgICAgICB1cmk6IHRva2VuVXJpLFxuICAgIH0pKSwge1xuICAgICAgICB0b2tlbklkOiBvcHRpb25zLnRva2VuSWQsXG4gICAgICAgIHRva2VuVXJpLFxuICAgICAgICB0eXBlOiBcIkVSQzExNTVcIixcbiAgICAgICAgb3duZXI6IG51bGwsXG4gICAgICAgIHN1cHBseSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldE5GVC5qcy5tYXAiXSwibmFtZXMiOlsiZmV0Y2hUb2tlbk1ldGFkYXRhIiwicGFyc2VORlQiLCJ0b3RhbFN1cHBseSIsInVyaSIsImdldE5GVCIsIm9wdGlvbnMiLCJ0b2tlblVyaSIsInN1cHBseSIsIlByb21pc2UiLCJhbGwiLCJjb250cmFjdCIsInRva2VuSWQiLCJpZCIsImNhdGNoIiwiY2xpZW50IiwidHlwZSIsIm93bmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/read/getNFT.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/base64/base64.js":
/*!***************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/base64/base64.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBase64JSON: function() { return /* binding */ isBase64JSON; },\n/* harmony export */   parseBase64String: function() { return /* binding */ parseBase64String; }\n/* harmony export */ });\n/* harmony import */ var _uint8_array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../uint8-array.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/uint8-array.js\");\n\n/**\n * Checks if a given string is a base64 encoded JSON string.\n * @param input - The string to be checked.\n * @returns True if the input string starts with \"data:application/json;base64\", false otherwise.\n * @example\n * ```ts\n * isBase64JSON(\"data:application/json;base64,eyJ0ZXN0IjoiYmFzZTY0In0=\")\n * // true\n * ```\n */ function isBase64JSON(input) {\n    if (input.startsWith(\"data:application/json;base64\")) {\n        return true;\n    }\n    return false;\n}\n/**\n * Parses a base64 string and returns the decoded string.\n * @param input - The base64 string to parse.\n * @returns The decoded string.\n * @example\n * ```ts\n * parseBase64String(\"data:application/json;base64,eyJ0ZXN0IjoiYmFzZTY0In0=\")\n * // '{\"test\":\"base64\"}'\n * ```\n */ function parseBase64String(input) {\n    const [, base64] = input.split(\",\");\n    return (0,_uint8_array_js__WEBPACK_IMPORTED_MODULE_0__.base64ToString)(base64);\n} //# sourceMappingURL=base64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9iYXNlNjQvYmFzZTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRDtBQUNuRDs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQyxhQUFhQyxLQUFLO0lBQzlCLElBQUlBLE1BQU1DLFVBQVUsQ0FBQyxpQ0FBaUM7UUFDbEQsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ0E7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0Msa0JBQWtCRixLQUFLO0lBQ25DLE1BQU0sR0FBR0csT0FBTyxHQUFHSCxNQUFNSSxLQUFLLENBQUM7SUFDL0IsT0FBT04sK0RBQWNBLENBQUNLO0FBQzFCLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9iYXNlNjQvYmFzZTY0LmpzP2YwNmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZTY0VG9TdHJpbmcgfSBmcm9tIFwiLi4vdWludDgtYXJyYXkuanNcIjtcbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gc3RyaW5nIGlzIGEgYmFzZTY0IGVuY29kZWQgSlNPTiBzdHJpbmcuXG4gKiBAcGFyYW0gaW5wdXQgLSBUaGUgc3RyaW5nIHRvIGJlIGNoZWNrZWQuXG4gKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBpbnB1dCBzdHJpbmcgc3RhcnRzIHdpdGggXCJkYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0XCIsIGZhbHNlIG90aGVyd2lzZS5cbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaXNCYXNlNjRKU09OKFwiZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUowWlhOMElqb2lZbUZ6WlRZMEluMD1cIilcbiAqIC8vIHRydWVcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNCYXNlNjRKU09OKGlucHV0KSB7XG4gICAgaWYgKGlucHV0LnN0YXJ0c1dpdGgoXCJkYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0XCIpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIFBhcnNlcyBhIGJhc2U2NCBzdHJpbmcgYW5kIHJldHVybnMgdGhlIGRlY29kZWQgc3RyaW5nLlxuICogQHBhcmFtIGlucHV0IC0gVGhlIGJhc2U2NCBzdHJpbmcgdG8gcGFyc2UuXG4gKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIHBhcnNlQmFzZTY0U3RyaW5nKFwiZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUowWlhOMElqb2lZbUZ6WlRZMEluMD1cIilcbiAqIC8vICd7XCJ0ZXN0XCI6XCJiYXNlNjRcIn0nXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQmFzZTY0U3RyaW5nKGlucHV0KSB7XG4gICAgY29uc3QgWywgYmFzZTY0XSA9IGlucHV0LnNwbGl0KFwiLFwiKTtcbiAgICByZXR1cm4gYmFzZTY0VG9TdHJpbmcoYmFzZTY0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOlsiYmFzZTY0VG9TdHJpbmciLCJpc0Jhc2U2NEpTT04iLCJpbnB1dCIsInN0YXJ0c1dpdGgiLCJwYXJzZUJhc2U2NFN0cmluZyIsImJhc2U2NCIsInNwbGl0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/base64/base64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/nft/fetchTokenMetadata.js":
/*!************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/nft/fetchTokenMetadata.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchTokenMetadata: function() { return /* binding */ fetchTokenMetadata; }\n/* harmony export */ });\n/* harmony import */ var _base64_base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base64/base64.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/base64/base64.js\");\n/* harmony import */ var _encoding_hex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n\n\n/**\n * Fetches the metadata for a token.\n *\n * @param options - The options for fetching the token metadata.\n * @returns The token metadata.\n * @internal\n */ async function fetchTokenMetadata(options) {\n    const { client, tokenId, tokenUri } = options;\n    // handle case where the URI is a base64 encoded JSON (onchain nft)\n    if ((0,_base64_base64_js__WEBPACK_IMPORTED_MODULE_0__.isBase64JSON)(tokenUri)) {\n        try {\n            return JSON.parse((0,_base64_base64_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64String)(tokenUri));\n        } catch (e) {\n            console.error(\"Failed to fetch base64 encoded NFT\", {\n                tokenId,\n                tokenUri\n            }, e);\n            throw e;\n        }\n    }\n    // in all other cases we will need the `download` function from storage\n    const { download } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../storage/download.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/storage/download.js\"));\n    // handle non-dynamic uris (most common case -> skip the other checks)\n    try {\n        if (!tokenUri.includes(\"{id}\")) {\n            return await (await download({\n                client,\n                uri: tokenUri\n            })).json();\n        }\n    } catch (e) {\n        console.error(\"Failed to fetch non-dynamic NFT\", {\n            tokenId,\n            tokenUri\n        }, e);\n        throw e;\n    }\n    // DYNAMIC NFT FORMATS (2 options, sadly has to be waterfall)\n    try {\n        try {\n            // try first dynamic id format\n            return await (await download({\n                client,\n                uri: tokenUri.replace(\"{id}\", (0,_encoding_hex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(tokenId, {\n                    size: 32\n                }).slice(2))\n            })).json();\n        } catch (err) {\n            // otherwise attempt the second format\n            return await (await download({\n                client,\n                uri: tokenUri.replace(\"{id}\", tokenId.toString())\n            })).json();\n        }\n    } catch (e) {\n        console.error(\"Failed to fetch dynamic NFT\", {\n            tokenId,\n            tokenUri\n        }, e);\n        throw e;\n    }\n} //# sourceMappingURL=fetchTokenMetadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9uZnQvZmV0Y2hUb2tlbk1ldGFkYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzRTtBQUNyQjtBQUNqRDs7Ozs7O0NBTUMsR0FDTSxlQUFlRyxtQkFBbUJDLE9BQU87SUFDNUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsUUFBUSxFQUFFLEdBQUdIO0lBQ3RDLG1FQUFtRTtJQUNuRSxJQUFJSiwrREFBWUEsQ0FBQ08sV0FBVztRQUN4QixJQUFJO1lBQ0EsT0FBT0MsS0FBS0MsS0FBSyxDQUFDUixvRUFBaUJBLENBQUNNO1FBQ3hDLEVBQ0EsT0FBT0csR0FBRztZQUNOQyxRQUFRQyxLQUFLLENBQUMsc0NBQXNDO2dCQUFFTjtnQkFBU0M7WUFBUyxHQUFHRztZQUMzRSxNQUFNQTtRQUNWO0lBQ0o7SUFDQSx1RUFBdUU7SUFDdkUsTUFBTSxFQUFFRyxRQUFRLEVBQUUsR0FBRyxNQUFNLGlNQUFtQztJQUM5RCxzRUFBc0U7SUFDdEUsSUFBSTtRQUNBLElBQUksQ0FBQ04sU0FBU08sUUFBUSxDQUFDLFNBQVM7WUFDNUIsT0FBTyxNQUFNLENBQUMsTUFBTUQsU0FBUztnQkFBRVI7Z0JBQVFVLEtBQUtSO1lBQVMsRUFBQyxFQUFHUyxJQUFJO1FBQ2pFO0lBQ0osRUFDQSxPQUFPTixHQUFHO1FBQ05DLFFBQVFDLEtBQUssQ0FBQyxtQ0FBbUM7WUFBRU47WUFBU0M7UUFBUyxHQUFHRztRQUN4RSxNQUFNQTtJQUNWO0lBQ0EsNkRBQTZEO0lBQzdELElBQUk7UUFDQSxJQUFJO1lBQ0EsOEJBQThCO1lBQzlCLE9BQU8sTUFBTSxDQUFDLE1BQU1HLFNBQVM7Z0JBQ3pCUjtnQkFDQVUsS0FBS1IsU0FBU1UsT0FBTyxDQUFDLFFBQVFmLDZEQUFXQSxDQUFDSSxTQUFTO29CQUFFWSxNQUFNO2dCQUFHLEdBQUdDLEtBQUssQ0FBQztZQUMzRSxFQUFDLEVBQUdILElBQUk7UUFDWixFQUNBLE9BQU9JLEtBQUs7WUFDUixzQ0FBc0M7WUFDdEMsT0FBTyxNQUFNLENBQUMsTUFBTVAsU0FBUztnQkFDekJSO2dCQUNBVSxLQUFLUixTQUFTVSxPQUFPLENBQUMsUUFBUVgsUUFBUWUsUUFBUTtZQUNsRCxFQUFDLEVBQUdMLElBQUk7UUFDWjtJQUNKLEVBQ0EsT0FBT04sR0FBRztRQUNOQyxRQUFRQyxLQUFLLENBQUMsK0JBQStCO1lBQUVOO1lBQVNDO1FBQVMsR0FBR0c7UUFDcEUsTUFBTUE7SUFDVjtBQUNKLEVBQ0EsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9uZnQvZmV0Y2hUb2tlbk1ldGFkYXRhLmpzPzZhYTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNCYXNlNjRKU09OLCBwYXJzZUJhc2U2NFN0cmluZyB9IGZyb20gXCIuLi9iYXNlNjQvYmFzZTY0LmpzXCI7XG5pbXBvcnQgeyBudW1iZXJUb0hleCB9IGZyb20gXCIuLi9lbmNvZGluZy9oZXguanNcIjtcbi8qKlxuICogRmV0Y2hlcyB0aGUgbWV0YWRhdGEgZm9yIGEgdG9rZW4uXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgZmV0Y2hpbmcgdGhlIHRva2VuIG1ldGFkYXRhLlxuICogQHJldHVybnMgVGhlIHRva2VuIG1ldGFkYXRhLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFRva2VuTWV0YWRhdGEob3B0aW9ucykge1xuICAgIGNvbnN0IHsgY2xpZW50LCB0b2tlbklkLCB0b2tlblVyaSB9ID0gb3B0aW9ucztcbiAgICAvLyBoYW5kbGUgY2FzZSB3aGVyZSB0aGUgVVJJIGlzIGEgYmFzZTY0IGVuY29kZWQgSlNPTiAob25jaGFpbiBuZnQpXG4gICAgaWYgKGlzQmFzZTY0SlNPTih0b2tlblVyaSkpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHBhcnNlQmFzZTY0U3RyaW5nKHRva2VuVXJpKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggYmFzZTY0IGVuY29kZWQgTkZUXCIsIHsgdG9rZW5JZCwgdG9rZW5VcmkgfSwgZSk7XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIGluIGFsbCBvdGhlciBjYXNlcyB3ZSB3aWxsIG5lZWQgdGhlIGBkb3dubG9hZGAgZnVuY3Rpb24gZnJvbSBzdG9yYWdlXG4gICAgY29uc3QgeyBkb3dubG9hZCB9ID0gYXdhaXQgaW1wb3J0KFwiLi4vLi4vc3RvcmFnZS9kb3dubG9hZC5qc1wiKTtcbiAgICAvLyBoYW5kbGUgbm9uLWR5bmFtaWMgdXJpcyAobW9zdCBjb21tb24gY2FzZSAtPiBza2lwIHRoZSBvdGhlciBjaGVja3MpXG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKCF0b2tlblVyaS5pbmNsdWRlcyhcIntpZH1cIikpIHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCAoYXdhaXQgZG93bmxvYWQoeyBjbGllbnQsIHVyaTogdG9rZW5VcmkgfSkpLmpzb24oKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIG5vbi1keW5hbWljIE5GVFwiLCB7IHRva2VuSWQsIHRva2VuVXJpIH0sIGUpO1xuICAgICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICAvLyBEWU5BTUlDIE5GVCBGT1JNQVRTICgyIG9wdGlvbnMsIHNhZGx5IGhhcyB0byBiZSB3YXRlcmZhbGwpXG4gICAgdHJ5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIHRyeSBmaXJzdCBkeW5hbWljIGlkIGZvcm1hdFxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IChhd2FpdCBkb3dubG9hZCh7XG4gICAgICAgICAgICAgICAgY2xpZW50LFxuICAgICAgICAgICAgICAgIHVyaTogdG9rZW5VcmkucmVwbGFjZShcIntpZH1cIiwgbnVtYmVyVG9IZXgodG9rZW5JZCwgeyBzaXplOiAzMiB9KS5zbGljZSgyKSksXG4gICAgICAgICAgICB9KSkuanNvbigpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIC8vIG90aGVyd2lzZSBhdHRlbXB0IHRoZSBzZWNvbmQgZm9ybWF0XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgKGF3YWl0IGRvd25sb2FkKHtcbiAgICAgICAgICAgICAgICBjbGllbnQsXG4gICAgICAgICAgICAgICAgdXJpOiB0b2tlblVyaS5yZXBsYWNlKFwie2lkfVwiLCB0b2tlbklkLnRvU3RyaW5nKCkpLFxuICAgICAgICAgICAgfSkpLmpzb24oKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIGR5bmFtaWMgTkZUXCIsIHsgdG9rZW5JZCwgdG9rZW5VcmkgfSwgZSk7XG4gICAgICAgIHRocm93IGU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2hUb2tlbk1ldGFkYXRhLmpzLm1hcCJdLCJuYW1lcyI6WyJpc0Jhc2U2NEpTT04iLCJwYXJzZUJhc2U2NFN0cmluZyIsIm51bWJlclRvSGV4IiwiZmV0Y2hUb2tlbk1ldGFkYXRhIiwib3B0aW9ucyIsImNsaWVudCIsInRva2VuSWQiLCJ0b2tlblVyaSIsIkpTT04iLCJwYXJzZSIsImUiLCJjb25zb2xlIiwiZXJyb3IiLCJkb3dubG9hZCIsImluY2x1ZGVzIiwidXJpIiwianNvbiIsInJlcGxhY2UiLCJzaXplIiwic2xpY2UiLCJlcnIiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/nft/fetchTokenMetadata.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/nft/parseNft.js":
/*!**************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/nft/parseNft.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseNFT: function() { return /* binding */ parseNFT; }\n/* harmony export */ });\n/**\n * Parses the NFT metadata and options to create an NFT object.\n * @param base - The base NFT metadata.\n * @param options - The options for parsing the NFT.\n * @returns The parsed NFT object.\n * @internal\n */ function parseNFT(base, options) {\n    switch(options.type){\n        case \"ERC721\":\n            var _options_owner;\n            return {\n                metadata: base,\n                owner: (_options_owner = options === null || options === void 0 ? void 0 : options.owner) !== null && _options_owner !== void 0 ? _options_owner : null,\n                id: options.tokenId,\n                tokenURI: options.tokenUri,\n                type: options.type\n            };\n        case \"ERC1155\":\n            var _options_owner1;\n            return {\n                metadata: base,\n                owner: (_options_owner1 = options === null || options === void 0 ? void 0 : options.owner) !== null && _options_owner1 !== void 0 ? _options_owner1 : null,\n                id: options.tokenId,\n                tokenURI: options.tokenUri,\n                type: options.type,\n                supply: options.supply\n            };\n        default:\n            throw new Error(\"Invalid NFT type\");\n    }\n} //# sourceMappingURL=parseNft.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9uZnQvcGFyc2VOZnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Q0FNQyxHQUNNLFNBQVNBLFNBQVNDLElBQUksRUFBRUMsT0FBTztJQUNsQyxPQUFRQSxRQUFRQyxJQUFJO1FBQ2hCLEtBQUs7Z0JBR1VEO1lBRlgsT0FBTztnQkFDSEUsVUFBVUg7Z0JBQ1ZJLE9BQU9ILENBQUFBLGlCQUFBQSxvQkFBQUEsOEJBQUFBLFFBQVNHLEtBQUssY0FBZEgsNEJBQUFBLGlCQUFrQjtnQkFDekJJLElBQUlKLFFBQVFLLE9BQU87Z0JBQ25CQyxVQUFVTixRQUFRTyxRQUFRO2dCQUMxQk4sTUFBTUQsUUFBUUMsSUFBSTtZQUN0QjtRQUNKLEtBQUs7Z0JBR1VEO1lBRlgsT0FBTztnQkFDSEUsVUFBVUg7Z0JBQ1ZJLE9BQU9ILENBQUFBLGtCQUFBQSxvQkFBQUEsOEJBQUFBLFFBQVNHLEtBQUssY0FBZEgsNkJBQUFBLGtCQUFrQjtnQkFDekJJLElBQUlKLFFBQVFLLE9BQU87Z0JBQ25CQyxVQUFVTixRQUFRTyxRQUFRO2dCQUMxQk4sTUFBTUQsUUFBUUMsSUFBSTtnQkFDbEJPLFFBQVFSLFFBQVFRLE1BQU07WUFDMUI7UUFDSjtZQUNJLE1BQU0sSUFBSUMsTUFBTTtJQUN4QjtBQUNKLEVBQ0Esb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9uZnQvcGFyc2VOZnQuanM/ZWI2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBhcnNlcyB0aGUgTkZUIG1ldGFkYXRhIGFuZCBvcHRpb25zIHRvIGNyZWF0ZSBhbiBORlQgb2JqZWN0LlxuICogQHBhcmFtIGJhc2UgLSBUaGUgYmFzZSBORlQgbWV0YWRhdGEuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciBwYXJzaW5nIHRoZSBORlQuXG4gKiBAcmV0dXJucyBUaGUgcGFyc2VkIE5GVCBvYmplY3QuXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlTkZUKGJhc2UsIG9wdGlvbnMpIHtcbiAgICBzd2l0Y2ggKG9wdGlvbnMudHlwZSkge1xuICAgICAgICBjYXNlIFwiRVJDNzIxXCI6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG1ldGFkYXRhOiBiYXNlLFxuICAgICAgICAgICAgICAgIG93bmVyOiBvcHRpb25zPy5vd25lciA/PyBudWxsLFxuICAgICAgICAgICAgICAgIGlkOiBvcHRpb25zLnRva2VuSWQsXG4gICAgICAgICAgICAgICAgdG9rZW5VUkk6IG9wdGlvbnMudG9rZW5VcmksXG4gICAgICAgICAgICAgICAgdHlwZTogb3B0aW9ucy50eXBlLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgY2FzZSBcIkVSQzExNTVcIjpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbWV0YWRhdGE6IGJhc2UsXG4gICAgICAgICAgICAgICAgb3duZXI6IG9wdGlvbnM/Lm93bmVyID8/IG51bGwsXG4gICAgICAgICAgICAgICAgaWQ6IG9wdGlvbnMudG9rZW5JZCxcbiAgICAgICAgICAgICAgICB0b2tlblVSSTogb3B0aW9ucy50b2tlblVyaSxcbiAgICAgICAgICAgICAgICB0eXBlOiBvcHRpb25zLnR5cGUsXG4gICAgICAgICAgICAgICAgc3VwcGx5OiBvcHRpb25zLnN1cHBseSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIE5GVCB0eXBlXCIpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlTmZ0LmpzLm1hcCJdLCJuYW1lcyI6WyJwYXJzZU5GVCIsImJhc2UiLCJvcHRpb25zIiwidHlwZSIsIm1ldGFkYXRhIiwib3duZXIiLCJpZCIsInRva2VuSWQiLCJ0b2tlblVSSSIsInRva2VuVXJpIiwic3VwcGx5IiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/nft/parseNft.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/uint8-array.js":
/*!*************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/uint8-array.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   areUint8ArraysEqual: function() { return /* binding */ areUint8ArraysEqual; },\n/* harmony export */   base64ToString: function() { return /* binding */ base64ToString; },\n/* harmony export */   base64ToUint8Array: function() { return /* binding */ base64ToUint8Array; },\n/* harmony export */   compareUint8Arrays: function() { return /* binding */ compareUint8Arrays; },\n/* harmony export */   concatUint8Arrays: function() { return /* binding */ concatUint8Arrays; },\n/* harmony export */   isUint8Array: function() { return /* binding */ isUint8Array; },\n/* harmony export */   uint8ArrayToBase64: function() { return /* binding */ uint8ArrayToBase64; },\n/* harmony export */   uint8ArrayToString: function() { return /* binding */ uint8ArrayToString; }\n/* harmony export */ });\n/* harmony import */ var _text_decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text-decoder.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/text-decoder.js\");\n\nconst uint8ArrayStringified = \"[object Uint8Array]\";\n/**\n * Throw a `TypeError` if the given value is not an instance of `Uint8Array`.\n * @example\n * ```ts\n * import {assertUint8Array} from 'uint8array-extras';\n *\n * try {\n * assertUint8Array(new ArrayBuffer(10)); // Throws a TypeError\n * } catch (error) {\n * console.error(error.message);\n * }\n * ```\n */ function assertUint8Array(value) {\n    if (!isUint8Array(value)) {\n        throw new TypeError(\"Expected `Uint8Array`, got `\".concat(typeof value, \"`\"));\n    }\n}\n/**\n * Check if the given value is an instance of `Uint8Array`.\n *\n * Replacement for [`Buffer.isBuffer()`](https://nodejs.org/api/buffer.html#static-method-bufferisbufferobj).\n * @example\n * ```ts\n * import {isUint8Array} from 'uint8array-extras';\n *\n * console.log(isUint8Array(new Uint8Array()));\n * //=> true\n *\n * console.log(isUint8Array(Buffer.from('x')));\n * //=> true\n *\n * console.log(isUint8Array(new ArrayBuffer(10)));\n * //=> false\n * ```\n */ function isUint8Array(value) {\n    if (!value) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    return Object.prototype.toString.call(value) === uint8ArrayStringified;\n}\n/**\n * Check if two arrays are identical by verifying that they contain the same bytes in the same sequence.\n *\n * Replacement for [`Buffer#equals()`](https://nodejs.org/api/buffer.html#bufequalsotherbuffer).\n * @example\n * ```ts\n * import {areUint8ArraysEqual} from 'uint8array-extras';\n *\n * const a = new Uint8Array([1, 2, 3]);\n * const b = new Uint8Array([1, 2, 3]);\n * const c = new Uint8Array([4, 5, 6]);\n *\n * console.log(areUint8ArraysEqual(a, b));\n * //=> true\n *\n * console.log(areUint8ArraysEqual(a, c));\n * //=> false\n * ```\n */ function areUint8ArraysEqual(a, b) {\n    assertUint8Array(a);\n    assertUint8Array(b);\n    if (a === b) {\n        return true;\n    }\n    if (a.length !== b.length) {\n        return false;\n    }\n    for(let index = 0; index < a.length; index++){\n        if (a[index] !== b[index]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert a `Uint8Array` (containing a UTF-8 string) to a string.\n *\n * Replacement for [`Buffer#toString()`](https://nodejs.org/api/buffer.html#buftostringencoding-start-end).\n * @example\n * ```ts\n * import {uint8ArrayToString} from 'uint8array-extras';\n *\n * const byteArray = new Uint8Array([72, 101, 108, 108, 111]);\n *\n * console.log(uint8ArrayToString(byteArray));\n * //=> 'Hello'\n * ```\n */ function uint8ArrayToString(array) {\n    assertUint8Array(array);\n    return (0,_text_decoder_js__WEBPACK_IMPORTED_MODULE_0__.cachedTextDecoder)().decode(array);\n}\nfunction assertString(value) {\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"Expected `string`, got `\".concat(typeof value, \"`\"));\n    }\n}\nfunction base64UrlToBase64(base64url) {\n    return base64url.replaceAll(\"-\", \"+\").replaceAll(\"_\", \"/\");\n}\n/**\n * Convert a Base64-encoded or [Base64URL](https://base64.guru/standards/base64url)-encoded string to a `Uint8Array`.\n *\n * Replacement for [`Buffer.from('SGVsbG8=', 'base64')`](https://nodejs.org/api/buffer.html#static-method-bufferfromstring-encoding).\n * @example\n * ```ts\n * import {base64ToUint8Array} from 'uint8array-extras';\n *\n * console.log(base64ToUint8Array('SGVsbG8='));\n * //=> Uint8Array [72, 101, 108, 108, 111]\n * ```\n */ function base64ToUint8Array(base64String) {\n    assertString(base64String);\n    return Uint8Array.from(globalThis.atob(base64UrlToBase64(base64String)), // biome-ignore lint/style/noNonNullAssertion: we know that the code points exist\n    (x)=>x.codePointAt(0));\n}\n/**\n * Decode a Base64-encoded or [Base64URL](https://base64.guru/standards/base64url)-encoded string to a string.\n *\n * Replacement for `Buffer.from('SGVsbG8=', 'base64').toString()` and [`atob()`](https://developer.mozilla.org/en-US/docs/Web/API/atob).\n * @example\n * ```ts\n * import {base64ToString} from 'uint8array-extras';\n *\n * console.log(base64ToString('SGVsbG8='));\n * //=> 'Hello'\n * ```\n */ function base64ToString(base64String) {\n    assertString(base64String);\n    return uint8ArrayToString(base64ToUint8Array(base64String));\n}\nfunction base64ToBase64Url(base64) {\n    return base64.replaceAll(\"+\", \"-\").replaceAll(\"/\", \"_\").replace(/=+$/, \"\");\n}\n// Reference: https://phuoc.ng/collection/this-vs-that/concat-vs-push/\nconst MAX_BLOCK_SIZE = 65535;\nfunction uint8ArrayToBase64(array) {\n    let { urlSafe = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    assertUint8Array(array);\n    let base64;\n    if (array.length < MAX_BLOCK_SIZE) {\n        // Required as `btoa` and `atob` don't properly support Unicode: https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n        // @ts-expect-error - TS doesn't know about `String#fromCodePoint`\n        base64 = globalThis.btoa(String.fromCodePoint.apply(this, array));\n    } else {\n        base64 = \"\";\n        for (const value of array){\n            base64 += String.fromCodePoint(value);\n        }\n        base64 = globalThis.btoa(base64);\n    }\n    return urlSafe ? base64ToBase64Url(base64) : base64;\n}\nfunction concatUint8Arrays(arrays, totalLength) {\n    if (arrays.length === 0) {\n        return new Uint8Array(0);\n    }\n    const calculatedTotalLength = totalLength !== null && totalLength !== void 0 ? totalLength : arrays.reduce((accumulator, currentValue)=>accumulator + currentValue.length, 0);\n    const returnValue = new Uint8Array(calculatedTotalLength);\n    let offset = 0;\n    for (const array of arrays){\n        assertUint8Array(array);\n        returnValue.set(array, offset);\n        offset += array.length;\n    }\n    return returnValue;\n}\nfunction compareUint8Arrays(a, b) {\n    assertUint8Array(a);\n    assertUint8Array(b);\n    const length = Math.min(a.length, b.length);\n    for(let index = 0; index < length; index++){\n        // biome-ignore lint/style/noNonNullAssertion: we check the length above so the index is always in bounds\n        const diff = a[index] - b[index];\n        if (diff !== 0) {\n            return Math.sign(diff);\n        }\n    }\n    // At this point, all the compared elements are equal.\n    // The shorter array should come first if the arrays are of different lengths.\n    return Math.sign(a.length - b.length);\n} //# sourceMappingURL=uint8-array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/uint8-array.js\n"));

/***/ })

}]);