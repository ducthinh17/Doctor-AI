"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_wallets_injected_index_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parseTypedData.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parseTypedData.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTypedData: function() { return /* binding */ parseTypedData; }\n/* harmony export */ });\n/* harmony import */ var _encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/helpers/is-hex.js\");\n/* harmony import */ var _encoding_hex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n\n/**\n * @internal\n */ function parseTypedData(typedData) {\n    const domain = typedData.domain;\n    if ((domain === null || domain === void 0 ? void 0 : domain.chainId) !== undefined && (0,_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(domain.chainId)) {\n        typedData.domain = {\n            ...typedData.domain,\n            chainId: (0,_encoding_hex_js__WEBPACK_IMPORTED_MODULE_1__.hexToNumber)(typedData.domain.chainId)\n        };\n    }\n    return typedData;\n} //# sourceMappingURL=parseTypedData.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9zaWduYXR1cmVzL2hlbHBlcnMvcGFyc2VUeXBlZERhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJEO0FBQzNEOztDQUVDLEdBQ00sU0FBU0UsZUFBZUMsU0FBUztJQUNwQyxNQUFNQyxTQUFTRCxVQUFVQyxNQUFNO0lBQy9CLElBQUlBLENBQUFBLG1CQUFBQSw2QkFBQUEsT0FBUUMsT0FBTyxNQUFLQyxhQUFhTCx1REFBS0EsQ0FBQ0csT0FBT0MsT0FBTyxHQUFHO1FBQ3hERixVQUFVQyxNQUFNLEdBQUc7WUFDZixHQUFHRCxVQUFVQyxNQUFNO1lBQ25CQyxTQUFTTCw2REFBV0EsQ0FBQ0csVUFBVUMsTUFBTSxDQUFDQyxPQUFPO1FBQ2pEO0lBQ0o7SUFDQSxPQUFPRjtBQUNYLEVBQ0EsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9zaWduYXR1cmVzL2hlbHBlcnMvcGFyc2VUeXBlZERhdGEuanM/NGFjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoZXhUb051bWJlciwgaXNIZXggfSBmcm9tIFwiLi4vLi4vZW5jb2RpbmcvaGV4LmpzXCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VUeXBlZERhdGEodHlwZWREYXRhKSB7XG4gICAgY29uc3QgZG9tYWluID0gdHlwZWREYXRhLmRvbWFpbjtcbiAgICBpZiAoZG9tYWluPy5jaGFpbklkICE9PSB1bmRlZmluZWQgJiYgaXNIZXgoZG9tYWluLmNoYWluSWQpKSB7XG4gICAgICAgIHR5cGVkRGF0YS5kb21haW4gPSB7XG4gICAgICAgICAgICAuLi50eXBlZERhdGEuZG9tYWluLFxuICAgICAgICAgICAgY2hhaW5JZDogaGV4VG9OdW1iZXIodHlwZWREYXRhLmRvbWFpbi5jaGFpbklkKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHR5cGVkRGF0YTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlVHlwZWREYXRhLmpzLm1hcCJdLCJuYW1lcyI6WyJoZXhUb051bWJlciIsImlzSGV4IiwicGFyc2VUeXBlZERhdGEiLCJ0eXBlZERhdGEiLCJkb21haW4iLCJjaGFpbklkIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parseTypedData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/injected/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/injected/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autoConnectInjectedWallet: function() { return /* binding */ autoConnectInjectedWallet; },\n/* harmony export */   connectInjectedWallet: function() { return /* binding */ connectInjectedWallet; },\n/* harmony export */   getInjectedProvider: function() { return /* binding */ getInjectedProvider; },\n/* harmony export */   isInjectedWallet: function() { return /* binding */ isInjectedWallet; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/typedData.js\");\n/* harmony import */ var _chains_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../chains/utils.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/chains/utils.js\");\n/* harmony import */ var _utils_address_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/address.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/helpers/is-hex.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _utils_chains_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/chains.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/chains.js\");\n/* harmony import */ var _utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/normalizeChainId.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/normalizeChainId.js\");\n/* harmony import */ var _mipdStore_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mipdStore.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/injected/mipdStore.js\");\n/* harmony import */ var _utils_signatures_helpers_parseTypedData_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/signatures/helpers/parseTypedData.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/signatures/helpers/parseTypedData.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Checks if the provided wallet is an injected wallet.\n *\n * @param wallet - The wallet to check.\n * @returns True if the wallet is an injected wallet, false otherwise.\n */ function isInjectedWallet(wallet) {\n    return !!(0,_mipdStore_js__WEBPACK_IMPORTED_MODULE_0__.injectedProvider)(wallet.id);\n}\n// TODO: save the provider in data\nfunction getInjectedProvider(walletId) {\n    const provider = (0,_mipdStore_js__WEBPACK_IMPORTED_MODULE_0__.injectedProvider)(walletId);\n    if (!provider) {\n        throw new Error('No injected provider found for wallet: \"'.concat(walletId, '\"'));\n    }\n    return provider;\n}\n/**\n * @internal\n */ async function connectInjectedWallet(id, options, emitter) {\n    const provider = getInjectedProvider(id);\n    const addresses = await provider.request({\n        method: \"eth_requestAccounts\"\n    });\n    const addr = addresses[0];\n    if (!addr) {\n        throw new Error(\"no accounts available\");\n    }\n    // use the first account\n    const address = (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_1__.getAddress)(addr);\n    // get the chainId the provider is on\n    const chainId = await provider.request({\n        method: \"eth_chainId\"\n    }).then(_utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_2__.normalizeChainId);\n    let connectedChain = options.chain && options.chain.id === chainId ? options.chain : (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_3__.getCachedChain)(chainId);\n    // if we want a specific chainId and it is not the same as the provider chainId, trigger switchChain\n    if (options.chain && options.chain.id !== chainId) {\n        await switchChain(provider, options.chain);\n        connectedChain = options.chain;\n    }\n    return onConnect(provider, address, connectedChain, emitter);\n}\n/**\n * @internal\n */ async function autoConnectInjectedWallet(id, emitter, chain) {\n    const provider = getInjectedProvider(id);\n    // connected accounts\n    const addresses = await provider.request({\n        method: \"eth_accounts\"\n    });\n    const addr = addresses[0];\n    if (!addr) {\n        throw new Error(\"no accounts available\");\n    }\n    // use the first account\n    const address = (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_1__.getAddress)(addr);\n    // get the chainId the provider is on\n    const chainId = await provider.request({\n        method: \"eth_chainId\"\n    }).then(_utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_2__.normalizeChainId);\n    const connectedChain = chain && chain.id === chainId ? chain : (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_3__.getCachedChain)(chainId);\n    return onConnect(provider, address, connectedChain, emitter);\n}\nfunction createAccount(provider, address) {\n    const account = {\n        address,\n        async sendTransaction (tx) {\n            const transactionHash = await provider.request({\n                method: \"eth_sendTransaction\",\n                params: [\n                    {\n                        accessList: tx.accessList,\n                        value: tx.value ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(tx.value) : undefined,\n                        gas: tx.gas ? (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(tx.gas) : undefined,\n                        from: this.address,\n                        to: tx.to,\n                        data: tx.data\n                    }\n                ]\n            });\n            return {\n                transactionHash\n            };\n        },\n        async signMessage (param) {\n            let { message } = param;\n            if (!account.address) {\n                throw new Error(\"Provider not setup\");\n            }\n            const messageToSign = (()=>{\n                if (typeof message === \"string\") {\n                    return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.stringToHex)(message);\n                }\n                if (message.raw instanceof Uint8Array) {\n                    return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.uint8ArrayToHex)(message.raw);\n                }\n                return message.raw;\n            })();\n            return await provider.request({\n                method: \"personal_sign\",\n                params: [\n                    messageToSign,\n                    account.address\n                ]\n            });\n        },\n        async signTypedData (typedData) {\n            if (!provider || !account.address) {\n                throw new Error(\"Provider not setup\");\n            }\n            const parsedTypedData = (0,_utils_signatures_helpers_parseTypedData_js__WEBPACK_IMPORTED_MODULE_5__.parseTypedData)(typedData);\n            const { domain, message, primaryType } = parsedTypedData;\n            const types = {\n                EIP712Domain: (0,viem__WEBPACK_IMPORTED_MODULE_6__.getTypesForEIP712Domain)({\n                    domain\n                }),\n                ...parsedTypedData.types\n            };\n            // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n            // as we can't statically check this with TypeScript.\n            (0,viem__WEBPACK_IMPORTED_MODULE_6__.validateTypedData)({\n                domain,\n                message,\n                primaryType,\n                types\n            });\n            const stringifiedData = (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_7__.stringify)({\n                domain: domain !== null && domain !== void 0 ? domain : {},\n                message,\n                primaryType,\n                types\n            }, (_, value)=>(0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_8__.isHex)(value) ? value.toLowerCase() : value);\n            return await provider.request({\n                method: \"eth_signTypedData_v4\",\n                params: [\n                    account.address,\n                    stringifiedData\n                ]\n            });\n        }\n    };\n    return account;\n}\n/**\n * Call this method when the wallet provider is connected or auto connected\n * @internal\n */ async function onConnect(provider, address, chain, emitter) {\n    const account = createAccount(provider, address);\n    async function disconnect() {\n        provider.removeListener(\"accountsChanged\", onAccountsChanged);\n        provider.removeListener(\"chainChanged\", onChainChanged);\n        provider.removeListener(\"disconnect\", onDisconnect);\n    }\n    function onDisconnect() {\n        disconnect();\n        emitter.emit(\"disconnect\", undefined);\n    }\n    function onAccountsChanged(accounts) {\n        if (accounts[0]) {\n            const newAccount = createAccount(provider, (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_1__.getAddress)(accounts[0]));\n            emitter.emit(\"accountChanged\", newAccount);\n            emitter.emit(\"accountsChanged\", accounts);\n        } else {\n            onDisconnect();\n        }\n    }\n    function onChainChanged(newChainId) {\n        const newChain = (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_3__.getCachedChain)((0,_utils_normalizeChainId_js__WEBPACK_IMPORTED_MODULE_2__.normalizeChainId)(newChainId));\n        emitter.emit(\"chainChanged\", newChain);\n    }\n    if (provider.on) {\n        provider.on(\"accountsChanged\", onAccountsChanged);\n        provider.on(\"chainChanged\", onChainChanged);\n        provider.on(\"disconnect\", onDisconnect);\n    }\n    return [\n        account,\n        chain,\n        disconnect,\n        (newChain)=>switchChain(provider, newChain)\n    ];\n}\n/**\n * @internal\n */ async function switchChain(provider, chain) {\n    const hexChainId = (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_4__.numberToHex)(chain.id);\n    try {\n        await provider.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: hexChainId\n                }\n            ]\n        });\n    // biome-ignore lint/suspicious/noExplicitAny: TODO: fix any\n    } catch (e) {\n        var _e_data_originalError, _e_data;\n        // if chain does not exist, add the chain\n        if ((e === null || e === void 0 ? void 0 : e.code) === 4902 || (e === null || e === void 0 ? void 0 : (_e_data = e.data) === null || _e_data === void 0 ? void 0 : (_e_data_originalError = _e_data.originalError) === null || _e_data_originalError === void 0 ? void 0 : _e_data_originalError.code) === 4902) {\n            var _apiChain_explorers;\n            const apiChain = await (0,_chains_utils_js__WEBPACK_IMPORTED_MODULE_3__.getChainMetadata)(chain);\n            await provider.request({\n                method: \"wallet_addEthereumChain\",\n                params: [\n                    {\n                        chainId: hexChainId,\n                        chainName: apiChain.name,\n                        nativeCurrency: apiChain.nativeCurrency,\n                        rpcUrls: (0,_utils_chains_js__WEBPACK_IMPORTED_MODULE_9__.getValidPublicRPCUrl)(apiChain),\n                        blockExplorerUrls: (_apiChain_explorers = apiChain.explorers) === null || _apiChain_explorers === void 0 ? void 0 : _apiChain_explorers.map((x)=>x.url)\n                    }\n                ]\n            });\n        } else {\n            throw e;\n        }\n    }\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/injected/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/chains.js":
/*!****************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/utils/chains.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getValidPublicRPCUrl: function() { return /* binding */ getValidPublicRPCUrl; }\n/* harmony export */ });\n// TODO - move this to chains subfolder\n/**\n * Remove client id from RPC url for given chain\n * @internal\n */ function getValidPublicRPCUrl(chain) {\n    return getValidChainRPCs(chain).map((rpc)=>{\n        try {\n            const url = new URL(rpc);\n            // remove client id from url\n            if (url.hostname.endsWith(\".thirdweb.com\")) {\n                url.pathname = \"\";\n                url.search = \"\";\n            }\n            return url.toString();\n        } catch (e) {\n            return rpc;\n        }\n    });\n}\n// TODO - move this to chains/\n/**\n * Get valid RPCs for given chain\n * @internal\n */ function getValidChainRPCs(chain, clientId) {\n    let mode = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"http\";\n    const processedRPCs = [];\n    for (const rpc of chain.rpc){\n        // exclude RPC if mode mismatch\n        if (mode === \"http\" && !rpc.startsWith(\"http\")) {\n            continue;\n        }\n        if (mode === \"ws\" && !rpc.startsWith(\"ws\")) {\n            continue;\n        }\n        // Replace API_KEY placeholder with value\n        if (rpc.includes(\"${THIRDWEB_API_KEY}\")) {\n            if (clientId) {\n                processedRPCs.push(rpc.replace(\"${THIRDWEB_API_KEY}\", clientId) + (typeof globalThis !== \"undefined\" && \"APP_BUNDLE_ID\" in globalThis ? \"/?bundleId=\".concat(globalThis.APP_BUNDLE_ID) : \"\"));\n            } else {\n                // if no client id, let it through with empty string\n                // if secretKey is present, it will be used in header\n                // if none are passed, will have reduced access\n                processedRPCs.push(rpc.replace(\"${THIRDWEB_API_KEY}\", \"\"));\n            }\n        } else if (rpc.includes(\"${\")) {\n        // do nothing (just don't add it to the list)\n        } else {\n            processedRPCs.push(rpc);\n        }\n    }\n    if (processedRPCs.length === 0) {\n        throw new Error('No RPC available for chainId \"'.concat(chain.chainId, '\" with mode ').concat(mode));\n    }\n    return processedRPCs;\n} //# sourceMappingURL=chains.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL3V0aWxzL2NoYWlucy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsdUNBQXVDO0FBQ3ZDOzs7Q0FHQyxHQUNNLFNBQVNBLHFCQUFxQkMsS0FBSztJQUN0QyxPQUFPQyxrQkFBa0JELE9BQU9FLEdBQUcsQ0FBQyxDQUFDQztRQUNqQyxJQUFJO1lBQ0EsTUFBTUMsTUFBTSxJQUFJQyxJQUFJRjtZQUNwQiw0QkFBNEI7WUFDNUIsSUFBSUMsSUFBSUUsUUFBUSxDQUFDQyxRQUFRLENBQUMsa0JBQWtCO2dCQUN4Q0gsSUFBSUksUUFBUSxHQUFHO2dCQUNmSixJQUFJSyxNQUFNLEdBQUc7WUFDakI7WUFDQSxPQUFPTCxJQUFJTSxRQUFRO1FBQ3ZCLEVBQ0EsT0FBT0MsR0FBRztZQUNOLE9BQU9SO1FBQ1g7SUFDSjtBQUNKO0FBQ0EsOEJBQThCO0FBQzlCOzs7Q0FHQyxHQUNELFNBQVNGLGtCQUFrQkQsS0FBSyxFQUFFWSxRQUFRO1FBQUVDLE9BQUFBLGlFQUFPO0lBQy9DLE1BQU1DLGdCQUFnQixFQUFFO0lBQ3hCLEtBQUssTUFBTVgsT0FBT0gsTUFBTUcsR0FBRyxDQUFFO1FBQ3pCLCtCQUErQjtRQUMvQixJQUFJVSxTQUFTLFVBQVUsQ0FBQ1YsSUFBSVksVUFBVSxDQUFDLFNBQVM7WUFDNUM7UUFDSjtRQUNBLElBQUlGLFNBQVMsUUFBUSxDQUFDVixJQUFJWSxVQUFVLENBQUMsT0FBTztZQUN4QztRQUNKO1FBQ0EseUNBQXlDO1FBQ3pDLElBQUlaLElBQUlhLFFBQVEsQ0FBQyx3QkFBd0I7WUFDckMsSUFBSUosVUFBVTtnQkFDVkUsY0FBY0csSUFBSSxDQUFDZCxJQUFJZSxPQUFPLENBQUMsdUJBQXVCTixZQUNqRCxRQUFPTyxlQUFlLGVBQWUsbUJBQW1CQSxhQUVqRCxjQUF1QyxPQUF6QkEsV0FBV0MsYUFBYSxJQUN4QyxFQUFDO1lBQ2YsT0FDSztnQkFDRCxvREFBb0Q7Z0JBQ3BELHFEQUFxRDtnQkFDckQsK0NBQStDO2dCQUMvQ04sY0FBY0csSUFBSSxDQUFDZCxJQUFJZSxPQUFPLENBQUMsdUJBQXVCO1lBQzFEO1FBQ0osT0FFSyxJQUFJZixJQUFJYSxRQUFRLENBQUMsT0FBTztRQUN6Qiw2Q0FBNkM7UUFDakQsT0FFSztZQUNERixjQUFjRyxJQUFJLENBQUNkO1FBQ3ZCO0lBQ0o7SUFDQSxJQUFJVyxjQUFjTyxNQUFNLEtBQUssR0FBRztRQUM1QixNQUFNLElBQUlDLE1BQU0saUNBQTZEVCxPQUE1QmIsTUFBTXVCLE9BQU8sRUFBQyxnQkFBbUIsT0FBTFY7SUFDakY7SUFDQSxPQUFPQztBQUNYLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL3V0aWxzL2NoYWlucy5qcz9lZGJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE8gLSBtb3ZlIHRoaXMgdG8gY2hhaW5zIHN1YmZvbGRlclxuLyoqXG4gKiBSZW1vdmUgY2xpZW50IGlkIGZyb20gUlBDIHVybCBmb3IgZ2l2ZW4gY2hhaW5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VmFsaWRQdWJsaWNSUENVcmwoY2hhaW4pIHtcbiAgICByZXR1cm4gZ2V0VmFsaWRDaGFpblJQQ3MoY2hhaW4pLm1hcCgocnBjKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHJwYyk7XG4gICAgICAgICAgICAvLyByZW1vdmUgY2xpZW50IGlkIGZyb20gdXJsXG4gICAgICAgICAgICBpZiAodXJsLmhvc3RuYW1lLmVuZHNXaXRoKFwiLnRoaXJkd2ViLmNvbVwiKSkge1xuICAgICAgICAgICAgICAgIHVybC5wYXRobmFtZSA9IFwiXCI7XG4gICAgICAgICAgICAgICAgdXJsLnNlYXJjaCA9IFwiXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBycGM7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbi8vIFRPRE8gLSBtb3ZlIHRoaXMgdG8gY2hhaW5zL1xuLyoqXG4gKiBHZXQgdmFsaWQgUlBDcyBmb3IgZ2l2ZW4gY2hhaW5cbiAqIEBpbnRlcm5hbFxuICovXG5mdW5jdGlvbiBnZXRWYWxpZENoYWluUlBDcyhjaGFpbiwgY2xpZW50SWQsIG1vZGUgPSBcImh0dHBcIikge1xuICAgIGNvbnN0IHByb2Nlc3NlZFJQQ3MgPSBbXTtcbiAgICBmb3IgKGNvbnN0IHJwYyBvZiBjaGFpbi5ycGMpIHtcbiAgICAgICAgLy8gZXhjbHVkZSBSUEMgaWYgbW9kZSBtaXNtYXRjaFxuICAgICAgICBpZiAobW9kZSA9PT0gXCJodHRwXCIgJiYgIXJwYy5zdGFydHNXaXRoKFwiaHR0cFwiKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1vZGUgPT09IFwid3NcIiAmJiAhcnBjLnN0YXJ0c1dpdGgoXCJ3c1wiKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmVwbGFjZSBBUElfS0VZIHBsYWNlaG9sZGVyIHdpdGggdmFsdWVcbiAgICAgICAgaWYgKHJwYy5pbmNsdWRlcyhcIiR7VEhJUkRXRUJfQVBJX0tFWX1cIikpIHtcbiAgICAgICAgICAgIGlmIChjbGllbnRJZCkge1xuICAgICAgICAgICAgICAgIHByb2Nlc3NlZFJQQ3MucHVzaChycGMucmVwbGFjZShcIiR7VEhJUkRXRUJfQVBJX0tFWX1cIiwgY2xpZW50SWQpICtcbiAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWxUaGlzICE9PSBcInVuZGVmaW5lZFwiICYmIFwiQVBQX0JVTkRMRV9JRFwiIGluIGdsb2JhbFRoaXNcbiAgICAgICAgICAgICAgICAgICAgICAgID8gLy8gQHRzLWV4cGVjdC1lcnJvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGAvP2J1bmRsZUlkPSR7Z2xvYmFsVGhpcy5BUFBfQlVORExFX0lEfWBcbiAgICAgICAgICAgICAgICAgICAgICAgIDogXCJcIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gaWYgbm8gY2xpZW50IGlkLCBsZXQgaXQgdGhyb3VnaCB3aXRoIGVtcHR5IHN0cmluZ1xuICAgICAgICAgICAgICAgIC8vIGlmIHNlY3JldEtleSBpcyBwcmVzZW50LCBpdCB3aWxsIGJlIHVzZWQgaW4gaGVhZGVyXG4gICAgICAgICAgICAgICAgLy8gaWYgbm9uZSBhcmUgcGFzc2VkLCB3aWxsIGhhdmUgcmVkdWNlZCBhY2Nlc3NcbiAgICAgICAgICAgICAgICBwcm9jZXNzZWRSUENzLnB1c2gocnBjLnJlcGxhY2UoXCIke1RISVJEV0VCX0FQSV9LRVl9XCIsIFwiXCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBleGNsdWRlIFJQQ3Mgd2l0aCB1bmtub3duIHBsYWNlaG9sZGVyXG4gICAgICAgIGVsc2UgaWYgKHJwYy5pbmNsdWRlcyhcIiR7XCIpKSB7XG4gICAgICAgICAgICAvLyBkbyBub3RoaW5nIChqdXN0IGRvbid0IGFkZCBpdCB0byB0aGUgbGlzdClcbiAgICAgICAgfVxuICAgICAgICAvLyBhZGQgYXMgaXNcbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwcm9jZXNzZWRSUENzLnB1c2gocnBjKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAocHJvY2Vzc2VkUlBDcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyBSUEMgYXZhaWxhYmxlIGZvciBjaGFpbklkIFwiJHtjaGFpbi5jaGFpbklkfVwiIHdpdGggbW9kZSAke21vZGV9YCk7XG4gICAgfVxuICAgIHJldHVybiBwcm9jZXNzZWRSUENzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hhaW5zLmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRWYWxpZFB1YmxpY1JQQ1VybCIsImNoYWluIiwiZ2V0VmFsaWRDaGFpblJQQ3MiLCJtYXAiLCJycGMiLCJ1cmwiLCJVUkwiLCJob3N0bmFtZSIsImVuZHNXaXRoIiwicGF0aG5hbWUiLCJzZWFyY2giLCJ0b1N0cmluZyIsImUiLCJjbGllbnRJZCIsIm1vZGUiLCJwcm9jZXNzZWRSUENzIiwic3RhcnRzV2l0aCIsImluY2x1ZGVzIiwicHVzaCIsInJlcGxhY2UiLCJnbG9iYWxUaGlzIiwiQVBQX0JVTkRMRV9JRCIsImxlbmd0aCIsIkVycm9yIiwiY2hhaW5JZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/chains.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/normalizeChainId.js":
/*!**************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/utils/normalizeChainId.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeChainId: function() { return /* binding */ normalizeChainId; }\n/* harmony export */ });\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/helpers/is-hex.js\");\n/* harmony import */ var _utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n\n/**\n * @internal\n */ function normalizeChainId(chainId) {\n    if (typeof chainId === \"number\") {\n        return chainId;\n    }\n    if ((0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_0__.isHex)(chainId)) {\n        return (0,_utils_encoding_hex_js__WEBPACK_IMPORTED_MODULE_1__.hexToNumber)(chainId);\n    }\n    if (typeof chainId === \"bigint\") {\n        return Number(chainId);\n    }\n    return Number.parseInt(chainId, 10);\n} //# sourceMappingURL=normalizeChainId.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS93YWxsZXRzL3V0aWxzL25vcm1hbGl6ZUNoYWluSWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlFO0FBQ2pFOztDQUVDLEdBQ00sU0FBU0UsaUJBQWlCQyxPQUFPO0lBQ3BDLElBQUksT0FBT0EsWUFBWSxVQUFVO1FBQzdCLE9BQU9BO0lBQ1g7SUFDQSxJQUFJRiw2REFBS0EsQ0FBQ0UsVUFBVTtRQUNoQixPQUFPSCxtRUFBV0EsQ0FBQ0c7SUFDdkI7SUFDQSxJQUFJLE9BQU9BLFlBQVksVUFBVTtRQUM3QixPQUFPQyxPQUFPRDtJQUNsQjtJQUNBLE9BQU9DLE9BQU9DLFFBQVEsQ0FBQ0YsU0FBUztBQUNwQyxFQUNBLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vd2FsbGV0cy91dGlscy9ub3JtYWxpemVDaGFpbklkLmpzPzJlODciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGV4VG9OdW1iZXIsIGlzSGV4IH0gZnJvbSBcIi4uLy4uL3V0aWxzL2VuY29kaW5nL2hleC5qc1wiO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZUNoYWluSWQoY2hhaW5JZCkge1xuICAgIGlmICh0eXBlb2YgY2hhaW5JZCA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICByZXR1cm4gY2hhaW5JZDtcbiAgICB9XG4gICAgaWYgKGlzSGV4KGNoYWluSWQpKSB7XG4gICAgICAgIHJldHVybiBoZXhUb051bWJlcihjaGFpbklkKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjaGFpbklkID09PSBcImJpZ2ludFwiKSB7XG4gICAgICAgIHJldHVybiBOdW1iZXIoY2hhaW5JZCk7XG4gICAgfVxuICAgIHJldHVybiBOdW1iZXIucGFyc2VJbnQoY2hhaW5JZCwgMTApO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9ybWFsaXplQ2hhaW5JZC5qcy5tYXAiXSwibmFtZXMiOlsiaGV4VG9OdW1iZXIiLCJpc0hleCIsIm5vcm1hbGl6ZUNoYWluSWQiLCJjaGFpbklkIiwiTnVtYmVyIiwicGFyc2VJbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/utils/normalizeChainId.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viem/_esm/utils/regex.js":
/*!***********************************************!*\
  !*** ./node_modules/viem/_esm/utils/regex.js ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrayRegex: function() { return /* binding */ arrayRegex; },\n/* harmony export */   bytesRegex: function() { return /* binding */ bytesRegex; },\n/* harmony export */   integerRegex: function() { return /* binding */ integerRegex; }\n/* harmony export */ });\nconst arrayRegex = /^(.*)\\[([0-9]*)\\]$/;\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nconst bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nconst integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/; //# sourceMappingURL=regex.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vdXRpbHMvcmVnZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU8sTUFBTUEsYUFBYSxxQkFBcUI7QUFDL0Msc0RBQXNEO0FBQ3RELDJCQUEyQjtBQUNwQixNQUFNQyxhQUFhLHVDQUF1QztBQUNqRSxpRkFBaUY7QUFDakYsMkJBQTJCO0FBQ3BCLE1BQU1DLGVBQWUsaUlBQWlJLENBQzdKLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmllbS9fZXNtL3V0aWxzL3JlZ2V4LmpzP2U5ZDkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGFycmF5UmVnZXggPSAvXiguKilcXFsoWzAtOV0qKVxcXSQvO1xuLy8gYGJ5dGVzPE0+YDogYmluYXJ5IHR5cGUgb2YgYE1gIGJ5dGVzLCBgMCA8IE0gPD0gMzJgXG4vLyBodHRwczovL3JlZ2V4ci5jb20vNnZhNTVcbmV4cG9ydCBjb25zdCBieXRlc1JlZ2V4ID0gL15ieXRlcyhbMS05XXwxWzAtOV18MlswLTldfDNbMC0yXSk/JC87XG4vLyBgKHUpaW50PE0+YDogKHVuKXNpZ25lZCBpbnRlZ2VyIHR5cGUgb2YgYE1gIGJpdHMsIGAwIDwgTSA8PSAyNTZgLCBgTSAlIDggPT0gMGBcbi8vIGh0dHBzOi8vcmVnZXhyLmNvbS82djhocFxuZXhwb3J0IGNvbnN0IGludGVnZXJSZWdleCA9IC9eKHU/aW50KSg4fDE2fDI0fDMyfDQwfDQ4fDU2fDY0fDcyfDgwfDg4fDk2fDEwNHwxMTJ8MTIwfDEyOHwxMzZ8MTQ0fDE1MnwxNjB8MTY4fDE3NnwxODR8MTkyfDIwMHwyMDh8MjE2fDIyNHwyMzJ8MjQwfDI0OHwyNTYpPyQvO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVnZXguanMubWFwIl0sIm5hbWVzIjpbImFycmF5UmVnZXgiLCJieXRlc1JlZ2V4IiwiaW50ZWdlclJlZ2V4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viem/_esm/utils/regex.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viem/_esm/utils/signature/hashTypedData.js":
/*!*****************************************************************!*\
  !*** ./node_modules/viem/_esm/utils/signature/hashTypedData.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashDomain: function() { return /* binding */ hashDomain; },\n/* harmony export */   hashTypedData: function() { return /* binding */ hashTypedData; }\n/* harmony export */ });\n/* harmony import */ var _abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../abi/encodeAbiParameters.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var _data_concat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/concat.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/data/concat.js\");\n/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../encoding/toHex.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var _hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hash/keccak256.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/hash/keccak256.js\");\n/* harmony import */ var _typedData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typedData.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/typedData.js\");\n// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\n\n\n\n\n\nfunction hashTypedData(parameters) {\n    const { domain = {}, message, primaryType } = parameters;\n    const types = {\n        EIP712Domain: (0,_typedData_js__WEBPACK_IMPORTED_MODULE_0__.getTypesForEIP712Domain)({\n            domain\n        }),\n        ...parameters.types\n    };\n    // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n    // as we can't statically check this with TypeScript.\n    (0,_typedData_js__WEBPACK_IMPORTED_MODULE_0__.validateTypedData)({\n        domain,\n        message,\n        primaryType,\n        types\n    });\n    const parts = [\n        \"0x1901\"\n    ];\n    if (domain) parts.push(hashDomain({\n        domain,\n        types: types\n    }));\n    if (primaryType !== \"EIP712Domain\") parts.push(hashStruct({\n        data: message,\n        primaryType,\n        types: types\n    }));\n    return (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,_data_concat_js__WEBPACK_IMPORTED_MODULE_2__.concat)(parts));\n}\nfunction hashDomain(param) {\n    let { domain, types } = param;\n    return hashStruct({\n        data: domain,\n        primaryType: \"EIP712Domain\",\n        types\n    });\n}\nfunction hashStruct(param) {\n    let { data, primaryType, types } = param;\n    const encoded = encodeData({\n        data,\n        primaryType,\n        types\n    });\n    return (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(encoded);\n}\nfunction encodeData(param) {\n    let { data, primaryType, types } = param;\n    const encodedTypes = [\n        {\n            type: \"bytes32\"\n        }\n    ];\n    const encodedValues = [\n        hashType({\n            primaryType,\n            types\n        })\n    ];\n    for (const field of types[primaryType]){\n        const [type, value] = encodeField({\n            types,\n            name: field.name,\n            type: field.type,\n            value: data[field.name]\n        });\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return (0,_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_3__.encodeAbiParameters)(encodedTypes, encodedValues);\n}\nfunction hashType(param) {\n    let { primaryType, types } = param;\n    const encodedHashType = (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(encodeType({\n        primaryType,\n        types\n    }));\n    return (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(encodedHashType);\n}\nfunction encodeType(param) {\n    let { primaryType, types } = param;\n    let result = \"\";\n    const unsortedDeps = findTypeDependencies({\n        primaryType,\n        types\n    });\n    unsortedDeps.delete(primaryType);\n    const deps = [\n        primaryType,\n        ...Array.from(unsortedDeps).sort()\n    ];\n    for (const type of deps){\n        result += \"\".concat(type, \"(\").concat(types[type].map((param)=>{\n            let { name, type: t } = param;\n            return \"\".concat(t, \" \").concat(name);\n        }).join(\",\"), \")\");\n    }\n    return result;\n}\nfunction findTypeDependencies(param) {\n    let { primaryType: primaryType_, types } = param, results = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : new Set();\n    const match = primaryType_.match(/^\\w*/u);\n    const primaryType = match === null || match === void 0 ? void 0 : match[0];\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]){\n        findTypeDependencies({\n            primaryType: field.type,\n            types\n        }, results);\n    }\n    return results;\n}\nfunction encodeField(param) {\n    let { types, name, type, value } = param;\n    if (types[type] !== undefined) {\n        return [\n            {\n                type: \"bytes32\"\n            },\n            (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(encodeData({\n                data: value,\n                primaryType: type,\n                types\n            }))\n        ];\n    }\n    if (type === \"bytes\") {\n        const prepend = value.length % 2 ? \"0\" : \"\";\n        value = \"0x\".concat(prepend + value.slice(2));\n        return [\n            {\n                type: \"bytes32\"\n            },\n            (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)(value)\n        ];\n    }\n    if (type === \"string\") return [\n        {\n            type: \"bytes32\"\n        },\n        (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(value))\n    ];\n    if (type.lastIndexOf(\"]\") === type.length - 1) {\n        const parsedType = type.slice(0, type.lastIndexOf(\"[\"));\n        const typeValuePairs = value.map((item)=>encodeField({\n                name,\n                type: parsedType,\n                types,\n                value: item\n            }));\n        return [\n            {\n                type: \"bytes32\"\n            },\n            (0,_hash_keccak256_js__WEBPACK_IMPORTED_MODULE_1__.keccak256)((0,_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_3__.encodeAbiParameters)(typeValuePairs.map((param)=>{\n                let [t] = param;\n                return t;\n            }), typeValuePairs.map((param)=>{\n                let [, v] = param;\n                return v;\n            })))\n        ];\n    }\n    return [\n        {\n            type\n        },\n        value\n    ];\n} //# sourceMappingURL=hashTypedData.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vdXRpbHMvc2lnbmF0dXJlL2hhc2hUeXBlZERhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLG1IQUFtSDtBQUM5QztBQUMxQjtBQUNFO0FBQ0k7QUFDNkI7QUFDdkUsU0FBU00sY0FBY0MsVUFBVTtJQUNwQyxNQUFNLEVBQUVDLFNBQVMsQ0FBQyxDQUFDLEVBQUVDLE9BQU8sRUFBRUMsV0FBVyxFQUFHLEdBQUdIO0lBQy9DLE1BQU1JLFFBQVE7UUFDVkMsY0FBY1Isc0VBQXVCQSxDQUFDO1lBQUVJO1FBQU87UUFDL0MsR0FBR0QsV0FBV0ksS0FBSztJQUN2QjtJQUNBLHVGQUF1RjtJQUN2RixxREFBcUQ7SUFDckROLGdFQUFpQkEsQ0FBQztRQUNkRztRQUNBQztRQUNBQztRQUNBQztJQUNKO0lBQ0EsTUFBTUUsUUFBUTtRQUFDO0tBQVM7SUFDeEIsSUFBSUwsUUFDQUssTUFBTUMsSUFBSSxDQUFDQyxXQUFXO1FBQ2xCUDtRQUNBRyxPQUFPQTtJQUNYO0lBQ0osSUFBSUQsZ0JBQWdCLGdCQUNoQkcsTUFBTUMsSUFBSSxDQUFDRSxXQUFXO1FBQ2xCQyxNQUFNUjtRQUNOQztRQUNBQyxPQUFPQTtJQUNYO0lBQ0osT0FBT1IsNkRBQVNBLENBQUNGLHVEQUFNQSxDQUFDWTtBQUM1QjtBQUNPLFNBQVNFLFdBQVcsS0FBa0I7UUFBbEIsRUFBRVAsTUFBTSxFQUFFRyxLQUFLLEVBQUcsR0FBbEI7SUFDdkIsT0FBT0ssV0FBVztRQUNkQyxNQUFNVDtRQUNORSxhQUFhO1FBQ2JDO0lBQ0o7QUFDSjtBQUNBLFNBQVNLLFdBQVcsS0FBNkI7UUFBN0IsRUFBRUMsSUFBSSxFQUFFUCxXQUFXLEVBQUVDLEtBQUssRUFBRyxHQUE3QjtJQUNoQixNQUFNTyxVQUFVQyxXQUFXO1FBQ3ZCRjtRQUNBUDtRQUNBQztJQUNKO0lBQ0EsT0FBT1IsNkRBQVNBLENBQUNlO0FBQ3JCO0FBQ0EsU0FBU0MsV0FBVyxLQUE2QjtRQUE3QixFQUFFRixJQUFJLEVBQUVQLFdBQVcsRUFBRUMsS0FBSyxFQUFHLEdBQTdCO0lBQ2hCLE1BQU1TLGVBQWU7UUFBQztZQUFFQyxNQUFNO1FBQVU7S0FBRTtJQUMxQyxNQUFNQyxnQkFBZ0I7UUFBQ0MsU0FBUztZQUFFYjtZQUFhQztRQUFNO0tBQUc7SUFDeEQsS0FBSyxNQUFNYSxTQUFTYixLQUFLLENBQUNELFlBQVksQ0FBRTtRQUNwQyxNQUFNLENBQUNXLE1BQU1JLE1BQU0sR0FBR0MsWUFBWTtZQUM5QmY7WUFDQWdCLE1BQU1ILE1BQU1HLElBQUk7WUFDaEJOLE1BQU1HLE1BQU1ILElBQUk7WUFDaEJJLE9BQU9SLElBQUksQ0FBQ08sTUFBTUcsSUFBSSxDQUFDO1FBQzNCO1FBQ0FQLGFBQWFOLElBQUksQ0FBQ087UUFDbEJDLGNBQWNSLElBQUksQ0FBQ1c7SUFDdkI7SUFDQSxPQUFPekIsZ0ZBQW1CQSxDQUFDb0IsY0FBY0U7QUFDN0M7QUFDQSxTQUFTQyxTQUFTLEtBQXVCO1FBQXZCLEVBQUViLFdBQVcsRUFBRUMsS0FBSyxFQUFHLEdBQXZCO0lBQ2QsTUFBTWlCLGtCQUFrQjFCLHlEQUFLQSxDQUFDMkIsV0FBVztRQUFFbkI7UUFBYUM7SUFBTTtJQUM5RCxPQUFPUiw2REFBU0EsQ0FBQ3lCO0FBQ3JCO0FBQ0EsU0FBU0MsV0FBVyxLQUF1QjtRQUF2QixFQUFFbkIsV0FBVyxFQUFFQyxLQUFLLEVBQUcsR0FBdkI7SUFDaEIsSUFBSW1CLFNBQVM7SUFDYixNQUFNQyxlQUFlQyxxQkFBcUI7UUFBRXRCO1FBQWFDO0lBQU07SUFDL0RvQixhQUFhRSxNQUFNLENBQUN2QjtJQUNwQixNQUFNd0IsT0FBTztRQUFDeEI7V0FBZ0J5QixNQUFNQyxJQUFJLENBQUNMLGNBQWNNLElBQUk7S0FBRztJQUM5RCxLQUFLLE1BQU1oQixRQUFRYSxLQUFNO1FBQ3JCSixVQUFVLEdBQVduQixPQUFSVSxNQUFLLEtBRUgsT0FGTVYsS0FBSyxDQUFDVSxLQUFLLENBQzNCaUIsR0FBRyxDQUFDO2dCQUFDLEVBQUVYLElBQUksRUFBRU4sTUFBTWtCLENBQUMsRUFBRTttQkFBSyxHQUFRWixPQUFMWSxHQUFFLEtBQVEsT0FBTFo7V0FDbkNhLElBQUksQ0FBQyxNQUFLO0lBQ25CO0lBQ0EsT0FBT1Y7QUFDWDtBQUNBLFNBQVNFLHFCQUFxQixLQUFxQztRQUFyQyxFQUFFdEIsYUFBYStCLFlBQVksRUFBRTlCLEtBQUssRUFBRyxHQUFyQyxPQUF1QytCLFVBQUFBLGlFQUFVLElBQUlDO0lBQy9FLE1BQU1DLFFBQVFILGFBQWFHLEtBQUssQ0FBQztJQUNqQyxNQUFNbEMsY0FBY2tDLGtCQUFBQSw0QkFBQUEsS0FBTyxDQUFDLEVBQUU7SUFDOUIsSUFBSUYsUUFBUUcsR0FBRyxDQUFDbkMsZ0JBQWdCQyxLQUFLLENBQUNELFlBQVksS0FBS29DLFdBQVc7UUFDOUQsT0FBT0o7SUFDWDtJQUNBQSxRQUFRSyxHQUFHLENBQUNyQztJQUNaLEtBQUssTUFBTWMsU0FBU2IsS0FBSyxDQUFDRCxZQUFZLENBQUU7UUFDcENzQixxQkFBcUI7WUFBRXRCLGFBQWFjLE1BQU1ILElBQUk7WUFBRVY7UUFBTSxHQUFHK0I7SUFDN0Q7SUFDQSxPQUFPQTtBQUNYO0FBQ0EsU0FBU2hCLFlBQVksS0FBNkI7UUFBN0IsRUFBRWYsS0FBSyxFQUFFZ0IsSUFBSSxFQUFFTixJQUFJLEVBQUVJLEtBQUssRUFBRyxHQUE3QjtJQUNqQixJQUFJZCxLQUFLLENBQUNVLEtBQUssS0FBS3lCLFdBQVc7UUFDM0IsT0FBTztZQUNIO2dCQUFFekIsTUFBTTtZQUFVO1lBQ2xCbEIsNkRBQVNBLENBQUNnQixXQUFXO2dCQUFFRixNQUFNUTtnQkFBT2YsYUFBYVc7Z0JBQU1WO1lBQU07U0FDaEU7SUFDTDtJQUNBLElBQUlVLFNBQVMsU0FBUztRQUNsQixNQUFNMkIsVUFBVXZCLE1BQU13QixNQUFNLEdBQUcsSUFBSSxNQUFNO1FBQ3pDeEIsUUFBUSxLQUE4QixPQUF6QnVCLFVBQVV2QixNQUFNeUIsS0FBSyxDQUFDO1FBQ25DLE9BQU87WUFBQztnQkFBRTdCLE1BQU07WUFBVTtZQUFHbEIsNkRBQVNBLENBQUNzQjtTQUFPO0lBQ2xEO0lBQ0EsSUFBSUosU0FBUyxVQUNULE9BQU87UUFBQztZQUFFQSxNQUFNO1FBQVU7UUFBR2xCLDZEQUFTQSxDQUFDRCx5REFBS0EsQ0FBQ3VCO0tBQVE7SUFDekQsSUFBSUosS0FBSzhCLFdBQVcsQ0FBQyxTQUFTOUIsS0FBSzRCLE1BQU0sR0FBRyxHQUFHO1FBQzNDLE1BQU1HLGFBQWEvQixLQUFLNkIsS0FBSyxDQUFDLEdBQUc3QixLQUFLOEIsV0FBVyxDQUFDO1FBQ2xELE1BQU1FLGlCQUFpQjVCLE1BQU1hLEdBQUcsQ0FBQyxDQUFDZ0IsT0FBUzVCLFlBQVk7Z0JBQ25EQztnQkFDQU4sTUFBTStCO2dCQUNOekM7Z0JBQ0FjLE9BQU82QjtZQUNYO1FBQ0EsT0FBTztZQUNIO2dCQUFFakMsTUFBTTtZQUFVO1lBQ2xCbEIsNkRBQVNBLENBQUNILGdGQUFtQkEsQ0FBQ3FELGVBQWVmLEdBQUcsQ0FBQztvQkFBQyxDQUFDQyxFQUFFO3VCQUFLQTtnQkFBSWMsZUFBZWYsR0FBRyxDQUFDO29CQUFDLEdBQUdpQixFQUFFO3VCQUFLQTs7U0FDL0Y7SUFDTDtJQUNBLE9BQU87UUFBQztZQUFFbEM7UUFBSztRQUFHSTtLQUFNO0FBQzVCLEVBQ0EseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vdXRpbHMvc2lnbmF0dXJlL2hhc2hUeXBlZERhdGEuanM/ODFmNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBsZW1lbnRhdGlvbiBmb3JrZWQgYW5kIGFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vTWV0YU1hc2svZXRoLXNpZy11dGlsL2Jsb2IvbWFpbi9zcmMvc2lnbi10eXBlZC1kYXRhLnRzXG5pbXBvcnQgeyBlbmNvZGVBYmlQYXJhbWV0ZXJzLCB9IGZyb20gJy4uL2FiaS9lbmNvZGVBYmlQYXJhbWV0ZXJzLmpzJztcbmltcG9ydCB7IGNvbmNhdCB9IGZyb20gJy4uL2RhdGEvY29uY2F0LmpzJztcbmltcG9ydCB7IHRvSGV4IH0gZnJvbSAnLi4vZW5jb2RpbmcvdG9IZXguanMnO1xuaW1wb3J0IHsga2VjY2FrMjU2IH0gZnJvbSAnLi4vaGFzaC9rZWNjYWsyNTYuanMnO1xuaW1wb3J0IHsgZ2V0VHlwZXNGb3JFSVA3MTJEb21haW4sIHZhbGlkYXRlVHlwZWREYXRhLCB9IGZyb20gJy4uL3R5cGVkRGF0YS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gaGFzaFR5cGVkRGF0YShwYXJhbWV0ZXJzKSB7XG4gICAgY29uc3QgeyBkb21haW4gPSB7fSwgbWVzc2FnZSwgcHJpbWFyeVR5cGUsIH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IHR5cGVzID0ge1xuICAgICAgICBFSVA3MTJEb21haW46IGdldFR5cGVzRm9yRUlQNzEyRG9tYWluKHsgZG9tYWluIH0pLFxuICAgICAgICAuLi5wYXJhbWV0ZXJzLnR5cGVzLFxuICAgIH07XG4gICAgLy8gTmVlZCB0byBkbyBhIHJ1bnRpbWUgdmFsaWRhdGlvbiBjaGVjayBvbiBhZGRyZXNzZXMsIGJ5dGUgcmFuZ2VzLCBpbnRlZ2VyIHJhbmdlcywgZXRjXG4gICAgLy8gYXMgd2UgY2FuJ3Qgc3RhdGljYWxseSBjaGVjayB0aGlzIHdpdGggVHlwZVNjcmlwdC5cbiAgICB2YWxpZGF0ZVR5cGVkRGF0YSh7XG4gICAgICAgIGRvbWFpbixcbiAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgcHJpbWFyeVR5cGUsXG4gICAgICAgIHR5cGVzLFxuICAgIH0pO1xuICAgIGNvbnN0IHBhcnRzID0gWycweDE5MDEnXTtcbiAgICBpZiAoZG9tYWluKVxuICAgICAgICBwYXJ0cy5wdXNoKGhhc2hEb21haW4oe1xuICAgICAgICAgICAgZG9tYWluLFxuICAgICAgICAgICAgdHlwZXM6IHR5cGVzLFxuICAgICAgICB9KSk7XG4gICAgaWYgKHByaW1hcnlUeXBlICE9PSAnRUlQNzEyRG9tYWluJylcbiAgICAgICAgcGFydHMucHVzaChoYXNoU3RydWN0KHtcbiAgICAgICAgICAgIGRhdGE6IG1lc3NhZ2UsXG4gICAgICAgICAgICBwcmltYXJ5VHlwZSxcbiAgICAgICAgICAgIHR5cGVzOiB0eXBlcyxcbiAgICAgICAgfSkpO1xuICAgIHJldHVybiBrZWNjYWsyNTYoY29uY2F0KHBhcnRzKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaGFzaERvbWFpbih7IGRvbWFpbiwgdHlwZXMsIH0pIHtcbiAgICByZXR1cm4gaGFzaFN0cnVjdCh7XG4gICAgICAgIGRhdGE6IGRvbWFpbixcbiAgICAgICAgcHJpbWFyeVR5cGU6ICdFSVA3MTJEb21haW4nLFxuICAgICAgICB0eXBlcyxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGhhc2hTdHJ1Y3QoeyBkYXRhLCBwcmltYXJ5VHlwZSwgdHlwZXMsIH0pIHtcbiAgICBjb25zdCBlbmNvZGVkID0gZW5jb2RlRGF0YSh7XG4gICAgICAgIGRhdGEsXG4gICAgICAgIHByaW1hcnlUeXBlLFxuICAgICAgICB0eXBlcyxcbiAgICB9KTtcbiAgICByZXR1cm4ga2VjY2FrMjU2KGVuY29kZWQpO1xufVxuZnVuY3Rpb24gZW5jb2RlRGF0YSh7IGRhdGEsIHByaW1hcnlUeXBlLCB0eXBlcywgfSkge1xuICAgIGNvbnN0IGVuY29kZWRUeXBlcyA9IFt7IHR5cGU6ICdieXRlczMyJyB9XTtcbiAgICBjb25zdCBlbmNvZGVkVmFsdWVzID0gW2hhc2hUeXBlKHsgcHJpbWFyeVR5cGUsIHR5cGVzIH0pXTtcbiAgICBmb3IgKGNvbnN0IGZpZWxkIG9mIHR5cGVzW3ByaW1hcnlUeXBlXSkge1xuICAgICAgICBjb25zdCBbdHlwZSwgdmFsdWVdID0gZW5jb2RlRmllbGQoe1xuICAgICAgICAgICAgdHlwZXMsXG4gICAgICAgICAgICBuYW1lOiBmaWVsZC5uYW1lLFxuICAgICAgICAgICAgdHlwZTogZmllbGQudHlwZSxcbiAgICAgICAgICAgIHZhbHVlOiBkYXRhW2ZpZWxkLm5hbWVdLFxuICAgICAgICB9KTtcbiAgICAgICAgZW5jb2RlZFR5cGVzLnB1c2godHlwZSk7XG4gICAgICAgIGVuY29kZWRWYWx1ZXMucHVzaCh2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBlbmNvZGVBYmlQYXJhbWV0ZXJzKGVuY29kZWRUeXBlcywgZW5jb2RlZFZhbHVlcyk7XG59XG5mdW5jdGlvbiBoYXNoVHlwZSh7IHByaW1hcnlUeXBlLCB0eXBlcywgfSkge1xuICAgIGNvbnN0IGVuY29kZWRIYXNoVHlwZSA9IHRvSGV4KGVuY29kZVR5cGUoeyBwcmltYXJ5VHlwZSwgdHlwZXMgfSkpO1xuICAgIHJldHVybiBrZWNjYWsyNTYoZW5jb2RlZEhhc2hUeXBlKTtcbn1cbmZ1bmN0aW9uIGVuY29kZVR5cGUoeyBwcmltYXJ5VHlwZSwgdHlwZXMsIH0pIHtcbiAgICBsZXQgcmVzdWx0ID0gJyc7XG4gICAgY29uc3QgdW5zb3J0ZWREZXBzID0gZmluZFR5cGVEZXBlbmRlbmNpZXMoeyBwcmltYXJ5VHlwZSwgdHlwZXMgfSk7XG4gICAgdW5zb3J0ZWREZXBzLmRlbGV0ZShwcmltYXJ5VHlwZSk7XG4gICAgY29uc3QgZGVwcyA9IFtwcmltYXJ5VHlwZSwgLi4uQXJyYXkuZnJvbSh1bnNvcnRlZERlcHMpLnNvcnQoKV07XG4gICAgZm9yIChjb25zdCB0eXBlIG9mIGRlcHMpIHtcbiAgICAgICAgcmVzdWx0ICs9IGAke3R5cGV9KCR7dHlwZXNbdHlwZV1cbiAgICAgICAgICAgIC5tYXAoKHsgbmFtZSwgdHlwZTogdCB9KSA9PiBgJHt0fSAke25hbWV9YClcbiAgICAgICAgICAgIC5qb2luKCcsJyl9KWA7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBmaW5kVHlwZURlcGVuZGVuY2llcyh7IHByaW1hcnlUeXBlOiBwcmltYXJ5VHlwZV8sIHR5cGVzLCB9LCByZXN1bHRzID0gbmV3IFNldCgpKSB7XG4gICAgY29uc3QgbWF0Y2ggPSBwcmltYXJ5VHlwZV8ubWF0Y2goL15cXHcqL3UpO1xuICAgIGNvbnN0IHByaW1hcnlUeXBlID0gbWF0Y2g/LlswXTtcbiAgICBpZiAocmVzdWx0cy5oYXMocHJpbWFyeVR5cGUpIHx8IHR5cGVzW3ByaW1hcnlUeXBlXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH1cbiAgICByZXN1bHRzLmFkZChwcmltYXJ5VHlwZSk7XG4gICAgZm9yIChjb25zdCBmaWVsZCBvZiB0eXBlc1twcmltYXJ5VHlwZV0pIHtcbiAgICAgICAgZmluZFR5cGVEZXBlbmRlbmNpZXMoeyBwcmltYXJ5VHlwZTogZmllbGQudHlwZSwgdHlwZXMgfSwgcmVzdWx0cyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzO1xufVxuZnVuY3Rpb24gZW5jb2RlRmllbGQoeyB0eXBlcywgbmFtZSwgdHlwZSwgdmFsdWUsIH0pIHtcbiAgICBpZiAodHlwZXNbdHlwZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgeyB0eXBlOiAnYnl0ZXMzMicgfSxcbiAgICAgICAgICAgIGtlY2NhazI1NihlbmNvZGVEYXRhKHsgZGF0YTogdmFsdWUsIHByaW1hcnlUeXBlOiB0eXBlLCB0eXBlcyB9KSksXG4gICAgICAgIF07XG4gICAgfVxuICAgIGlmICh0eXBlID09PSAnYnl0ZXMnKSB7XG4gICAgICAgIGNvbnN0IHByZXBlbmQgPSB2YWx1ZS5sZW5ndGggJSAyID8gJzAnIDogJyc7XG4gICAgICAgIHZhbHVlID0gYDB4JHtwcmVwZW5kICsgdmFsdWUuc2xpY2UoMil9YDtcbiAgICAgICAgcmV0dXJuIFt7IHR5cGU6ICdieXRlczMyJyB9LCBrZWNjYWsyNTYodmFsdWUpXTtcbiAgICB9XG4gICAgaWYgKHR5cGUgPT09ICdzdHJpbmcnKVxuICAgICAgICByZXR1cm4gW3sgdHlwZTogJ2J5dGVzMzInIH0sIGtlY2NhazI1Nih0b0hleCh2YWx1ZSkpXTtcbiAgICBpZiAodHlwZS5sYXN0SW5kZXhPZignXScpID09PSB0eXBlLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgY29uc3QgcGFyc2VkVHlwZSA9IHR5cGUuc2xpY2UoMCwgdHlwZS5sYXN0SW5kZXhPZignWycpKTtcbiAgICAgICAgY29uc3QgdHlwZVZhbHVlUGFpcnMgPSB2YWx1ZS5tYXAoKGl0ZW0pID0+IGVuY29kZUZpZWxkKHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICB0eXBlOiBwYXJzZWRUeXBlLFxuICAgICAgICAgICAgdHlwZXMsXG4gICAgICAgICAgICB2YWx1ZTogaXRlbSxcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgeyB0eXBlOiAnYnl0ZXMzMicgfSxcbiAgICAgICAgICAgIGtlY2NhazI1NihlbmNvZGVBYmlQYXJhbWV0ZXJzKHR5cGVWYWx1ZVBhaXJzLm1hcCgoW3RdKSA9PiB0KSwgdHlwZVZhbHVlUGFpcnMubWFwKChbLCB2XSkgPT4gdikpKSxcbiAgICAgICAgXTtcbiAgICB9XG4gICAgcmV0dXJuIFt7IHR5cGUgfSwgdmFsdWVdO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFzaFR5cGVkRGF0YS5qcy5tYXAiXSwibmFtZXMiOlsiZW5jb2RlQWJpUGFyYW1ldGVycyIsImNvbmNhdCIsInRvSGV4Iiwia2VjY2FrMjU2IiwiZ2V0VHlwZXNGb3JFSVA3MTJEb21haW4iLCJ2YWxpZGF0ZVR5cGVkRGF0YSIsImhhc2hUeXBlZERhdGEiLCJwYXJhbWV0ZXJzIiwiZG9tYWluIiwibWVzc2FnZSIsInByaW1hcnlUeXBlIiwidHlwZXMiLCJFSVA3MTJEb21haW4iLCJwYXJ0cyIsInB1c2giLCJoYXNoRG9tYWluIiwiaGFzaFN0cnVjdCIsImRhdGEiLCJlbmNvZGVkIiwiZW5jb2RlRGF0YSIsImVuY29kZWRUeXBlcyIsInR5cGUiLCJlbmNvZGVkVmFsdWVzIiwiaGFzaFR5cGUiLCJmaWVsZCIsInZhbHVlIiwiZW5jb2RlRmllbGQiLCJuYW1lIiwiZW5jb2RlZEhhc2hUeXBlIiwiZW5jb2RlVHlwZSIsInJlc3VsdCIsInVuc29ydGVkRGVwcyIsImZpbmRUeXBlRGVwZW5kZW5jaWVzIiwiZGVsZXRlIiwiZGVwcyIsIkFycmF5IiwiZnJvbSIsInNvcnQiLCJtYXAiLCJ0Iiwiam9pbiIsInByaW1hcnlUeXBlXyIsInJlc3VsdHMiLCJTZXQiLCJtYXRjaCIsImhhcyIsInVuZGVmaW5lZCIsImFkZCIsInByZXBlbmQiLCJsZW5ndGgiLCJzbGljZSIsImxhc3RJbmRleE9mIiwicGFyc2VkVHlwZSIsInR5cGVWYWx1ZVBhaXJzIiwiaXRlbSIsInYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viem/_esm/utils/signature/hashTypedData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/viem/_esm/utils/typedData.js":
/*!***************************************************!*\
  !*** ./node_modules/viem/_esm/utils/typedData.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   domainSeparator: function() { return /* binding */ domainSeparator; },\n/* harmony export */   getTypesForEIP712Domain: function() { return /* binding */ getTypesForEIP712Domain; },\n/* harmony export */   validateTypedData: function() { return /* binding */ validateTypedData; }\n/* harmony export */ });\n/* harmony import */ var _errors_abi_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../errors/abi.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/abi.js\");\n/* harmony import */ var _errors_address_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors/address.js */ \"(app-pages-browser)/./node_modules/viem/_esm/errors/address.js\");\n/* harmony import */ var _address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./address/isAddress.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/address/isAddress.js\");\n/* harmony import */ var _data_size_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./data/size.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/data/size.js\");\n/* harmony import */ var _encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./encoding/toHex.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/encoding/toHex.js\");\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/regex.js\");\n/* harmony import */ var _signature_hashTypedData_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./signature/hashTypedData.js */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/signature/hashTypedData.js\");\n\n\n\n\n\n\n\nfunction validateTypedData(parameters) {\n    const { domain, message, primaryType, types } = parameters;\n    const validateData = (struct, data)=>{\n        for (const param of struct){\n            const { name, type } = param;\n            const value = data[name];\n            const integerMatch = type.match(_regex_js__WEBPACK_IMPORTED_MODULE_0__.integerRegex);\n            if (integerMatch && (typeof value === \"number\" || typeof value === \"bigint\")) {\n                const [_type, base, size_] = integerMatch;\n                // If number cannot be cast to a sized hex value, it is out of range\n                // and will throw.\n                (0,_encoding_toHex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(value, {\n                    signed: base === \"int\",\n                    size: Number.parseInt(size_) / 8\n                });\n            }\n            if (type === \"address\" && typeof value === \"string\" && !(0,_address_isAddress_js__WEBPACK_IMPORTED_MODULE_2__.isAddress)(value)) throw new _errors_address_js__WEBPACK_IMPORTED_MODULE_3__.InvalidAddressError({\n                address: value\n            });\n            const bytesMatch = type.match(_regex_js__WEBPACK_IMPORTED_MODULE_0__.bytesRegex);\n            if (bytesMatch) {\n                const [_type, size_] = bytesMatch;\n                if (size_ && (0,_data_size_js__WEBPACK_IMPORTED_MODULE_4__.size)(value) !== Number.parseInt(size_)) throw new _errors_abi_js__WEBPACK_IMPORTED_MODULE_5__.BytesSizeMismatchError({\n                    expectedSize: Number.parseInt(size_),\n                    givenSize: (0,_data_size_js__WEBPACK_IMPORTED_MODULE_4__.size)(value)\n                });\n            }\n            const struct = types[type];\n            if (struct) validateData(struct, value);\n        }\n    };\n    // Validate domain types.\n    if (types.EIP712Domain && domain) validateData(types.EIP712Domain, domain);\n    if (primaryType !== \"EIP712Domain\") {\n        // Validate message types.\n        const type = types[primaryType];\n        validateData(type, message);\n    }\n}\nfunction getTypesForEIP712Domain(param) {\n    let { domain } = param;\n    return [\n        typeof (domain === null || domain === void 0 ? void 0 : domain.name) === \"string\" && {\n            name: \"name\",\n            type: \"string\"\n        },\n        (domain === null || domain === void 0 ? void 0 : domain.version) && {\n            name: \"version\",\n            type: \"string\"\n        },\n        typeof (domain === null || domain === void 0 ? void 0 : domain.chainId) === \"number\" && {\n            name: \"chainId\",\n            type: \"uint256\"\n        },\n        (domain === null || domain === void 0 ? void 0 : domain.verifyingContract) && {\n            name: \"verifyingContract\",\n            type: \"address\"\n        },\n        (domain === null || domain === void 0 ? void 0 : domain.salt) && {\n            name: \"salt\",\n            type: \"bytes32\"\n        }\n    ].filter(Boolean);\n}\nfunction domainSeparator(param) {\n    let { domain } = param;\n    return (0,_signature_hashTypedData_js__WEBPACK_IMPORTED_MODULE_6__.hashDomain)({\n        domain,\n        types: {\n            EIP712Domain: getTypesForEIP712Domain({\n                domain\n            })\n        }\n    });\n} //# sourceMappingURL=typedData.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy92aWVtL19lc20vdXRpbHMvdHlwZWREYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMEQ7QUFDQztBQUNSO0FBQ2I7QUFDWTtBQUNJO0FBQ0s7QUFDcEQsU0FBU1Esa0JBQWtCQyxVQUFVO0lBQ3hDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLFdBQVcsRUFBRUMsS0FBSyxFQUFFLEdBQUdKO0lBQ2hELE1BQU1LLGVBQWUsQ0FBQ0MsUUFBUUM7UUFDMUIsS0FBSyxNQUFNQyxTQUFTRixPQUFRO1lBQ3hCLE1BQU0sRUFBRUcsSUFBSSxFQUFFQyxJQUFJLEVBQUUsR0FBR0Y7WUFDdkIsTUFBTUcsUUFBUUosSUFBSSxDQUFDRSxLQUFLO1lBQ3hCLE1BQU1HLGVBQWVGLEtBQUtHLEtBQUssQ0FBQ2hCLG1EQUFZQTtZQUM1QyxJQUFJZSxnQkFDQyxRQUFPRCxVQUFVLFlBQVksT0FBT0EsVUFBVSxRQUFPLEdBQUk7Z0JBQzFELE1BQU0sQ0FBQ0csT0FBT0MsTUFBTUMsTUFBTSxHQUFHSjtnQkFDN0Isb0VBQW9FO2dCQUNwRSxrQkFBa0I7Z0JBQ2xCakIsK0RBQVdBLENBQUNnQixPQUFPO29CQUNmTSxRQUFRRixTQUFTO29CQUNqQnJCLE1BQU13QixPQUFPQyxRQUFRLENBQUNILFNBQVM7Z0JBQ25DO1lBQ0o7WUFDQSxJQUFJTixTQUFTLGFBQWEsT0FBT0MsVUFBVSxZQUFZLENBQUNsQixnRUFBU0EsQ0FBQ2tCLFFBQzlELE1BQU0sSUFBSW5CLG1FQUFtQkEsQ0FBQztnQkFBRTRCLFNBQVNUO1lBQU07WUFDbkQsTUFBTVUsYUFBYVgsS0FBS0csS0FBSyxDQUFDakIsaURBQVVBO1lBQ3hDLElBQUl5QixZQUFZO2dCQUNaLE1BQU0sQ0FBQ1AsT0FBT0UsTUFBTSxHQUFHSztnQkFDdkIsSUFBSUwsU0FBU3RCLG1EQUFJQSxDQUFDaUIsV0FBV08sT0FBT0MsUUFBUSxDQUFDSCxRQUN6QyxNQUFNLElBQUl6QixrRUFBc0JBLENBQUM7b0JBQzdCK0IsY0FBY0osT0FBT0MsUUFBUSxDQUFDSDtvQkFDOUJPLFdBQVc3QixtREFBSUEsQ0FBQ2lCO2dCQUNwQjtZQUNSO1lBQ0EsTUFBTUwsU0FBU0YsS0FBSyxDQUFDTSxLQUFLO1lBQzFCLElBQUlKLFFBQ0FELGFBQWFDLFFBQVFLO1FBQzdCO0lBQ0o7SUFDQSx5QkFBeUI7SUFDekIsSUFBSVAsTUFBTW9CLFlBQVksSUFBSXZCLFFBQ3RCSSxhQUFhRCxNQUFNb0IsWUFBWSxFQUFFdkI7SUFDckMsSUFBSUUsZ0JBQWdCLGdCQUFnQjtRQUNoQywwQkFBMEI7UUFDMUIsTUFBTU8sT0FBT04sS0FBSyxDQUFDRCxZQUFZO1FBQy9CRSxhQUFhSyxNQUFNUjtJQUN2QjtBQUNKO0FBQ08sU0FBU3VCLHdCQUF3QixLQUFXO1FBQVgsRUFBRXhCLE1BQU0sRUFBRyxHQUFYO0lBQ3BDLE9BQU87UUFDSCxRQUFPQSxtQkFBQUEsNkJBQUFBLE9BQVFRLElBQUksTUFBSyxZQUFZO1lBQUVBLE1BQU07WUFBUUMsTUFBTTtRQUFTO1FBQ25FVCxDQUFBQSxtQkFBQUEsNkJBQUFBLE9BQVF5QixPQUFPLEtBQUk7WUFBRWpCLE1BQU07WUFBV0MsTUFBTTtRQUFTO1FBQ3JELFFBQU9ULG1CQUFBQSw2QkFBQUEsT0FBUTBCLE9BQU8sTUFBSyxZQUFZO1lBQ25DbEIsTUFBTTtZQUNOQyxNQUFNO1FBQ1Y7UUFDQVQsQ0FBQUEsbUJBQUFBLDZCQUFBQSxPQUFRMkIsaUJBQWlCLEtBQUk7WUFDekJuQixNQUFNO1lBQ05DLE1BQU07UUFDVjtRQUNBVCxDQUFBQSxtQkFBQUEsNkJBQUFBLE9BQVE0QixJQUFJLEtBQUk7WUFBRXBCLE1BQU07WUFBUUMsTUFBTTtRQUFVO0tBQ25ELENBQUNvQixNQUFNLENBQUNDO0FBQ2I7QUFDTyxTQUFTQyxnQkFBZ0IsS0FBVTtRQUFWLEVBQUUvQixNQUFNLEVBQUUsR0FBVjtJQUM1QixPQUFPSCx1RUFBVUEsQ0FBQztRQUNkRztRQUNBRyxPQUFPO1lBQ0hvQixjQUFjQyx3QkFBd0I7Z0JBQUV4QjtZQUFPO1FBQ25EO0lBQ0o7QUFDSixFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdmllbS9fZXNtL3V0aWxzL3R5cGVkRGF0YS5qcz8xODliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ5dGVzU2l6ZU1pc21hdGNoRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMvYWJpLmpzJztcbmltcG9ydCB7IEludmFsaWRBZGRyZXNzRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMvYWRkcmVzcy5qcyc7XG5pbXBvcnQgeyBpc0FkZHJlc3MgfSBmcm9tICcuL2FkZHJlc3MvaXNBZGRyZXNzLmpzJztcbmltcG9ydCB7IHNpemUgfSBmcm9tICcuL2RhdGEvc2l6ZS5qcyc7XG5pbXBvcnQgeyBudW1iZXJUb0hleCB9IGZyb20gJy4vZW5jb2RpbmcvdG9IZXguanMnO1xuaW1wb3J0IHsgYnl0ZXNSZWdleCwgaW50ZWdlclJlZ2V4IH0gZnJvbSAnLi9yZWdleC5qcyc7XG5pbXBvcnQgeyBoYXNoRG9tYWluLCB9IGZyb20gJy4vc2lnbmF0dXJlL2hhc2hUeXBlZERhdGEuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlVHlwZWREYXRhKHBhcmFtZXRlcnMpIHtcbiAgICBjb25zdCB7IGRvbWFpbiwgbWVzc2FnZSwgcHJpbWFyeVR5cGUsIHR5cGVzIH0gPSBwYXJhbWV0ZXJzO1xuICAgIGNvbnN0IHZhbGlkYXRlRGF0YSA9IChzdHJ1Y3QsIGRhdGEpID0+IHtcbiAgICAgICAgZm9yIChjb25zdCBwYXJhbSBvZiBzdHJ1Y3QpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgbmFtZSwgdHlwZSB9ID0gcGFyYW07XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGRhdGFbbmFtZV07XG4gICAgICAgICAgICBjb25zdCBpbnRlZ2VyTWF0Y2ggPSB0eXBlLm1hdGNoKGludGVnZXJSZWdleCk7XG4gICAgICAgICAgICBpZiAoaW50ZWdlck1hdGNoICYmXG4gICAgICAgICAgICAgICAgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgfHwgdHlwZW9mIHZhbHVlID09PSAnYmlnaW50JykpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbX3R5cGUsIGJhc2UsIHNpemVfXSA9IGludGVnZXJNYXRjaDtcbiAgICAgICAgICAgICAgICAvLyBJZiBudW1iZXIgY2Fubm90IGJlIGNhc3QgdG8gYSBzaXplZCBoZXggdmFsdWUsIGl0IGlzIG91dCBvZiByYW5nZVxuICAgICAgICAgICAgICAgIC8vIGFuZCB3aWxsIHRocm93LlxuICAgICAgICAgICAgICAgIG51bWJlclRvSGV4KHZhbHVlLCB7XG4gICAgICAgICAgICAgICAgICAgIHNpZ25lZDogYmFzZSA9PT0gJ2ludCcsXG4gICAgICAgICAgICAgICAgICAgIHNpemU6IE51bWJlci5wYXJzZUludChzaXplXykgLyA4LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdhZGRyZXNzJyAmJiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICFpc0FkZHJlc3ModmFsdWUpKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkQWRkcmVzc0Vycm9yKHsgYWRkcmVzczogdmFsdWUgfSk7XG4gICAgICAgICAgICBjb25zdCBieXRlc01hdGNoID0gdHlwZS5tYXRjaChieXRlc1JlZ2V4KTtcbiAgICAgICAgICAgIGlmIChieXRlc01hdGNoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW190eXBlLCBzaXplX10gPSBieXRlc01hdGNoO1xuICAgICAgICAgICAgICAgIGlmIChzaXplXyAmJiBzaXplKHZhbHVlKSAhPT0gTnVtYmVyLnBhcnNlSW50KHNpemVfKSlcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEJ5dGVzU2l6ZU1pc21hdGNoRXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWRTaXplOiBOdW1iZXIucGFyc2VJbnQoc2l6ZV8pLFxuICAgICAgICAgICAgICAgICAgICAgICAgZ2l2ZW5TaXplOiBzaXplKHZhbHVlKSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBzdHJ1Y3QgPSB0eXBlc1t0eXBlXTtcbiAgICAgICAgICAgIGlmIChzdHJ1Y3QpXG4gICAgICAgICAgICAgICAgdmFsaWRhdGVEYXRhKHN0cnVjdCwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvLyBWYWxpZGF0ZSBkb21haW4gdHlwZXMuXG4gICAgaWYgKHR5cGVzLkVJUDcxMkRvbWFpbiAmJiBkb21haW4pXG4gICAgICAgIHZhbGlkYXRlRGF0YSh0eXBlcy5FSVA3MTJEb21haW4sIGRvbWFpbik7XG4gICAgaWYgKHByaW1hcnlUeXBlICE9PSAnRUlQNzEyRG9tYWluJykge1xuICAgICAgICAvLyBWYWxpZGF0ZSBtZXNzYWdlIHR5cGVzLlxuICAgICAgICBjb25zdCB0eXBlID0gdHlwZXNbcHJpbWFyeVR5cGVdO1xuICAgICAgICB2YWxpZGF0ZURhdGEodHlwZSwgbWVzc2FnZSk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFR5cGVzRm9yRUlQNzEyRG9tYWluKHsgZG9tYWluLCB9KSB7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgdHlwZW9mIGRvbWFpbj8ubmFtZSA9PT0gJ3N0cmluZycgJiYgeyBuYW1lOiAnbmFtZScsIHR5cGU6ICdzdHJpbmcnIH0sXG4gICAgICAgIGRvbWFpbj8udmVyc2lvbiAmJiB7IG5hbWU6ICd2ZXJzaW9uJywgdHlwZTogJ3N0cmluZycgfSxcbiAgICAgICAgdHlwZW9mIGRvbWFpbj8uY2hhaW5JZCA9PT0gJ251bWJlcicgJiYge1xuICAgICAgICAgICAgbmFtZTogJ2NoYWluSWQnLFxuICAgICAgICAgICAgdHlwZTogJ3VpbnQyNTYnLFxuICAgICAgICB9LFxuICAgICAgICBkb21haW4/LnZlcmlmeWluZ0NvbnRyYWN0ICYmIHtcbiAgICAgICAgICAgIG5hbWU6ICd2ZXJpZnlpbmdDb250cmFjdCcsXG4gICAgICAgICAgICB0eXBlOiAnYWRkcmVzcycsXG4gICAgICAgIH0sXG4gICAgICAgIGRvbWFpbj8uc2FsdCAmJiB7IG5hbWU6ICdzYWx0JywgdHlwZTogJ2J5dGVzMzInIH0sXG4gICAgXS5maWx0ZXIoQm9vbGVhbik7XG59XG5leHBvcnQgZnVuY3Rpb24gZG9tYWluU2VwYXJhdG9yKHsgZG9tYWluIH0pIHtcbiAgICByZXR1cm4gaGFzaERvbWFpbih7XG4gICAgICAgIGRvbWFpbixcbiAgICAgICAgdHlwZXM6IHtcbiAgICAgICAgICAgIEVJUDcxMkRvbWFpbjogZ2V0VHlwZXNGb3JFSVA3MTJEb21haW4oeyBkb21haW4gfSksXG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlZERhdGEuanMubWFwIl0sIm5hbWVzIjpbIkJ5dGVzU2l6ZU1pc21hdGNoRXJyb3IiLCJJbnZhbGlkQWRkcmVzc0Vycm9yIiwiaXNBZGRyZXNzIiwic2l6ZSIsIm51bWJlclRvSGV4IiwiYnl0ZXNSZWdleCIsImludGVnZXJSZWdleCIsImhhc2hEb21haW4iLCJ2YWxpZGF0ZVR5cGVkRGF0YSIsInBhcmFtZXRlcnMiLCJkb21haW4iLCJtZXNzYWdlIiwicHJpbWFyeVR5cGUiLCJ0eXBlcyIsInZhbGlkYXRlRGF0YSIsInN0cnVjdCIsImRhdGEiLCJwYXJhbSIsIm5hbWUiLCJ0eXBlIiwidmFsdWUiLCJpbnRlZ2VyTWF0Y2giLCJtYXRjaCIsIl90eXBlIiwiYmFzZSIsInNpemVfIiwic2lnbmVkIiwiTnVtYmVyIiwicGFyc2VJbnQiLCJhZGRyZXNzIiwiYnl0ZXNNYXRjaCIsImV4cGVjdGVkU2l6ZSIsImdpdmVuU2l6ZSIsIkVJUDcxMkRvbWFpbiIsImdldFR5cGVzRm9yRUlQNzEyRG9tYWluIiwidmVyc2lvbiIsImNoYWluSWQiLCJ2ZXJpZnlpbmdDb250cmFjdCIsInNhbHQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiZG9tYWluU2VwYXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/viem/_esm/utils/typedData.js\n"));

/***/ })

}]);